{"version":3,"sources":["components/tests/testList/testListItem/testListItem.jsx","components/tests/testList/tests.js","components/tests/testList/testList.jsx","common/button/startButton/StartButton.jsx","components/tests/test1/testDescription/testDescription.jsx","components/tests/test1/test1.jsx","common/testMode/testMode.jsx","components/tests/test2/test2.jsx","components/tests/test1/questions/question/outerBoxes/outerBox/innerBox/innerBox.jsx","components/tests/test1/questions/question/outerBoxes/outerBox/outerBox.jsx","components/tests/test1/questions/question/outerBoxes/outerBoxHolder.jsx","common/button/answerButton/yesButton/yesButton.jsx","common/button/answerButton/noButton/noButton.jsx","components/tests/test1/questions/question/question.jsx","common/questionIntermediary/questionIntermediary.jsx","components/tests/test1/questions/questions.jsx","router/router.jsx","components/authorization.jsx","App.js","serviceWorker.js","index.js"],"names":["testListItem","state","name","url","this","props","setState","className","to","process","Component","testList","id","testName","TestList","map","test","key","Fragment","StartButton","TestDescription","Test1","TestMode","demoUrl","realUrl","Test2","InnerBox","data-innerid","symbol","OuterBox","dataInnerIds","quantity","correct","counter","index","Math","floor","random","correctCounter","innerBoxes","elem","data-id","dataId","OuterBoxHolder","outerBoxes","columns","attributes","OuterBoxes","hasCorrect","YesButton","clickFunction","type","startTime","realAnswer","automaticAnswer","fillAnswer","onClick","NoButton","Question","arrangement","cols","otherCols","updateAutomatic","timeOut","timetoShow","wrong","percent","setTimeout","i","length","qunatities","parseInt","quant1","quant2","quant3","wholeQuant","k","push","j","randomIndex","Date","userAnswers","userAnswer","QuestionIntermediary","console","log","wholeNumber","correctAnswers","isUserAnswerCorrect","toFixed","answer","updateCounter","Questions","answered","answerTime","endTime","sortedQuestions","token","whatToShow","updateState","buttonType","string","questions","axios","get","then","response","startIndex","data","indexOf","lastIndex","substring","$","ajax","headers","dataType","success","quiz","elementIndex","splice","taim","testtaim","question","questionNumber","Correct","Quantity","Wrong","procenti","quest","contentToShow","Router","path","component","exact","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6481a4b3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Router, NavLink } from \"react-router-dom\";\r\nclass testListItem extends Component {\r\n\r\n    state={\r\n        name : '',\r\n        url: ''\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        const name = this.props.name;\r\n        const url = this.props.url;\r\n        this.setState({name, url})\r\n    }\r\n\r\n    render() {\r\n        // console.log(`${process.env.PUBLIC_URL}/${this.props.url}`);\r\n        return (\r\n            <li className=\"tests-li\">\r\n                <div className=\"tests-li-hover-div\"></div>\r\n                <NavLink className=\"nav-link\" to={`${process.env.PUBLIC_URL}/${this.state.url}`}></NavLink>\r\n                <span className=\"tests-li-inner\">{this.state.name}</span>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default testListItem;","let testList = [\r\n    {\r\n        id : '1',\r\n        url: 'Test1',\r\n        testName : 'სიგნალის შემჩნევის ექსპერიმენტი'\r\n    },\r\n    {\r\n        id : '2',\r\n        url: 'Test2',\r\n        testName : 'პერცეფტული შედარება'\r\n    },\r\n    {\r\n        id : '3',\r\n        url: 'Test3',\r\n        testName : 'სტრუპის ეფექტი'\r\n    },\r\n    {\r\n        id : '4',\r\n        url: 'Test4',\r\n        testName : 'ყურადღება: ცვლილებისადმი სიბრმავე'\r\n    },\r\n    {\r\n        id : '5',\r\n        url: 'Test5',\r\n        testName : 'სელექციური ყურადღება'\r\n    },\r\n    {\r\n        id : '6',\r\n        url: 'Test6',\r\n        testName : 'რეაქციის დრო და ყურადღება'\r\n    },\r\n    {\r\n        id : '7',\r\n        url: 'Test7',\r\n        testName : 'მენტალური ხატების როტაცია'\r\n    },\r\n    {\r\n        id : '8',\r\n        url: 'Test8',\r\n        testName : 'ინფორმაციის გადამუშავების პროცესები: ლექსიკური გადაწყვეტილებები'\r\n    },\r\n    {\r\n        id : '9',\r\n        url: 'Test9',\r\n        testName : 'ხანმოკლე მეხსიერების ტესტირება. ცნობის ტესტი'\r\n    },\r\n    {\r\n        id : '10',\r\n        url: 'Test10',\r\n        testName : 'ინფორმაციის გადამუშავების პროცესები ხანგრძლივ მეხსიერებაში. კატეგორიზაცია'\r\n    },\r\n    {\r\n        id : '11',\r\n        url: 'Test11',\r\n        testName : 'მეხსიერების ტესტირების ექსპერიმენტები'\r\n    },\r\n    {\r\n        id : '12',\r\n        url: 'Test12',\r\n        testName : 'ინფორმაციის გადამუშავება: შედარება და რეაქციის სისწრაფე'\r\n    },\r\n    {\r\n        id : '13',\r\n        url: 'Test13',\r\n        testName : 'აზროვნების პროცესის როლი დამახსოვრებაში'\r\n    },\r\n    {\r\n        id : '14',\r\n        url: 'Test14',\r\n        testName : 'სოციალური სტერეოტიპების კვლევა'\r\n    }\r\n\r\n];\r\n\r\n\r\nexport default testList;\r\n","import React, { Component } from 'react';\r\nimport TestListItem from './testListItem/testListItem';\r\nimport testList from './tests.js';\r\nimport axios from 'axios';\r\n\r\n\r\nclass TestList extends Component {\r\n    state={\r\n        testList : []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({testList});\r\n    }\r\n\r\n    render() {\r\n\r\n        const TestList = this.state.testList.map(test => {\r\n            return (\r\n                <TestListItem\r\n                    key = {test.id}\r\n                    name = {test.testName}\r\n                    url ={test.url}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"choose-test\">\r\n                    <div className=\"tests\">\r\n                        <ul className=\"tests-ul\">\r\n                            {TestList}\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestList;\r\n","import React, { Component } from 'react';\r\nimport './startButton.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass StartButton extends Component {\r\n    render() {\r\n        return (\r\n        <button className=\"start-test button\">\r\n            <NavLink className=\"navLink\" to={`${process.env.PUBLIC_URL}/${this.props.url}`}></NavLink>\r\n            <span className=\"text\">დაწყება</span>\r\n        </button>\r\n);\r\n    }\r\n}\r\n\r\nexport default StartButton;","import React, { Component } from 'react';\r\nimport StartButton from '../../../../common/button/startButton/StartButton';\r\nimport './testDescription.css';\r\n\r\nclass TestDescription extends Component {\r\n    render() {\r\n        return (\r\n        <section className=\"content-holder test-detailed\">\r\n            <div className=\"test-description\">\r\n                <h1 className=\"test-name\">სიგნალის შემჩნევის ექსპერიმენტი</h1>\r\n                <p className=\"test-description-text\">\r\n                    გავრცელებული მოსაზრებით, Lorem Ipsum შემთხვევითი ტექსტი სულაც არაა. მისი ფესვები ჯერკიდევ\r\n                    ჩვ. წ. აღ-მდე 45 წლის დროინდელი კლასიკური ლათინური ლიტერატურიდან მოდის. ვირჯინიის\r\n                    შტატში მდებარე ჰემპდენ-სიდნეის კოლეჯის პროფესორმა რიჩარდ მაკკლინტოკმა აიღო ერთ-ერთი\r\n                    ყველაზე იშვიათი ლათინური სიტყვა \"consectetur\" Lorem Ipsum-პასაჟიდან და გადაწყვიტა მოეძებნა\r\n                    იგი კლასიკურ ლიტერატურაში. ძიება შედეგიანი აღმოჩნდა — ტექსტი Lorem Ipsum გადმოწერილი ყოფილ\r\n                    ა ციცერონის \"de Finibus Bonorum et Malorum\"-ის 1.10.32 და 1.10.33 თავებიდან. ეს წიგნი ეთიკის თეორიის\r\n                    ტრაქტატია, რომელიც რენესანსის პერიოდში ძალიან იყო გავრცელებული. Lorem Ipsum-ის პირველი ხაზი,\r\n                    \"Lorem ipsum dolor sit amet...\" სწორედ ამ წიგნის 1.10.32 თავიდანაა.\r\n                    გავრცელებული მოსაზრებით, Lorem Ipsum შემთხვევითი ტექსტი სულაც არაა. მისი ფესვები ჯერკიდევ\r\n                    ჩვ. წ. აღ-მდე 45 წლის დროინდელი კლასიკური ლათინური ლიტერატურიდან მოდის. ვირჯინიის\r\n                    შტატში მდებარე ჰემპდენ-სიდნეის კოლეჯის პროფესორმა რიჩარდ მაკკლინტოკმა აიღო ერთ-ერთი\r\n                    ყველაზე იშვიათი ლათინური სიტყვა \"consectetur\" Lorem Ipsum-პასაჟიდან და გადაწყვიტა მოეძებნა\r\n                    იგი კლასიკურ ლიტერატურაში. ძიება შედეგიანი აღმოჩნდა — ტექსტი Lorem Ipsum გადმოწერილი ყოფილ\r\n                    ა ციცერონის \"de Finibus Bonorum et Malorum\"-ის 1.10.32 და 1.10.33 თავებიდან. ეს წიგნი ეთიკის თეორიის\r\n                    ტრაქტატია, რომელიც რენესანსის პერიოდში ძალიან იყო გავრცელებული. Lorem Ipsum-ის პირველი ხაზი,\r\n                    \"Lorem ipsum dolor sit amet...\" სწორედ ამ წიგნის 1.10.32 თავიდანაა.\r\n                </p>\r\n                <StartButton url = \"Test1/modes\"/>\r\n            </div>\r\n        </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestDescription;","import React, { Component } from 'react';\r\nimport TestDescription from '../test1/testDescription/testDescription';\r\n\r\nclass Test1 extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <TestDescription/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test1;","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './testMode.css';\r\n\r\nclass TestMode extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"testMode\">\r\n                <div className=\"modes\">\r\n                    <div className=\"demo-mode mode\">\r\n                        <div className=\"modes-hover\"></div>\r\n                        <NavLink className=\"mode-nav\" to={`${process.env.PUBLIC_URL}/${this.props.demoUrl}`}></NavLink>\r\n                        <span className=\"mode-text\">საცდელი ვერსია</span>\r\n                    </div>\r\n                    <div className=\"real-mode mode\">\r\n                        <div className=\"modes-hover\"></div>\r\n                        <NavLink className=\"mode-nav\" to={`${process.env.PUBLIC_URL}/${this.props.realUrl}`}></NavLink>\r\n                        <span className=\"mode-text\">რეალური ტესტი</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestMode;","import React, { Component } from 'react';\r\n\r\nclass Test2 extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n              Test2  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test2;","import React, { Component } from 'react';\r\n\r\nclass InnerBox extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                    <div data-innerid={this.props.id} className=\"inner-boxes\">\r\n                        {this.props.symbol ? this.props.symbol : ''}\r\n                    </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InnerBox;","import React, { Component } from 'react';\r\nimport InnerBox from './innerBox/innerBox';\r\n\r\nclass OuterBox extends Component {\r\n    state={\r\n        dataInnerIds: [\r\n            {\r\n                id: 1,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 2,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 3,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 4,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 5,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 6,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 7,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 8,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 9,\r\n                symbol : null\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentDidMount(){\r\n        // debugger;\r\n        const quantity = this.props.quantity ? this.props.quantity : -1;\r\n        const correct = this.props.correct ? this.props.correct : -1;\r\n        // console.log(correct);\r\n        let counter = 0;\r\n        let dataInnerIds = this.state.dataInnerIds;\r\n        // console.log(quantity);\r\n        while(counter < quantity){\r\n            let index = Math.floor(Math.random() * 9);\r\n            if(dataInnerIds[index].symbol === null){\r\n                dataInnerIds[index].symbol = 'P';\r\n                counter ++;\r\n\r\n            }\r\n        }\r\n        let correctCounter = 0;\r\n        while(correctCounter < correct){\r\n            let index = Math.floor(Math.random() * 9);\r\n            if(dataInnerIds[index].symbol !== 'P'){\r\n                dataInnerIds[index].symbol = 'R';\r\n                correctCounter ++;\r\n            }\r\n        }\r\n        // console.log(dataInnerIds);\r\n        this.setState({dataInnerIds})\r\n    }\r\n\r\n    render() {\r\n        const dataInnerIds = [...this.state.dataInnerIds];\r\n        const innerBoxes = dataInnerIds.map(elem=>{\r\n            return <InnerBox\r\n                        key = {elem.id}\r\n                        symbol = {elem.symbol}\r\n                        id = {elem.id}\r\n                    />\r\n        })\r\n        // console.log(this.state.dataInnerIds);\r\n        return (\r\n        <div  className=\"outer-boxes\" data-id={this.props.dataId}>\r\n            {/* <div data-innerid=\"1\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"2\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"3\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"4\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"5\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"6\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"7\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"8\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"9\" className=\"inner-boxes\"></div> */}\r\n            {innerBoxes}\r\n        </div>\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default OuterBox;","import React, { Component } from 'react';\r\nimport InnerBox from './outerBox/innerBox/innerBox';\r\nimport OuterBox from './outerBox/outerBox';\r\nclass OuterBoxHolder extends Component {\r\n    state={\r\n        outerBoxes : [],\r\n        columns : [],\r\n        attributes : {}\r\n    }\r\n\r\n    componentDidMount(){\r\n        const outerBoxes = this.props.outerBoxes;\r\n        const columns = this.props.columns;\r\n        const attributes = this.props.attributes;\r\n        this.setState({outerBoxes, columns, attributes});\r\n    }\r\n    render() {\r\n        // console.log(this.state.outerBoxes);\r\n        // let InnerBoxes = this.state.outerBoxes.map(elem => {\r\n            \r\n        //     return  <InnerBox data-innerid={elem.id} />\r\n        // })\r\n        let OuterBoxes = this.state.outerBoxes.map(elem =>{\r\n            // console.log(elem)\r\n            return (<OuterBox\r\n                    key={elem.id}\r\n                    attributes = {this.state.attributes}\r\n                    className = {elem.className}\r\n                    dataId = {elem.id}\r\n                    columns ={this.state.columns}\r\n                    quantity = {elem.quantity}\r\n                    correct = {elem.hasCorrect}\r\n                    />);\r\n            // return <div className={elem.id}></div>\r\n        })\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {OuterBoxes}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OuterBoxHolder;","import React, { Component } from 'react';\r\nimport '../buttons.scss';\r\nclass YesButton extends Component {\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    clickFunction = (type,startTime, realAnswer, automaticAnswer) =>{\r\n        this.props.fillAnswer(type, startTime, realAnswer, automaticAnswer);\r\n    }\r\n\r\n    render() {\r\n        const {startTime, realAnswer, automaticAnswer} = {...this.props}\r\n\r\n        if(automaticAnswer){\r\n            this.clickFunction('No Answer', startTime, realAnswer,automaticAnswer )\r\n        }\r\n\r\n        return (\r\n            <button \r\n                className=\"test-button button-Yes\"\r\n                onClick = {()=>{this.clickFunction('Yes',startTime, realAnswer, false)}}\r\n            >კი</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default YesButton;","import React, { Component } from 'react';\r\nimport '../buttons.scss';\r\nclass NoButton extends Component {\r\n\r\n    clickFunction = (type,startTime, realAnswer, automaticAnswer) =>{\r\n        this.props.fillAnswer(type, startTime, realAnswer, automaticAnswer);\r\n    }\r\n\r\n    render() {\r\n        const {startTime, realAnswer, automaticAnswer} = {...this.props}\r\n        return (\r\n            <button \r\n                className=\"test-button button-No\" \r\n                onClick = {()=>{this.clickFunction('No',startTime, realAnswer, false)}}\r\n            >არა</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NoButton;","import React, { Component } from 'react';\r\nimport OuterBoxHolder from './outerBoxes/outerBoxHolder';\r\nimport YesButton from '../../../../../common/button/answerButton/yesButton/yesButton';\r\nimport NoButton from '../../../../../common/button/answerButton/noButton/noButton';\r\nimport './question.scss';\r\nclass Question extends Component {\r\n\r\n    state = {\r\n        className : 'test-to-show',\r\n        attributes:{},\r\n        columns : [\r\n            {\r\n               arrangement: 1,\r\n               cols: [1,2,3],\r\n               otherCols : [4,5,6,7,8,9]\r\n            },\r\n            {\r\n               arrangement: 2,\r\n               cols: [4,5,6],\r\n               otherCols : [1,2,3,7,8,9]\r\n            },\r\n            {\r\n               arrangement: 3,\r\n               cols: [7,8,9],\r\n               otherCols : [1,2,3,4,5,6]\r\n            },\r\n            {\r\n               arrangement: 4,\r\n               cols: [1,4,7],\r\n               otherCols : [2,3,4,5,8,9]\r\n            },\r\n            {\r\n               arrangement: 5,\r\n               cols: [2,5,8],\r\n               otherCols : [1,2,3,4,6,7]\r\n            },\r\n            {\r\n               arrangement: 6,\r\n               cols: [3,6,9],\r\n               otherCols : [1,2,4,5,7,8]\r\n            }\r\n        ],\r\n        outerBoxes : [\r\n            {\r\n                id : 1,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 2,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 3,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 4,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 5,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 6,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 7,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 8,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 9,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            }\r\n        ],\r\n        automaticAnswer : false\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        // const userAnswers = this.props.userAnswers;\r\n        const timeOut = this.props.timeOut;\r\n        const timetoShow = this.props.timetoShow;\r\n        const columns = this.state.columns;\r\n        let attributes = {};\r\n        attributes.correct = this.props.correct\r\n        attributes.quantity = this.props.quantity\r\n        attributes.wrong = this.props.wrong\r\n        attributes.arrangement = this.props.arrangement\r\n        attributes.percent = this.props.percent\r\n        setTimeout(()=>{\r\n            let className = this.state.className;\r\n            className += ' hidden';\r\n            this.setState({className});\r\n        },timetoShow);\r\n\r\n        let automaticAnswer = this.state.automaticAnswer;\r\n        setTimeout(()=>{\r\n            automaticAnswer = true;\r\n            this.setState({automaticAnswer});\r\n        },timeOut);\r\n\r\n        for(let i =0; i<columns.length; i++){\r\n            let qunatities = [];\r\n            // debugger;\r\n            if(columns[i].arrangement === parseInt(this.props.arrangement)){\r\n                // console.log(this.props.arrangement);\r\n                let quant1 = Math.floor(this.props.quantity / 3);\r\n                if (quant1 > 9){\r\n                    quant1 = quant1 - (quant1 - 9);\r\n                }\r\n                let quant2 = quant1 + 3;\r\n                if (quant2 > 9){\r\n                    quant2 = quant2 - (quant2 - 9);\r\n                }\r\n                let quant3 = this.props.quantity - quant1 - quant2;\r\n                \r\n                qunatities = [\r\n                    {\r\n                        id: columns[i].cols[0],\r\n                        quantity : quant1\r\n                    },\r\n                    {\r\n                        id: columns[i].cols[1],\r\n                        quantity : quant2\r\n                    },\r\n                    {\r\n                        id: columns[i].cols[2],\r\n                        quantity : quant3\r\n                    }\r\n                ];\r\n\r\n                let wholeQuant = this.props.wrong - this.props.quantity;\r\n                for(let k=0; k<columns[i].otherCols.length; k++){\r\n                    qunatities.push({\r\n                        id : columns[i].otherCols[k],\r\n                        quantity : Math.floor(wholeQuant / 6)\r\n                    })\r\n\r\n                }\r\n\r\n                let outerBoxes = this.state.outerBoxes;\r\n                for(let j=0; j<qunatities.length; j++){\r\n                    for(let k=0; k<outerBoxes.length; k++){\r\n                        if(outerBoxes[k].id === qunatities[j].id){\r\n                            outerBoxes[k].quantity = qunatities[j].quantity;\r\n                        }\r\n                    }   \r\n                }\r\n                let counter = 0;\r\n                while(counter < this.props.correct){\r\n                    let randomIndex = Math.floor(Math.random() * 9);\r\n                    if(outerBoxes[randomIndex].quantity < 9 && outerBoxes[randomIndex].hasCorrect == null){\r\n                        outerBoxes[randomIndex].hasCorrect = true;\r\n                        counter ++;\r\n                    }\r\n                }\r\n                this.setState({timeOut, attributes,outerBoxes});\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    updateAutomatic = () =>{\r\n        let automaticAnswer = true;\r\n        this.setState({automaticAnswer});\r\n        // console.log(nextState);\r\n    }\r\n\r\n    render() {\r\n        // const OuterBoxes = this.state.outerBoxes.map((elem,i) => {\r\n        //     return <OuterBoxHolder\r\n        //             key={elem.id}\r\n        //             attributes = {this.state.attributes}\r\n        //             className = {elem.className}\r\n        //             dataId = {elem.id}\r\n        //             columns = {this.state.columns}\r\n        //             outerBoxes = {this.state.outerBoxes}\r\n        //             />\r\n        // })\r\n\r\n        let startTime = new Date();\r\n        let timeOut = this.props.timeOut;\r\n        return (\r\n            <React.Fragment>\r\n                <div className={this.state.className} >\r\n                    {/* {OuterBoxes} */}\r\n                    <OuterBoxHolder \r\n                        attributes = {this.state.attributes}\r\n                        columns = {this.state.columns}\r\n                        outerBoxes = {this.state.outerBoxes}\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <YesButton\r\n                        fillAnswer = {this.props.fillAnswer}\r\n                        startTime = {startTime}\r\n                        realAnswer = {this.props.correct ? true: false}\r\n                        timeOut = {timeOut}\r\n                        automaticAnswer = {this.state.automaticAnswer}\r\n                    />\r\n                    <NoButton                             \r\n                        userAnswers = {this.state.userAnswers}\r\n                        userAnswer = {this.state.userAnswer}\r\n                        fillAnswer = {this.props.fillAnswer}                    \r\n                        startTime = {startTime}\r\n                        automaticAnswer = {this.state.automaticAnswer}\r\n                        />\r\n                </div>\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;","import React, { Component } from 'react';\r\nimport './questionIntermediary.css';\r\nclass QuestionIntermediary extends Component {\r\n\r\n    render() {        \r\n        console.log(this.props.userAnswers);\r\n        let {userAnswers} = {...this.props}\r\n\r\n        let wholeNumber = userAnswers.length;\r\n        let percent = 0;\r\n        let correctAnswers = 0;\r\n        for(let i=0; i<userAnswers.length; i++){\r\n            if(userAnswers[i].isUserAnswerCorrect){\r\n                correctAnswers ++;\r\n            }\r\n        }\r\n\r\n        percent = (correctAnswers / wholeNumber) * 100;\r\n        percent = percent.toFixed(2);\r\n        const answer = userAnswers[userAnswers.length - 1].isUserAnswerCorrect;\r\n        \r\n        let className = 'inner-text';\r\n        answer ? className+= ' green' :className+= ' red'\r\n\r\n        return (\r\n            <div className=\"questionIntermediary\">\r\n                <p className=\"inner-text\">სწორია {percent}%</p>\r\n                <p className={className}>თქვენი პასუხი არის {answer ? 'სწორი' : 'მცდარი'}</p>\r\n                <button onClick={this.props.updateCounter} className=\"button\">შემდეგი</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionIntermediary;","import React, { Component } from 'react';\r\nimport Question from './question/question';\r\nimport QuestionIntermediary from '../../../../common/questionIntermediary/questionIntermediary';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport './questions.scss'\r\nclass Questions extends Component {\r\n    state={\r\n        answered : false,\r\n        userAnswer : null,\r\n        realAnswer : null,\r\n        answerTime : null,\r\n        startTime : null,\r\n        endTime : null,\r\n        timetoShow: null,\r\n        timeOut : null,\r\n\r\n        userAnswers: [],\r\n        sortedQuestions: [],\r\n        counter: 0,\r\n        token : '',\r\n        whatToShow : false\r\n    }\r\n\r\n    componentDidMount(){\r\n        let sortedQuestions = [];\r\n        let questions = [];\r\n        let string;\r\n        // axios.get('http://psycologytest.loc/backend/user/signal').then(response => {console.log(response)});\r\n        // 'auth', 'checkRoleOrSuperadmin',\r\n\r\n        axios.get('http://localhost/psycology-test/backend/user/index/')\r\n            .then(response => {\r\n                string = response.data\r\n                let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n                let lastIndex = null;\r\n\r\n                for(let i=startIndex; i<string.length; i++){\r\n                    if(string[i]==='\"'){\r\n                        lastIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                string = string.substring(startIndex, lastIndex);\r\n                console.log(string);\r\n                $.ajax({\r\n                    headers: {\r\n                        'X-CSRF-TOKEN':  string\r\n                    },\r\n                    url : 'http://localhost/psycology-test/backend/user/signal',\r\n                    dataType: 'json',\r\n                    type: 'POST',\r\n                    success : response => {\r\n                        questions = response.quiz;\r\n                        while(questions.length > 0){\r\n                            let elementIndex = Math.floor(Math.random() * 150);\r\n                            if(questions[elementIndex]){\r\n                                sortedQuestions.push(questions[elementIndex]);\r\n                                questions.splice(elementIndex,1);\r\n                            }\r\n                        }\r\n                        const timetoShow = response.taim;\r\n                        const timeOut = response.testtaim\r\n                        this.setState({sortedQuestions, timetoShow, timeOut});\r\n                        console.log(sortedQuestions);\r\n                    }\r\n                })\r\n                });\r\n\r\n        \r\n        // axios.get('http://psycologytest.loc')\r\n        // .then(response => {\r\n        //     string = response.data\r\n        //     let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n        //     let lastIndex = null;\r\n\r\n        //     for(let i=startIndex; i<string.length; i++){\r\n        //         if(string[i]==='\"'){\r\n        //             lastIndex = i;\r\n        //             break;\r\n        //         }\r\n        //     }\r\n        //     string = string.substring(startIndex, lastIndex);\r\n\r\n\r\n        //     console.log(string);\r\n        //     axios.get('http://localhost/psycology-test/backend/user/signal',{\r\n        //         params : {\r\n        //         'local': 'ka'\r\n        //     }, headers:{\r\n        //         \"X-CSRF-TOKEN\": string\r\n        //     }}).then(\r\n        //         response => {\r\n        //             questions = response.data.quiz;\r\n        //             console.log(response)\r\n        //             while(questions.length > 0){\r\n        //                 let elementIndex = Math.floor(Math.random() * 150);\r\n        //                 if(questions[elementIndex]){\r\n        //                     sortedQuestions.push(questions[elementIndex]);\r\n        //                     questions.splice(elementIndex,1);\r\n        //                 }\r\n        //             }\r\n        //             const timetoShow = response.data.taim;\r\n        //             const timeOut = response.data.testtaim\r\n        //             this.setState({sortedQuestions, timetoShow, timeOut});\r\n        //             console.log(sortedQuestions);\r\n        //         });\r\n        // });\r\n\r\n\r\n    }\r\n\r\n    updateState = () =>{\r\n        let counter = this.state.counter;\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n        if(counter>=0){\r\n            counter ++;\r\n        }\r\n        else{\r\n            counter = 0;\r\n        }\r\n\r\n        this.setState({counter, whatToShow});\r\n        // console.log(this.state.counter, this.state.whatToShow);\r\n    }\r\n\r\n    fillAnswer=(buttonType, startTime, realAnswer, automaticAnswer)=>{\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n\r\n\r\n        let timeNow = new Date();\r\n        let endTime = timeNow - startTime;\r\n        let userAnswer = null;\r\n\r\n        if(buttonType === 'Yes'){\r\n            userAnswer = true;\r\n        }\r\n        if(buttonType === 'No'){\r\n            userAnswer = false;\r\n        }\r\n        if(buttonType === 'No Answer'){\r\n            userAnswer = null;\r\n        }\r\n\r\n        if(automaticAnswer){\r\n            userAnswer = null;\r\n            endTime = 3000;\r\n        }\r\n        const isUserAnswerCorrect = userAnswer === realAnswer ? true: false;\r\n        // console.log(userAnswer);\r\n\r\n\r\n        let userAnswers = this.state.userAnswers;\r\n        userAnswers.push({\r\n            userAnswer : userAnswer,\r\n            answerTime : endTime,\r\n            isUserAnswerCorrect :isUserAnswerCorrect\r\n        });\r\n\r\n        this.setState({userAnswers, whatToShow});\r\n\r\n        // console.log(userAnswers);\r\n    }\r\n\r\n    render() {\r\n        const sortedQuestions = this.state.sortedQuestions;\r\n        let question = null;\r\n        if(this.state.counter == 0 && sortedQuestions[0]){\r\n            question =\r\n            <Question\r\n                key = {0}\r\n                userAnswers = {this.state.userAnswers}\r\n                questionNumber = {0}\r\n                correct = {sortedQuestions[0].Correct}\r\n                quantity = {sortedQuestions[0].Quantity}\r\n                wrong = {sortedQuestions[0].Wrong}\r\n                arrangement = {sortedQuestions[0].arrangement}\r\n                percent = {sortedQuestions[0].procenti}\r\n                fillAnswer = {this.fillAnswer}\r\n                timeOut = {this.state.timeOut}\r\n                timetoShow = {this.state.timetoShow}\r\n\r\n            />\r\n        }\r\n        else{\r\n            question = sortedQuestions.map((quest,i) => {\r\n                if(i == this.state.counter){\r\n                    return <Question\r\n                    key = {i}\r\n                    userAnswers = {this.state.userAnswers}\r\n                    questionNumber = {i}\r\n                    // showNextQuestion = {this.state.fillAnswer}\r\n                    correct = {sortedQuestions[i].Correct}\r\n                    quantity = {sortedQuestions[i].Quantity}\r\n                    wrong = {sortedQuestions[i].Wrong}\r\n                    arrangement = {sortedQuestions[i].arrangement}\r\n                    percent = {sortedQuestions[i].procenti}\r\n                    fillAnswer = {this.fillAnswer}\r\n                    timeOut = {this.state.timeOut}\r\n                    timetoShow = {this.state.timetoShow}\r\n\r\n                />\r\n                }\r\n            });\r\n        }\r\n\r\n        // this.setState({counter});\r\n\r\n        let contentToShow = null;\r\n        let whatToShow = this.state.whatToShow;\r\n        if(whatToShow){\r\n            contentToShow = <QuestionIntermediary\r\n                                updateCounter = {this.updateState}\r\n                                userAnswers = {this.state.userAnswers}/>;\r\n            whatToShow = false;\r\n        }\r\n        else{\r\n            contentToShow = question;\r\n            whatToShow = true;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"tests-holder\">\r\n                {contentToShow}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\r\nimport Test1 from  '../components/tests/test1/test1';\r\nimport TestMode from  '../common/testMode/testMode.jsx';\r\nimport Test2 from  '../components/tests/test2/test2';\r\nimport TestList from '../components/tests/testList/testList';\r\nimport Questions from '../components/tests/test1/questions/questions';\r\nclass Router extends Component {\r\n    render() {\r\n        console.log(`${process.env.PUBLIC_URL}/`);\r\n        return (\r\n            <Switch>\r\n                <Route path={`${process.env.PUBLIC_URL}`} component={TestList} exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test1`} component={Test1} exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test2`} component={Test2} exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test1/modes`} component={\r\n                    () => <TestMode \r\n                        realUrl={`Test1/modes/questions`}\r\n                        demoUrl={`Test1/modes/demoquestions`}\r\n                        />} \r\n                    exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test1/modes/questions`} component={Questions} exact/>\r\n                {/* <Redirect from=\"/some\" Component={TestList}/> */}\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;","import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\n\r\nclass Authorization extends Component {\r\n    componentDidMount() {\r\n        $.ajax({\r\n            headers: {\r\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\r\n            },\r\n            url : 'http://localhost/psycology-test/backend/user/signal',\r\n            dataType: 'json',\r\n            type: 'POST',\r\n            success : e=>{console.log(e)}\r\n        })\r\n\r\n\r\n        // $.ajax({\r\n        //     headers: {\r\n        //         'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\r\n        //     },\r\n        //     url : 'http://localhost/psycology-test/backend/user/testpost',\r\n        //     dataType: 'json',\r\n        //     data:{\r\n        //         joni: 'dkjashkjdahj'\r\n        //     },\r\n        //     type: 'POST',\r\n        //     success : e=>{console.log(e)}\r\n        // })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                afshdjlkjfahslikj\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authorization;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport TestList from './components/tests/testList/testList';\r\nimport Router from './router/router';\r\nimport { Route, Link, BrowserRouter, Switch } from 'react-router-dom';\r\nimport Authorization from \"./components/authorization\";\r\nfunction App() {\r\n  return (\r\n      <React.Fragment>\r\n          <BrowserRouter basename=\"/\">\r\n             <Router/>\r\n          </BrowserRouter>\r\n          {/* <TestList/> */}\r\n            {/* <Authorization /> */}\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}