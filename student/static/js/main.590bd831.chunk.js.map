{"version":3,"sources":["assets/images/avatar-user.png","common/burger/burger.jsx","components/tests/testList/tests.js","components/sideNav/sideNavItem/sideNavItem.jsx","components/sideNav/sideNav.jsx","common/testMode/testMode.jsx","components/tests/testList/testListItem/testListItem.jsx","components/tests/testList/testList.jsx","common/charts/charts.jsx","common/results/results.jsx","common/button/startButton/StartButton.jsx","common/testDescription/testDescription.jsx","components/tests/test1/test1.jsx","components/tests/test2/test2quiz.js","components/tests/test2/test2.jsx","components/tests/test3/test3.jsx","components/tests/test4/test4.jsx","components/tests/test6/test6.jsx","components/tests/test7/test7quiz.js","components/tests/test7/test7.jsx","components/tests/test1/questions/question/outerBoxes/outerBox/innerBox/innerBox.jsx","components/tests/test1/questions/question/outerBoxes/outerBox/outerBox.jsx","components/tests/test1/questions/question/outerBoxes/outerBoxHolder.jsx","common/button/answerButton/yesButton/yesButton.jsx","common/button/answerButton/noButton/noButton.jsx","components/tests/test1/questions/question/question.jsx","common/questionIntermediary/questionIntermediary.jsx","components/tests/test1/questions/questions.jsx","components/tests/test2/questions/question/question.jsx","components/tests/test2/questions/questions.jsx","components/tests/test3/questions/question/element/element.jsx","components/tests/test3/questions/question/question.jsx","components/tests/test3/questions/questions.jsx","components/tests/test4/questions/question/element/element.jsx","components/tests/test4/questions/question/question.jsx","components/tests/test4/questions/questions.jsx","components/tests/test6/questions/question/element/element.jsx","components/tests/test6/questions/question/question.jsx","components/tests/test6/questions/questions.jsx","components/tests/test7/questions/question/element/element.jsx","components/tests/test7/questions/question/question.jsx","components/tests/test7/questions/questions.jsx","router/router.jsx","common/burgerArrow/burgerArrow.jsx","common/instructions/instructions.jsx","common/avatarImage/avatarImage.jsx","components/mainApp.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Burger","state","clicked","className","clickBurger","props","openNavigation","setState","this","onClick","Component","testList","id","url","testName","SideNavItem","to","process","SideNav","navigation","map","elem","key","TestMode","trialClassName","realClassName","cookie","Cookies","istestTrialNeeded","get","console","log","testPercent","parseInt","demoUrl","realUrl","testListItem","name","TestList","test","Fragment","Charts","options","chart","xaxis","categories","series","data","chartValues","x","y","element","type","width","Results","changeType","event","chartType","resultsForChart","xAxis","yAxis","i","push","answerTime","StartButton","clickFunction","isTrialNeeded","percent","findIfTrialNeeded","updateTestPercent","TestDescription","title","description","Test1","string","axios","then","response","startIndex","indexOf","length","lastIndex","substring","$","ajax","headers","dataType","success","proc","undefined","desc","error","e","test2json","Test2","Test3","Test4","Test6","test7json","Test7","InnerBox","data-innerid","symbol","OuterBox","dataInnerIds","quantity","correct","counter","index","Math","floor","random","correctCounter","innerBoxes","data-id","dataId","OuterBoxHolder","outerBoxes","columns","attributes","OuterBoxes","hasCorrect","YesButton","startTime","realAnswer","automaticAnswer","timeOut","symbo2","total","arrangement","fillAnswer","NoButton","Question","cols","otherCols","updateAutomatic","timetoShow","wrong","setTimeout","qunatities","quant1","quant2","quant3","wholeQuant","k","j","randomIndex","Date","QuestionIntermediary","elemClassName","userAnswers","wholeNumber","correctAnswers","isUserAnswerCorrect","toFixed","linkToReal","button","updateCounter","set","path","sortedQuestions","parseFloat","updateResultsForChart","answer","answered","textToShow","Questions","userAnswer","endTime","testType","token","whatToShow","parameters","updateState","buttonType","answerParameters","uuidpas","match","lastIndexOf","questions","question","pasux","arrangementNumber","totalNumber","correctAnswer","quiz","elementIndex","splice","taim","testtaim","questionNumber","Correct","Quantity","Wrong","procenti","quest","contentToShow","test1Percent","currentQuestion","isCorrect","persbig","firstSymbol","persbigpass","secondSymbol","timetest","fulltime","perssmol","test2Percent","Element","handleClick","updateEventListenerStatus","isEventListenerNeeded","keyBoardKey","document","removeEventListener","addEventListener","value","defineColors","color","falseCounter","status","el","kebord","text","test3Percent","returnElementByType","firstLetter","secondLetter","spacing","space","returnRealAnswer","toLowerCase","variant","dashoreba","pirveliaso","meoreaso","test4Percent","returnFirstElement","pirvelgilak","meoreiaso","meoregilak","elementToShow","char","returnSecondElement","mesameaso","mesamegilak","meotxeaso","meotxegilak","returnThirdElement","number","type1","type2","type3","sortedQuestions1","sortedQuestions2","sortedQuestions3","test6Percent","degree","reversed","deg","elemStyle","WebkitTransform","MozTransform","msTransform","OTransform","transform","style","gradusi","revers","testaso","test7Percent","Router","component","exact","istest1TrialNeeded","istest2TrialNeeded","istest3TrialNeeded","istest4TrialNeeded","istest6TrialNeeded","istest7TrialNeeded","BurgerArrow","openInstuctions","Instructions","AvatarImage","opened","openUserPanelHandler","src","avatar","alt","MainApp","instClassName","test1Trial","test2Trial","test3Trial","test4Trial","istest5TrialNeeded","test5Trial","test5Percent","test6Trial","test7Trial","openSideNav","results","basename","App","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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Ac,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KACrL,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KACrL,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KACrL,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KACrL,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KACrL,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KACrL,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KACrL,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KACrL,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KAAK,CAAC,GAAK,IAAI,QAAU,IAAI,SAAW,QAAQ,YAAc,KACrL,CAAC,GAAK,IAA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AAU,IAAI,QAAU,IAAI,OAAS,GACnJ,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GACnJ,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,EAAE,OAAS,GACjJ,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GACnJ,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GACnJ,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,EAAE,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GACjJ,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GACnJ,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,EAAE,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GACjJ,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,IAAI,OAAS,GACnJ,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,GAAG,OAAS,GAAG,CAAC,GAAK,IAAI,QAAU,IAAI,QAAU,GAAG,OA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","file":"static/js/main.590bd831.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar-user.59dacb37.png\";","import React, { Component } from 'react';\r\nimport './burger.css';\r\nclass Burger extends Component {\r\n    state={\r\n        clicked : false,\r\n        className : 'burger'\r\n    }\r\n\r\n    clickBurger=()=>{\r\n        let clicked = this.state.clicked;\r\n        this.props.openNavigation(clicked)\r\n        clicked = !clicked;\r\n        if (clicked) {\r\n            this.setState({clicked, className:'burger clickburger'});\r\n        }\r\n        else{\r\n            this.setState({clicked, className:'burger'})\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let className = this.state.className;\r\n        return (\r\n            <div className={className} onClick={this.clickBurger}>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Burger;","let testList = [\r\n    {\r\n        id : '1',\r\n        url: 'Test1',\r\n        testName : 'სიგნალის შემჩნევის ექსპერიმენტი'\r\n    },\r\n    {\r\n        id : '2',\r\n        url: 'Test2',\r\n        testName : 'პერცეფტული შედარება'\r\n    },\r\n    {\r\n        id : '3',\r\n        url: 'Test3',\r\n        testName : 'სტრუპის ეფექტი'\r\n    },\r\n    {\r\n        id : '4',\r\n        url: 'Test4',\r\n        testName : 'სელექციური ყურადღება'\r\n    },\r\n    {\r\n        id : '5',\r\n        url: 'Test5',\r\n        testName : 'ყურადღება: ცვლილებისადმი სიბრმავე'\r\n    },\r\n    {\r\n        id : '6',\r\n        url: 'Test6',\r\n        testName : 'რეაქციის დრო და ყურადღება'\r\n    },\r\n    {\r\n        id : '7',\r\n        url: 'Test7',\r\n        testName : 'მენტალური ხატების როტაცია'\r\n    },\r\n    {\r\n        id : '8',\r\n        url: 'Test8',\r\n        testName : 'ინფორმაციის გადამუშავების პროცესები: ლექსიკური გადაწყვეტილებები'\r\n    },\r\n    {\r\n        id : '9',\r\n        url: 'Test9',\r\n        testName : 'ხანმოკლე მეხსიერების ტესტირება. ცნობის ტესტი'\r\n    },\r\n    {\r\n        id : '10',\r\n        url: 'Test10',\r\n        testName : 'ინფორმაციის გადამუშავების პროცესები ხანგრძლივ მეხსიერებაში. კატეგორიზაცია'\r\n    },\r\n    {\r\n        id : '11',\r\n        url: 'Test11',\r\n        testName : 'მეხსიერების ტესტირების ექსპერიმენტები'\r\n    },\r\n    {\r\n        id : '12',\r\n        url: 'Test12',\r\n        testName : 'ინფორმაციის გადამუშავება: შედარება და რეაქციის სისწრაფე'\r\n    },\r\n    {\r\n        id : '13',\r\n        url: 'Test13',\r\n        testName : 'აზროვნების პროცესის როლი დამახსოვრებაში'\r\n    },\r\n    {\r\n        id : '14',\r\n        url: 'Test14',\r\n        testName : 'სოციალური სტერეოტიპების კვლევა'\r\n    }\r\n\r\n];\r\n\r\n\r\nexport default testList;\r\n","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nclass SideNavItem extends Component {\r\n    render() {\r\n        const {testName, url} = {...this.props}\r\n        return (\r\n            <li className=\"sideNav-navigation-li\">\r\n                <NavLink to={`${process.env.PUBLIC_URL}/${url}`} className=\"side-nav-link\">{testName}</NavLink>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideNavItem;","import React, { Component } from 'react';\r\nimport testList from '../tests/testList/tests';\r\nimport SideNavItem from './sideNavItem/sideNavItem';\r\nimport './sideNav.css';\r\nimport {NavLink} from 'react-router-dom';\r\nclass SideNav extends Component {\r\n\r\n    render() {\r\n        const navigation = testList.map(elem =>{\r\n            return( \r\n                <SideNavItem\r\n                    key={elem.id}\r\n                    testName = {elem.testName}\r\n                    url = {elem.url}\r\n                />\r\n            )\r\n        });\r\n        const className = this.props.className;\r\n        return (\r\n            <section className={className}>\r\n                <nav className=\"sideNav-navigation\">\r\n                    <ul className=\"sideNav-navigation-ul\">\r\n                        <li className=\"sideNav-navigation-li\">\r\n                            <NavLink to={`${process.env.PUBLIC_URL}/`} className=\"side-nav-link\">მთავარი</NavLink>\r\n                        </li>\r\n                        {navigation}\r\n                    </ul>\r\n                </nav>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideNav;","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Cookies} from 'react-cookie';\r\nimport './testMode.css';\r\n\r\nclass TestMode extends Component {\r\n\r\n    state={\r\n        trialClassName : 'mode-nav',\r\n        realClassName : 'mode-nav'\r\n    }\r\n\r\n    componentDidMount(){\r\n        let cookie = new Cookies();\r\n        let istestTrialNeeded = null;\r\n        if(this.props.istestTrialNeeded === null){\r\n            istestTrialNeeded = cookie.get('trial');\r\n        }\r\n        else{\r\n            istestTrialNeeded = this.props.istestTrialNeeded;\r\n        }\r\n        console.log(istestTrialNeeded);\r\n        let trialClassName = this.state.trialClassName;\r\n        let realClassName = this.state.realClassName;\r\n        let testPercent = this.props.testPercent;\r\n        let trialPercent = parseInt(cookie.get('trialPercent'));\r\n        if(!istestTrialNeeded){\r\n            trialClassName = 'mode-nav disabled';\r\n        }\r\n        else{\r\n            trialClassName = 'mode-nav';\r\n        }\r\n\r\n\r\n        if(testPercent > 0 || testPercent!==null){\r\n            realClassName  ='mode-nav disabled';\r\n        }\r\n        if(trialPercent >= testPercent || (testPercent <=0 || testPercent === null)){\r\n            realClassName = 'mode-nav';\r\n        }\r\n        this.setState({trialClassName, realClassName});\r\n    }\r\n\r\n    render() {\r\n        const trialClassName = this.state.trialClassName;\r\n        const realClassName = this.state.realClassName;\r\n        return (\r\n            <section className=\"testMode\">\r\n                <div className=\"modes\">\r\n                    <div className=\"demo-mode mode\">\r\n                        <div className=\"modes-hover\"></div>\r\n                        <NavLink className={trialClassName} to={`${process.env.PUBLIC_URL}/${this.props.demoUrl}`}></NavLink>\r\n                        <span className=\"mode-text\">საცდელი ვერსია</span>\r\n                    </div>\r\n                    <div className=\"real-mode mode\">\r\n                        <div className=\"modes-hover\"></div>\r\n                        <NavLink className={realClassName} to={`${process.env.PUBLIC_URL}/${this.props.realUrl}`}></NavLink>\r\n                        <span className=\"mode-text\">რეალური ტესტი</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestMode;","import React, { Component } from 'react';\r\nimport {Router, NavLink } from \"react-router-dom\";\r\nclass testListItem extends Component {\r\n\r\n    state={\r\n        name : '',\r\n        url: ''\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        const name = this.props.name;\r\n        const url = this.props.url;\r\n        this.setState({name, url})\r\n    }\r\n\r\n    render() {\r\n        // console.log(`${process.env.PUBLIC_URL}/${this.props.url}`);\r\n        return (\r\n            <li className=\"tests-li\">\r\n                <div className=\"tests-li-hover-div\"></div>\r\n                <NavLink className=\"nav-link\" to={`${process.env.PUBLIC_URL}/${this.state.url}`}></NavLink>\r\n                <span className=\"tests-li-inner\">{this.state.name}</span>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default testListItem;","import React, { Component } from 'react';\r\nimport TestListItem from './testListItem/testListItem';\r\nimport testList from './tests.js';\r\nimport axios from 'axios';\r\n\r\n\r\nclass TestList extends Component {\r\n    state={\r\n        testList : []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({testList});\r\n    }\r\n\r\n    render() {\r\n\r\n        const TestList = this.state.testList.map(test => {\r\n            return (\r\n                <TestListItem\r\n                    key = {test.id}\r\n                    name = {test.testName}\r\n                    url ={test.url}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"choose-test\">\r\n                    <div className=\"tests\">\r\n                        <ul className=\"tests-ul\">\r\n                            {TestList}\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestList;\r\n","import React, { Component } from 'react';\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass Charts extends Component {\r\n\r\n    state={\r\n        options: {\r\n            chart: {\r\n                id: \"basic-bar\"\r\n            },\r\n            xaxis: {\r\n                categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\r\n            }\r\n        },\r\n        series: [\r\n            {\r\n                name: \"series-1\",\r\n                data: [30, 40, 45, 50, 49, 60, 70, 91]\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentDidMount(){\r\n        // let chartValues = this.props.chartValues;\r\n        // console.log(this.props);\r\n        // console.log(chartValues);\r\n        // let options = {\r\n        //     chart :{\r\n        //         id: \"basic-bar\"\r\n        //     },\r\n        //     xaxis: {\r\n        //         categories : chartValues.x\r\n        //     }\r\n        // };\r\n        // let series= [\r\n        //     {\r\n        //         name: 'series-1',\r\n        //         data: chartValues.y\r\n        //     }\r\n        // ];\r\n        // this.setState({options,series});\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        let chartValues = this.props.chartValues;\r\n        console.log(this.props);\r\n        console.log(chartValues);\r\n        let options = {\r\n            chart :{\r\n                id: \"basic-bar\"\r\n            },\r\n            xaxis: {\r\n                categories : chartValues.x\r\n            }\r\n        };\r\n        let series= [\r\n            {\r\n                name: 'series-1',\r\n                data: chartValues.y\r\n            }\r\n        ];\r\n\r\n        let element = null;\r\n        if(options && series){\r\n            console.log(options, series);\r\n            element = <Chart options={options} series={series} type=\"line\" width=\"800\"/>\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                {element}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Charts;","import React, { Component } from 'react';\r\nimport Charts from '../charts/charts';\r\nimport './charts.scss'\r\nclass Results extends Component {\r\n    state={\r\n        chartValues : {}\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        const resultsForChart = this.props.resultsForChart;\r\n        let chartValues = {};\r\n        let xAxis = [];\r\n        let yAxis = [];\r\n        resultsForChart.map((elem,i)=>{\r\n            xAxis.push(i+1);\r\n            yAxis.push(elem.answerTime);\r\n        });\r\n        chartValues.x = xAxis;\r\n        chartValues.y = yAxis;\r\n        this.setState({chartValues});\r\n        console.log(chartValues, this.state.chartValues);\r\n    }\r\n    changeType=(event)=>{\r\n        let chartType = event;\r\n        this.setState({chartType});\r\n    }\r\n    render() {\r\n        let chartValues = this.state.chartValues;\r\n        console.log(chartValues);\r\n        return (\r\n            <div className=\"charts\">\r\n                <Charts \r\n                    chartValues={chartValues}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Results;","import React, { Component } from 'react';\r\nimport './startButton.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass StartButton extends Component {\r\n\r\n    clickFunction = (testName, isTrialNeeded,testPercent, percent)=>{\r\n        this.props.findIfTrialNeeded(testName, isTrialNeeded);\r\n        this.props.updateTestPercent(testPercent, percent);\r\n    }\r\n\r\n    render() {\r\n        const {url, findIfTrialNeeded, isTrialNeeded, testName, percent,testPercent} = {...this.props};\r\n        return (\r\n        <button className=\"start-test button\" onClick={()=>{this.clickFunction(testName, isTrialNeeded,testPercent,percent)}}>\r\n            <NavLink className=\"navLink\" to={`${process.env.PUBLIC_URL}/${this.props.url}`}></NavLink>\r\n            <span className=\"text\">დაწყება</span>\r\n        </button>\r\n);\r\n    }\r\n}\r\n\r\nexport default StartButton;","import React, { Component } from 'react';\r\nimport StartButton from '../button/startButton/StartButton';\r\nimport './testDescription.css';\r\n\r\nclass TestDescription extends Component {\r\n    render() {\r\n        const {title, description, url, testName} = {...this.props}\r\n        return (\r\n        <section className=\"content-holder test-detailed\">\r\n            <div className=\"test-description\">\r\n                <h1 className=\"test-name\">{title}</h1>\r\n                <p className=\"test-description-text\">\r\n                    {description}\r\n                </p>\r\n                <StartButton \r\n                    url = {url} \r\n                    findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                    updateTestPercent = {this.props.updateTestPercent}\r\n                    isTrialNeeded = {this.props.isTrialNeeded}\r\n                    percent = {this.props.percent}\r\n                    testName = {testName}\r\n                    testPercent = {this.props.testPercent}\r\n                    />\r\n            </div>\r\n        </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestDescription;","import React, { Component } from 'react';\r\nimport TestDescription from '../../../common/testDescription/testDescription';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nclass Test1 extends Component {\r\n    state={\r\n        title: null,\r\n        description: null,\r\n        isTrialNeeded : null,\r\n        percent : null\r\n    }\r\n\r\n    componentDidMount(){\r\n        let string = '';\r\n        let isTrialNeeded = this.state.isTrialNeeded;\r\n        let percent = this.state.percent;\r\n        axios.get('http://localhost/psycology-test/backend/user/index/')\r\n        .then(response => {\r\n            string = response.data\r\n            let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n            let lastIndex = null;\r\n\r\n            for(let i=startIndex; i<string.length; i++){\r\n                if(string[i]==='\"'){\r\n                    lastIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            string = string.substring(startIndex, lastIndex);\r\n\r\n            $.ajax({\r\n                headers: {\r\n                    'X-CSRF-TOKEN':  string\r\n                },\r\n                url : 'http://localhost/psycology-test/backend/user/signal',\r\n                dataType: 'json',\r\n                type: 'POST',\r\n                success: response=>{\r\n                    let title=\"\";\r\n                    let description=\"\";\r\n                    for(let test in response){\r\n                        if(response[test].proc === \"\" || response[test].proc=== undefined){\r\n                            title = response[test].title;\r\n                            description = response[test].desc;\r\n                        }\r\n                        if(response[test].proc !== \"\"){\r\n                            isTrialNeeded = true;\r\n                            percent = parseInt(response[test].proc);\r\n                            this.setState({isTrialNeeded, percent});\r\n                        }\r\n                    }\r\n\r\n                    this.setState({title, description});\r\n                },\r\n                error : response=(e)=>{\r\n                    console.log(e);\r\n                } \r\n           })\r\n        });    \r\n    }\r\n\r\n    render() {\r\n        const{title, description,isTrialNeeded,percent} = {...this.state}\r\n        return (\r\n            <TestDescription \r\n                title={title}\r\n                description={description}\r\n                url={'Test1/modes'}\r\n                findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                isTrialNeeded = {isTrialNeeded}\r\n                testName = {'istest1TrialNeeded'}\r\n                testPercent = {'test1Percent'}\r\n                percent = {percent}\r\n                updateTestPercent = {this.props.updateTestPercent}\r\n\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test1;","const test2json = \r\n\r\n{\"3\":\r\n{\"title\":\"\\u10e1\\u10d0\\u10d4\\u10e0\\u10d7\\u10d0\\u10e8\\u10dd\\u10e0\\u10d8\\u10e1\\u10dd \\u10e2\\u10d4\\u10e0\\u10db\\u10d8\\u10dc\\u10dd\\u10da\\u10dd\\u10d2\\u10d8\\u10d0: \\u10d7\\u10d0\\u10e0\\u10d2\\u10db\\u10dc\\u10d0 \\u10d3\\u10d0 \\u10e1\\u10e2\\u10d0\\u10dc\\u10d3\\u10d0\\u10e0\\u10e2\\u10d8\\u10d6\\u10d0\\u10ea\\u10d8\\u10d001\",\r\n\"desc\":\"\\u10e1\\u10d0\\u10d4\\u10e0\\u10d7\\u10d0\\u10e8\\u10dd\\u10e0\\u10d8\\u10e1\\u10dd \\u10e2\\u10d4\\u10e0\\u10db\\u10d8\\u10dc\\u10dd\\u10da\\u10dd\\u10d2\\u10d8\\u10d0: \\u10d7\\u10d0\\u10e0\\u10d2\\u10db\\u10dc\\u10d0 \\u10d3\\u10d0 \\u10e1\\u10e2\\u10d0\\u10dc\\u10d3\\u10d0\\u10e0\\u10e2\\u10d8\\u10d6\\u10d0\\u10ea\\u10d8\\u10d001\",\r\n\"raodenoba\":150,\"swori\":50,\"timetest\":100,\"fulltime\":1000,\"proc\":\"\",\r\n\"quiz\":[{\"id\":1,\"persbig\":\"t\",\"perssmol\":\"true\",\"persbigpass\":\"T\"},{\"id\":2,\"persbig\":\"x\",\"perssmol\":\"true\",\"persbigpass\":\"X\"},\r\n{\"id\":3,\"persbig\":\"i\",\"perssmol\":\"true\",\"persbigpass\":\"I\"},{\"id\":4,\"persbig\":\"H\",\"perssmol\":\"true\",\"persbigpass\":\"h\"},{\"id\":5,\"persbig\":\"w\",\"perssmol\":\"true\",\"persbigpass\":\"W\"},\r\n{\"id\":6,\"persbig\":\"z\",\"perssmol\":\"true\",\"persbigpass\":\"Z\"},{\"id\":7,\"persbig\":\"g\",\"perssmol\":\"true\",\"persbigpass\":\"G\"},{\"id\":8,\"persbig\":\"Z\",\"perssmol\":\"true\",\"persbigpass\":\"z\"},\r\n{\"id\":9,\"persbig\":\"O\",\"perssmol\":\"true\",\"persbigpass\":\"o\"},{\"id\":10,\"persbig\":\"c\",\"perssmol\":\"true\",\"persbigpass\":\"C\"},{\"id\":11,\"persbig\":\"W\",\"perssmol\":\"true\",\"persbigpass\":\"w\"},\r\n{\"id\":12,\"persbig\":\"Z\",\"perssmol\":\"true\",\"persbigpass\":\"z\"},{\"id\":13,\"persbig\":\"u\",\"perssmol\":\"true\",\"persbigpass\":\"U\"},{\"id\":14,\"persbig\":\"e\",\"perssmol\":\"true\",\"persbigpass\":\"E\"},\r\n{\"id\":15,\"persbig\":\"R\",\"perssmol\":\"true\",\"persbigpass\":\"r\"},{\"id\":16,\"persbig\":\"w\",\"perssmol\":\"true\",\"persbigpass\":\"W\"},{\"id\":17,\"persbig\":\"P\",\"perssmol\":\"true\",\"persbigpass\":\"p\"},\r\n{\"id\":18,\"persbig\":\"w\",\"perssmol\":\"true\",\"persbigpass\":\"W\"},{\"id\":19,\"persbig\":\"v\",\"perssmol\":\"true\",\"persbigpass\":\"V\"},{\"id\":20,\"persbig\":\"B\",\"perssmol\":\"true\",\"persbigpass\":\"b\"},\r\n{\"id\":21,\"persbig\":\"k\",\"perssmol\":\"true\",\"persbigpass\":\"K\"},{\"id\":22,\"persbig\":\"Q\",\"perssmol\":\"true\",\"persbigpass\":\"q\"},{\"id\":23,\"persbig\":\"h\",\"perssmol\":\"true\",\"persbigpass\":\"H\"},\r\n{\"id\":24,\"persbig\":\"x\",\"perssmol\":\"true\",\"persbigpass\":\"X\"},{\"id\":25,\"persbig\":\"B\",\"perssmol\":\"true\",\"persbigpass\":\"b\"},{\"id\":26,\"persbig\":\"z\",\"perssmol\":\"true\",\"persbigpass\":\"z\"},\r\n{\"id\":27,\"persbig\":\"w\",\"perssmol\":\"true\",\"persbigpass\":\"w\"},{\"id\":28,\"persbig\":\"D\",\"perssmol\":\"true\",\"persbigpass\":\"D\"},{\"id\":29,\"persbig\":\"p\",\"perssmol\":\"true\",\"persbigpass\":\"p\"},\r\n{\"id\":30,\"persbig\":\"y\",\"perssmol\":\"true\",\"persbigpass\":\"y\"},{\"id\":31,\"persbig\":\"H\",\"perssmol\":\"true\",\"persbigpass\":\"H\"},{\"id\":32,\"persbig\":\"g\",\"perssmol\":\"true\",\"persbigpass\":\"g\"},\r\n{\"id\":33,\"persbig\":\"z\",\"perssmol\":\"true\",\"persbigpass\":\"z\"},{\"id\":34,\"persbig\":\"H\",\"perssmol\":\"true\",\"persbigpass\":\"H\"},{\"id\":35,\"persbig\":\"f\",\"perssmol\":\"true\",\"persbigpass\":\"f\"},\r\n{\"id\":36,\"persbig\":\"m\",\"perssmol\":\"true\",\"persbigpass\":\"m\"},{\"id\":37,\"persbig\":\"c\",\"perssmol\":\"true\",\"persbigpass\":\"c\"},{\"id\":38,\"persbig\":\"V\",\"perssmol\":\"true\",\"persbigpass\":\"V\"},\r\n{\"id\":39,\"persbig\":\"i\",\"perssmol\":\"true\",\"persbigpass\":\"i\"},{\"id\":40,\"persbig\":\"E\",\"perssmol\":\"true\",\"persbigpass\":\"E\"},{\"id\":41,\"persbig\":\"j\",\"perssmol\":\"true\",\"persbigpass\":\"j\"},\r\n{\"id\":42,\"persbig\":\"Q\",\"perssmol\":\"true\",\"persbigpass\":\"Q\"},{\"id\":43,\"persbig\":\"z\",\"perssmol\":\"true\",\"persbigpass\":\"z\"},{\"id\":44,\"persbig\":\"k\",\"perssmol\":\"true\",\"persbigpass\":\"k\"},\r\n{\"id\":45,\"persbig\":\"j\",\"perssmol\":\"true\",\"persbigpass\":\"j\"},{\"id\":46,\"persbig\":\"w\",\"perssmol\":\"true\",\"persbigpass\":\"w\"},{\"id\":47,\"persbig\":\"Z\",\"perssmol\":\"true\",\"persbigpass\":\"Z\"},\r\n{\"id\":48,\"persbig\":\"m\",\"perssmol\":\"true\",\"persbigpass\":\"m\"},{\"id\":49,\"persbig\":\"m\",\"perssmol\":\"true\",\"persbigpass\":\"m\"},{\"id\":50,\"persbig\":\"q\",\"perssmol\":\"true\",\"persbigpass\":\"q\"},\r\n{\"id\":51,\"persbig\":\"s\",\"perssmol\":\"false\",\"persbigpass\":\"O\"},{\"id\":52,\"persbig\":\"V\",\"perssmol\":\"false\",\"persbigpass\":\"K\"},{\"id\":53,\"persbig\":\"D\",\"perssmol\":\"false\",\"persbigpass\":\"S\"},\r\n{\"id\":54,\"persbig\":\"A\",\"perssmol\":\"false\",\"persbigpass\":\"c\"},{\"id\":55,\"persbig\":\"p\",\"perssmol\":\"false\",\"persbigpass\":\"y\"},{\"id\":56,\"persbig\":\"G\",\"perssmol\":\"false\",\"persbigpass\":\"i\"},\r\n{\"id\":57,\"persbig\":\"c\",\"perssmol\":\"false\",\"persbigpass\":\"G\"},{\"id\":58,\"persbig\":\"K\",\"perssmol\":\"false\",\"persbigpass\":\"N\"},{\"id\":59,\"persbig\":\"C\",\"perssmol\":\"false\",\"persbigpass\":\"M\"},\r\n{\"id\":60,\"persbig\":\"t\",\"perssmol\":\"false\",\"persbigpass\":\"Q\"},{\"id\":61,\"persbig\":\"d\",\"perssmol\":\"false\",\"persbigpass\":\"C\"},{\"id\":62,\"persbig\":\"x\",\"perssmol\":\"false\",\"persbigpass\":\"u\"},\r\n{\"id\":63,\"persbig\":\"X\",\"perssmol\":\"false\",\"persbigpass\":\"f\"},{\"id\":64,\"persbig\":\"C\",\"perssmol\":\"false\",\"persbigpass\":\"Q\"},{\"id\":65,\"persbig\":\"O\",\"perssmol\":\"false\",\"persbigpass\":\"F\"},\r\n{\"id\":66,\"persbig\":\"W\",\"perssmol\":\"false\",\"persbigpass\":\"V\"},{\"id\":67,\"persbig\":\"B\",\"perssmol\":\"false\",\"persbigpass\":\"u\"},{\"id\":68,\"persbig\":\"a\",\"perssmol\":\"false\",\"persbigpass\":\"z\"},\r\n{\"id\":69,\"persbig\":\"E\",\"perssmol\":\"false\",\"persbigpass\":\"m\"},{\"id\":70,\"persbig\":\"A\",\"perssmol\":\"false\",\"persbigpass\":\"d\"},{\"id\":71,\"persbig\":\"H\",\"perssmol\":\"false\",\"persbigpass\":\"S\"},\r\n{\"id\":72,\"persbig\":\"Z\",\"perssmol\":\"false\",\"persbigpass\":\"q\"},{\"id\":73,\"persbig\":\"l\",\"perssmol\":\"false\",\"persbigpass\":\"O\"},{\"id\":74,\"persbig\":\"W\",\"perssmol\":\"false\",\"persbigpass\":\"O\"},\r\n{\"id\":75,\"persbig\":\"o\",\"perssmol\":\"false\",\"persbigpass\":\"D\"},{\"id\":76,\"persbig\":\"S\",\"perssmol\":\"false\",\"persbigpass\":\"A\"},{\"id\":77,\"persbig\":\"v\",\"perssmol\":\"false\",\"persbigpass\":\"A\"},\r\n{\"id\":78,\"persbig\":\"q\",\"perssmol\":\"false\",\"persbigpass\":\"s\"},{\"id\":79,\"persbig\":\"l\",\"perssmol\":\"false\",\"persbigpass\":\"D\"},{\"id\":80,\"persbig\":\"o\",\"perssmol\":\"false\",\"persbigpass\":\"h\"},\r\n{\"id\":81,\"persbig\":\"w\",\"perssmol\":\"false\",\"persbigpass\":\"f\"},{\"id\":82,\"persbig\":\"L\",\"perssmol\":\"false\",\"persbigpass\":\"A\"},{\"id\":83,\"persbig\":\"D\",\"perssmol\":\"false\",\"persbigpass\":\"z\"},\r\n{\"id\":84,\"persbig\":\"c\",\"perssmol\":\"false\",\"persbigpass\":\"o\"},{\"id\":85,\"persbig\":\"X\",\"perssmol\":\"false\",\"persbigpass\":\"M\"},{\"id\":86,\"persbig\":\"k\",\"perssmol\":\"false\",\"persbigpass\":\"Z\"},\r\n{\"id\":87,\"persbig\":\"R\",\"perssmol\":\"false\",\"persbigpass\":\"n\"},{\"id\":88,\"persbig\":\"s\",\"perssmol\":\"false\",\"persbigpass\":\"x\"},{\"id\":89,\"persbig\":\"b\",\"perssmol\":\"false\",\"persbigpass\":\"S\"},\r\n{\"id\":90,\"persbig\":\"t\",\"perssmol\":\"false\",\"persbigpass\":\"p\"},{\"id\":91,\"persbig\":\"x\",\"perssmol\":\"false\",\"persbigpass\":\"H\"},{\"id\":92,\"persbig\":\"b\",\"perssmol\":\"false\",\"persbigpass\":\"O\"},\r\n{\"id\":93,\"persbig\":\"K\",\"perssmol\":\"false\",\"persbigpass\":\"o\"},{\"id\":94,\"persbig\":\"Y\",\"perssmol\":\"false\",\"persbigpass\":\"i\"},{\"id\":95,\"persbig\":\"N\",\"perssmol\":\"false\",\"persbigpass\":\"z\"},\r\n{\"id\":96,\"persbig\":\"D\",\"perssmol\":\"false\",\"persbigpass\":\"m\"},{\"id\":97,\"persbig\":\"b\",\"perssmol\":\"false\",\"persbigpass\":\"A\"},{\"id\":98,\"persbig\":\"B\",\"perssmol\":\"false\",\"persbigpass\":\"H\"},\r\n{\"id\":99,\"persbig\":\"K\",\"perssmol\":\"false\",\"persbigpass\":\"L\"},{\"id\":100,\"persbig\":\"A\",\"perssmol\":\"false\",\"persbigpass\":\"S\"},{\"id\":101,\"persbig\":\"d\",\"perssmol\":\"false\",\"persbigpass\":\"q\"},\r\n{\"id\":102,\"persbig\":\"e\",\"perssmol\":\"false\",\"persbigpass\":\"Q\"},{\"id\":103,\"persbig\":\"e\",\"perssmol\":\"false\",\"persbigpass\":\"k\"},{\"id\":104,\"persbig\":\"w\",\"perssmol\":\"false\",\"persbigpass\":\"S\"},\r\n{\"id\":105,\"persbig\":\"V\",\"perssmol\":\"false\",\"persbigpass\":\"w\"},{\"id\":106,\"persbig\":\"x\",\"perssmol\":\"false\",\"persbigpass\":\"I\"},{\"id\":107,\"persbig\":\"l\",\"perssmol\":\"false\",\"persbigpass\":\"V\"},\r\n{\"id\":108,\"persbig\":\"W\",\"perssmol\":\"false\",\"persbigpass\":\"Y\"},{\"id\":109,\"persbig\":\"J\",\"perssmol\":\"false\",\"persbigpass\":\"g\"},{\"id\":110,\"persbig\":\"N\",\"perssmol\":\"false\",\"persbigpass\":\"Q\"},\r\n{\"id\":111,\"persbig\":\"E\",\"perssmol\":\"false\",\"persbigpass\":\"U\"},{\"id\":112,\"persbig\":\"d\",\"perssmol\":\"false\",\"persbigpass\":\"R\"},{\"id\":113,\"persbig\":\"W\",\"perssmol\":\"false\",\"persbigpass\":\"E\"},\r\n{\"id\":114,\"persbig\":\"N\",\"perssmol\":\"false\",\"persbigpass\":\"A\"},{\"id\":115,\"persbig\":\"z\",\"perssmol\":\"false\",\"persbigpass\":\"q\"},{\"id\":116,\"persbig\":\"j\",\"perssmol\":\"false\",\"persbigpass\":\"R\"},\r\n{\"id\":117,\"persbig\":\"Y\",\"perssmol\":\"false\",\"persbigpass\":\"l\"},{\"id\":118,\"persbig\":\"M\",\"perssmol\":\"false\",\"persbigpass\":\"o\"},{\"id\":119,\"persbig\":\"w\",\"perssmol\":\"false\",\"persbigpass\":\"V\"},\r\n{\"id\":120,\"persbig\":\"s\",\"perssmol\":\"false\",\"persbigpass\":\"V\"},{\"id\":121,\"persbig\":\"g\",\"perssmol\":\"false\",\"persbigpass\":\"b\"},{\"id\":122,\"persbig\":\"r\",\"perssmol\":\"false\",\"persbigpass\":\"D\"},\r\n{\"id\":123,\"persbig\":\"Y\",\"perssmol\":\"false\",\"persbigpass\":\"t\"},{\"id\":124,\"persbig\":\"M\",\"perssmol\":\"false\",\"persbigpass\":\"q\"},{\"id\":125,\"persbig\":\"Y\",\"perssmol\":\"false\",\"persbigpass\":\"K\"},\r\n{\"id\":126,\"persbig\":\"p\",\"perssmol\":\"false\",\"persbigpass\":\"y\"},{\"id\":127,\"persbig\":\"W\",\"perssmol\":\"false\",\"persbigpass\":\"J\"},{\"id\":128,\"persbig\":\"c\",\"perssmol\":\"false\",\"persbigpass\":\"y\"},\r\n{\"id\":129,\"persbig\":\"o\",\"perssmol\":\"false\",\"persbigpass\":\"M\"},{\"id\":130,\"persbig\":\"l\",\"perssmol\":\"false\",\"persbigpass\":\"F\"},{\"id\":131,\"persbig\":\"Z\",\"perssmol\":\"false\",\"persbigpass\":\"N\"},\r\n{\"id\":132,\"persbig\":\"V\",\"perssmol\":\"false\",\"persbigpass\":\"G\"},{\"id\":133,\"persbig\":\"N\",\"perssmol\":\"false\",\"persbigpass\":\"u\"},{\"id\":134,\"persbig\":\"G\",\"perssmol\":\"false\",\"persbigpass\":\"u\"},\r\n{\"id\":135,\"persbig\":\"w\",\"perssmol\":\"false\",\"persbigpass\":\"y\"},{\"id\":136,\"persbig\":\"x\",\"perssmol\":\"false\",\"persbigpass\":\"j\"},{\"id\":137,\"persbig\":\"z\",\"perssmol\":\"false\",\"persbigpass\":\"J\"},\r\n{\"id\":138,\"persbig\":\"z\",\"perssmol\":\"false\",\"persbigpass\":\"R\"},{\"id\":139,\"persbig\":\"H\",\"perssmol\":\"false\",\"persbigpass\":\"g\"},{\"id\":140,\"persbig\":\"d\",\"perssmol\":\"false\",\"persbigpass\":\"B\"},\r\n{\"id\":141,\"persbig\":\"A\",\"perssmol\":\"false\",\"persbigpass\":\"g\"},{\"id\":142,\"persbig\":\"D\",\"perssmol\":\"false\",\"persbigpass\":\"V\"},{\"id\":143,\"persbig\":\"Q\",\"perssmol\":\"false\",\"persbigpass\":\"u\"},\r\n{\"id\":144,\"persbig\":\"R\",\"perssmol\":\"false\",\"persbigpass\":\"f\"},{\"id\":145,\"persbig\":\"p\",\"perssmol\":\"false\",\"persbigpass\":\"e\"},{\"id\":146,\"persbig\":\"U\",\"perssmol\":\"false\",\"persbigpass\":\"K\"},\r\n{\"id\":147,\"persbig\":\"X\",\"perssmol\":\"false\",\"persbigpass\":\"P\"},{\"id\":148,\"persbig\":\"U\",\"perssmol\":\"false\",\"persbigpass\":\"Y\"},{\"id\":149,\"persbig\":\"p\",\"perssmol\":\"false\",\"persbigpass\":\"x\"},\r\n{\"id\":150,\"persbig\":\"D\",\"perssmol\":\"false\",\"persbigpass\":\"Y\"}],\r\n\"pasux\":{\"uuidpas\":\"eb4fa59a-57ea-463b-97c8-a7bca25d260d\",\"persbig\":\"on\",\"persbigpass\":\"on\",\"momxpasux\":\"on\",\"pasuxdro\":\"on\",\"upasuxtuara\":\"on\",\"sworipasux\":\"on\"},\r\n\"diagram\":{\"x\":[\"persbigpass\"],\"y\":[\"pasuxdro\"]}},\r\n\"4\":{\"title\":\"\\u10de\\u10d4\\u10e0\\u10ea\\u10d4\\u10de\\u10e2\\u10e3\\u10da\\u10d8 \\u10e8\\u10d4\\u10d3\\u10d0\\u10e0\\u10d4\\u10d1\\u10d0\",\"desc\":null,\"raodenoba\":10,\"swori\":7,\"timetest\":100,\"fulltime\":1000,\"proc\":\"30\",\r\n\"quiz\":[{\"id\":151,\"persbig\":\"A\",\"perssmol\":\"a\",\"persbigpass\":\"true\"},{\"id\":152,\"persbig\":\"G\",\"perssmol\":\"g\",\"persbigpass\":\"true\"},\r\n{\"id\":153,\"persbig\":\"v\",\"perssmol\":\"V\",\"persbigpass\":\"true\"},{\"id\":154,\"persbig\":\"n\",\"perssmol\":\"N\",\"persbigpass\":\"true\"},\r\n{\"id\":155,\"persbig\":\"v\",\"perssmol\":\"v\",\"persbigpass\":\"true\"},{\"id\":156,\"persbig\":\"p\",\"perssmol\":\"p\",\"persbigpass\":\"true\"},\r\n{\"id\":157,\"persbig\":\"u\",\"perssmol\":\"u\",\"persbigpass\":\"true\"},{\"id\":158,\"persbig\":\"F\",\"perssmol\":\"F\",\"persbigpass\":\"true\"},\r\n{\"id\":159,\"persbig\":\"U\",\"perssmol\":\"J\",\"persbigpass\":\"false\"},{\"id\":160,\"persbig\":\"y\",\"perssmol\":\"o\",\"persbigpass\":\"false\"}],\r\n\"pasux\":{\"uuidpas\":\"a88da247-f029-4007-bef3-4e439f9f8a63\",\"persbig\":\"on\",\"persbigpass\":\"on\",\"momxpasux\":\"on\",\"pasuxdro\":\"on\",\"upasuxtuara\":\"on\",\"sworipasux\":\"on\"},\r\n\"diagram\":{\"x\":[\"persbigpass\",\"persbigpass\",\"momxpasux\",\"upasuxtuara\"],\"y\":[\"pasuxdro\",\"persbig\",\"pasuxdro\",\"sworipasux\"]}}}\r\n\r\n\r\nexport default test2json;","import React, { Component } from 'react';\r\nimport TestDescription from '../../../common/testDescription/testDescription';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport test2json from './test2quiz';\r\n\r\nclass Test2 extends Component {\r\n    state={\r\n        title: null,\r\n        description: null,\r\n        isTrialNeeded : null,\r\n        percent : null\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log(test2json);\r\n        // const title = test2json.title;\r\n        // const description = test2json.desc;\r\n        // this.setState({title, description})\r\n        let string = '';\r\n        let isTrialNeeded = this.state.isTrialNeeded;\r\n        let percent = this.state.percent;\r\n        axios.get('http://localhost/psycology-test/backend/user/index/')\r\n        .then(response => {\r\n            string = response.data\r\n            let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n            let lastIndex = null;\r\n\r\n            for(let i=startIndex; i<string.length; i++){\r\n                if(string[i]==='\"'){\r\n                    lastIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            string = string.substring(startIndex, lastIndex);\r\n            console.log(string);\r\n\r\n            $.ajax({\r\n                headers: {\r\n                    'X-CSRF-TOKEN':  string\r\n                },\r\n                url : 'http://localhost/psycology-test/backend/user/percJson',\r\n                dataType: 'json',\r\n                type: 'POST',\r\n                success: response=>{\r\n                    let title=\"\";\r\n                    let description=\"\";\r\n                    for(let test in response){\r\n                        if(response[test].proc === \"\" || response[test].proc=== undefined){\r\n                            title = response[test].title;\r\n                            description = response[test].desc;\r\n                        }\r\n                        if(response[test].proc !== \"\"){\r\n                            isTrialNeeded = true;\r\n                            percent = parseInt(response[test].proc);\r\n                            this.setState({isTrialNeeded, percent});\r\n\r\n                        }\r\n                    }\r\n                    this.setState({title, description});\r\n                }\r\n           })\r\n        });    \r\n    }\r\n    render() {\r\n        const{title, description,isTrialNeeded,percent} = {...this.state}\r\n        return (\r\n            <TestDescription \r\n                title={title}\r\n                description={description}\r\n                url={'Test2/modes'}\r\n                findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                isTrialNeeded = {isTrialNeeded}\r\n                testName = {'istest2TrialNeeded'}\r\n                testPercent = {'test2Percent'}\r\n                percent = {percent}\r\n                updateTestPercent = {this.props.updateTestPercent}\r\n\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test2;","import React, { Component } from 'react';\r\nimport test3json from './test3quiz';\r\nimport TestDescription from \"../../../common/testDescription/testDescription\"\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\n\r\nclass Test3 extends Component {\r\n    state ={\r\n        title: null,\r\n        description: null,\r\n        isTrialNeeded : null,\r\n        percent : null\r\n    }\r\n\r\n    componentDidMount(){\r\n        // for development\r\n        // const title = test3json.title;\r\n        // const description = test3json.desc;\r\n        // this.setState({title, description})\r\n\r\n\r\n        //for build\r\n        let string=\"\";\r\n        let isTrialNeeded = this.state.isTrialNeeded;\r\n        let percent = this.state.percent;\r\n        axios.get('http://localhost/psycology-test/backend/user/index/')\r\n        .then(response => {\r\n            string = response.data\r\n            let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n            let lastIndex = null;\r\n\r\n            for(let i=startIndex; i<string.length; i++){\r\n                if(string[i]==='\"'){\r\n                    lastIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            string = string.substring(startIndex, lastIndex);\r\n            console.log(string);\r\n\r\n            $.ajax({\r\n                headers: {\r\n                    'X-CSRF-TOKEN':  string\r\n                },\r\n                url : 'http://localhost/psycology-test/backend/user/strupJson',\r\n                dataType: 'json',\r\n                type: 'POST',\r\n                success: response=>{\r\n                    let title=\"\";\r\n                    let description=\"\";\r\n                    for(let test in response){\r\n                        if(response[test].proc === \"\" || response[test].proc=== undefined){\r\n                            title = response[test].title;\r\n                            description = response[test].desc;\r\n                        }\r\n                        if(response[test].proc !== \"\"){\r\n                            isTrialNeeded = true;\r\n                            percent = parseInt(response[test].proc);\r\n                            this.setState({isTrialNeeded, percent});\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    this.setState({title, description});                \r\n                }\r\n           })\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {title, description,isTrialNeeded,percent} = {...this.state}\r\n\r\n        return (\r\n            <TestDescription\r\n                title={title}\r\n                description={description}\r\n                url={'Test3/modes'}\r\n                findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                isTrialNeeded = {isTrialNeeded}\r\n                testName = {'istest3TrialNeeded'}\r\n                testPercent = {'test3Percent'}\r\n                percent = {percent}\r\n                updateTestPercent = {this.props.updateTestPercent}\r\n\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test3;","import React, { Component } from 'react';\r\nimport test4json from './test4quiz';\r\nimport TestDescription from \"../../../common/testDescription/testDescription\"\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\n\r\n\r\nclass Test4 extends Component {\r\n    state={\r\n        title: null,\r\n        description: null,\r\n        isTrialNeeded : null,\r\n        percent : null\r\n    }\r\n\r\n    componentDidMount(){\r\n        //varianti 1 erti shuashi da meore romelime mxares\r\n\r\n        //varianti 2 meore shuashia prirveli romelime mxares\r\n\r\n        //varianti 3 priveli shuashi da asqet iqit sxvebi\r\n\r\n        //varianti 4 meore shuashi da pirveli aqet iqit\r\n\r\n        // for development\r\n        // const title = test4json.title;\r\n        // const description = test4json.desc;\r\n        // this.setState({title, description});\r\n\r\n\r\n        //for build\r\n        let string=\"\";\r\n        let isTrialNeeded = this.state.isTrialNeeded;\r\n        let percent = this.state.percent;\r\n        axios.get('http://localhost/psycology-test/backend/user/index/')\r\n        .then(response => {\r\n            string = response.data\r\n            let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n            let lastIndex = null;\r\n\r\n            for(let i=startIndex; i<string.length; i++){\r\n                if(string[i]==='\"'){\r\n                    lastIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            string = string.substring(startIndex, lastIndex);\r\n            console.log(string);\r\n\r\n            $.ajax({\r\n                headers: {\r\n                    'X-CSRF-TOKEN':  string\r\n                },\r\n                url : 'http://localhost/psycology-test/backend/user/seleqcJson',\r\n                dataType: 'json',\r\n                type: 'POST',\r\n                success: response=>{\r\n                    let title=\"\";\r\n                    let description=\"\";\r\n                    for(let test in response){\r\n                        if(response[test].proc === \"\" || response[test].proc=== undefined){\r\n                            title = response[test].title;\r\n                            description = response[test].desc;\r\n                        }\r\n                        if(response[test].proc !== \"\"){\r\n                            isTrialNeeded = true;\r\n                            percent = parseInt(response[test].proc);\r\n                            this.setState({isTrialNeeded, percent});\r\n                        }\r\n\r\n                    }\r\n\r\n                    this.setState({title, description});\r\n                }\r\n           })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {title, description, isTrialNeeded,percent} = {...this.state}\r\n        return (\r\n            <TestDescription\r\n                title={title}\r\n                description={description}\r\n                url={'Test4/modes'}\r\n                findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                isTrialNeeded = {isTrialNeeded}\r\n                testName = {'istest4TrialNeeded'}\r\n                testPercent = {'test4Percent'}\r\n                percent = {percent}\r\n                updateTestPercent = {this.props.updateTestPercent}\r\n\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test4;","import React, { Component } from 'react';\r\nimport test6json from './test6quiz';\r\nimport TestDescription from \"../../../common/testDescription/testDescription\"\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\n\r\n\r\nclass Test6 extends Component {\r\n    state={\r\n        title: null,\r\n        description: null,\r\n        isTrialNeeded : null,\r\n        percent : null\r\n    }\r\n\r\n    componentDidMount(){\r\n        // for development\r\n        // const title = test6json.title;\r\n        // const description = test6json.desc;\r\n        // this.setState({title, description})\r\n\r\n\r\n        //for build\r\n        let string=\"\";\r\n        let isTrialNeeded = this.state.isTrialNeeded;\r\n        let percent = this.state.percent;\r\n        axios.get('http://localhost/psycology-test/backend/user/index/')\r\n        .then(response => {\r\n            string = response.data\r\n            let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n            let lastIndex = null;\r\n\r\n            for(let i=startIndex; i<string.length; i++){\r\n                if(string[i]==='\"'){\r\n                    lastIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            string = string.substring(startIndex, lastIndex);\r\n            console.log(string);\r\n\r\n            $.ajax({\r\n                headers: {\r\n                    'X-CSRF-TOKEN':  string\r\n                },\r\n                url : 'http://localhost/psycology-test/backend/user/mentJson',\r\n                dataType: 'json',\r\n                type: 'POST',\r\n                success: response=>{\r\n                    let title=\"\";\r\n                    let description=\"\";\r\n                    for(let test in response){\r\n                        if(response[test].proc === \"\" || response[test].proc=== undefined){\r\n                            title = response[test].title;\r\n                            description = response[test].desc;\r\n                        }\r\n                        if(response[test].proc !== \"\"){\r\n                            isTrialNeeded = true;\r\n                            this.setState({isTrialNeeded});\r\n                            percent = parseInt(response[test].proc);\r\n                            this.setState({isTrialNeeded, percent});\r\n                        }\r\n\r\n                    }\r\n\r\n                    this.setState({title, description});          \r\n                }\r\n           })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {title, description, isTrialNeeded,percent} = {...this.state}\r\n        return (\r\n            <TestDescription\r\n                title={title}\r\n                description={description}\r\n                url={'Test6/modes'}\r\n                findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                isTrialNeeded = {isTrialNeeded}\r\n                testName = {'istest6TrialNeeded'}\r\n                testPercent = {'test6Percent'}\r\n                percent = {percent}\r\n                updateTestPercent = {this.props.updateTestPercent}\r\n\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test6;","const test7json = {\r\n    \"5\":{\"title\":\"\\u10e1\\u10d0\\u10d4\\u10e0\\u10d7\\u10d0\\u10e8\\u10dd\\u10e0\\u10d8\\u10e1\\u10dd \\u10e2\\u10d4\\u10e0\\u10db\\u10d8\\u10dc\\u10dd\\u10da\\u10dd\\u10d2\\u10d8\\u10d0: \\u10d7\\u10d0\\u10e0\\u10d2\\u10db\\u10dc\\u10d0 \\u10d3\\u10d0 \\u10e1\\u10e2\\u10d0\\u10dc\\u10d3\\u10d0\\u10e0\\u10e2\\u10d8\\u10d6\\u10d0\\u10ea\\u10d8\\u10d00\",\r\n    \"desc\":\"\\u10e1\\u10d0\\u10d4\\u10e0\\u10d7\\u10d0\\u10e8\\u10dd\\u10e0\\u10d8\\u10e1\\u10dd \\u10e2\\u10d4\\u10e0\\u10db\\u10d8\\u10dc\\u10dd\\u10da\\u10dd\\u10d2\\u10d8\\u10d0: \\u10d7\\u10d0\\u10e0\\u10d2\\u10db\\u10dc\\u10d0 \\u10d3\\u10d0 \\u10e1\\u10e2\\u10d0\\u10dc\\u10d3\\u10d0\\u10e0\\u10e2\\u10d8\\u10d6\\u10d0\\u10ea\\u10d8\\u10d00\",\r\n    \"taim\":100,\"testtaim\":1000,\"proc\":\"\",\"quiz\":[{\"id\":301,\"testaso\":\"G\",\"gradusi\":0,\"revers\":0},{\"id\":302,\"testaso\":\"L\",\"gradusi\":0,\"revers\":1},\r\n    {\"id\":303,\"testaso\":\"H\",\"gradusi\":0,\"revers\":0},{\"id\":304,\"testaso\":\"I\",\"gradusi\":250,\"revers\":1},{\"id\":305,\"testaso\":\"U\",\"gradusi\":50,\"revers\":1},\r\n    {\"id\":306,\"testaso\":\"N\",\"gradusi\":300,\"revers\":1},{\"id\":307,\"testaso\":\"N\",\"gradusi\":200,\"revers\":1},{\"id\":308,\"testaso\":\"J\",\"gradusi\":100,\"revers\":0},\r\n    {\"id\":309,\"testaso\":\"F\",\"gradusi\":250,\"revers\":1},{\"id\":310,\"testaso\":\"J\",\"gradusi\":350,\"revers\":1},{\"id\":311,\"testaso\":\"X\",\"gradusi\":350,\"revers\":1},\r\n    {\"id\":312,\"testaso\":\"S\",\"gradusi\":200,\"revers\":0},{\"id\":313,\"testaso\":\"T\",\"gradusi\":0,\"revers\":0},{\"id\":314,\"testaso\":\"H\",\"gradusi\":350,\"revers\":0},\r\n    {\"id\":315,\"testaso\":\"V\",\"gradusi\":100,\"revers\":0},{\"id\":316,\"testaso\":\"B\",\"gradusi\":300,\"revers\":1},{\"id\":317,\"testaso\":\"V\",\"gradusi\":350,\"revers\":0},\r\n    {\"id\":318,\"testaso\":\"T\",\"gradusi\":350,\"revers\":1},{\"id\":319,\"testaso\":\"V\",\"gradusi\":150,\"revers\":0},{\"id\":320,\"testaso\":\"M\",\"gradusi\":50,\"revers\":0},\r\n    {\"id\":321,\"testaso\":\"D\",\"gradusi\":100,\"revers\":0},{\"id\":322,\"testaso\":\"N\",\"gradusi\":0,\"revers\":0},{\"id\":323,\"testaso\":\"P\",\"gradusi\":50,\"revers\":1},\r\n    {\"id\":324,\"testaso\":\"O\",\"gradusi\":200,\"revers\":0},{\"id\":325,\"testaso\":\"L\",\"gradusi\":150,\"revers\":1},{\"id\":326,\"testaso\":\"C\",\"gradusi\":200,\"revers\":1},\r\n    {\"id\":327,\"testaso\":\"V\",\"gradusi\":0,\"revers\":0},{\"id\":328,\"testaso\":\"V\",\"gradusi\":350,\"revers\":1},{\"id\":329,\"testaso\":\"X\",\"gradusi\":0,\"revers\":1},\r\n    {\"id\":330,\"testaso\":\"B\",\"gradusi\":150,\"revers\":1},{\"id\":331,\"testaso\":\"D\",\"gradusi\":100,\"revers\":1},{\"id\":332,\"testaso\":\"T\",\"gradusi\":50,\"revers\":0},\r\n    {\"id\":333,\"testaso\":\"T\",\"gradusi\":200,\"revers\":0},{\"id\":334,\"testaso\":\"F\",\"gradusi\":350,\"revers\":0},{\"id\":335,\"testaso\":\"P\",\"gradusi\":150,\"revers\":1},\r\n    {\"id\":336,\"testaso\":\"G\",\"gradusi\":250,\"revers\":0},{\"id\":337,\"testaso\":\"N\",\"gradusi\":300,\"revers\":0},{\"id\":338,\"testaso\":\"J\",\"gradusi\":0,\"revers\":0},\r\n    {\"id\":339,\"testaso\":\"I\",\"gradusi\":150,\"revers\":0},{\"id\":340,\"testaso\":\"O\",\"gradusi\":50,\"revers\":1},{\"id\":341,\"testaso\":\"L\",\"gradusi\":100,\"revers\":1},\r\n    {\"id\":342,\"testaso\":\"T\",\"gradusi\":50,\"revers\":1},{\"id\":343,\"testaso\":\"A\",\"gradusi\":150,\"revers\":1},{\"id\":344,\"testaso\":\"X\",\"gradusi\":0,\"revers\":0},\r\n    {\"id\":345,\"testaso\":\"X\",\"gradusi\":300,\"revers\":0},{\"id\":346,\"testaso\":\"X\",\"gradusi\":100,\"revers\":1},{\"id\":347,\"testaso\":\"J\",\"gradusi\":150,\"revers\":0},\r\n    {\"id\":348,\"testaso\":\"Q\",\"gradusi\":100,\"revers\":0},{\"id\":349,\"testaso\":\"I\",\"gradusi\":0,\"revers\":1},{\"id\":350,\"testaso\":\"P\",\"gradusi\":350,\"revers\":1},\r\n    {\"id\":351,\"testaso\":\"R\",\"gradusi\":150,\"revers\":0},{\"id\":352,\"testaso\":\"O\",\"gradusi\":100,\"revers\":1},{\"id\":353,\"testaso\":\"R\",\"gradusi\":100,\"revers\":0},\r\n    {\"id\":354,\"testaso\":\"X\",\"gradusi\":200,\"revers\":1},{\"id\":355,\"testaso\":\"X\",\"gradusi\":50,\"revers\":1},{\"id\":356,\"testaso\":\"H\",\"gradusi\":250,\"revers\":1},\r\n    {\"id\":357,\"testaso\":\"E\",\"gradusi\":100,\"revers\":1},{\"id\":358,\"testaso\":\"B\",\"gradusi\":150,\"revers\":0},{\"id\":359,\"testaso\":\"B\",\"gradusi\":250,\"revers\":0},\r\n    {\"id\":360,\"testaso\":\"X\",\"gradusi\":300,\"revers\":1},{\"id\":361,\"testaso\":\"R\",\"gradusi\":200,\"revers\":0},{\"id\":362,\"testaso\":\"U\",\"gradusi\":250,\"revers\":1},\r\n    {\"id\":363,\"testaso\":\"N\",\"gradusi\":250,\"revers\":0},{\"id\":364,\"testaso\":\"I\",\"gradusi\":50,\"revers\":1},{\"id\":365,\"testaso\":\"M\",\"gradusi\":250,\"revers\":0},\r\n    {\"id\":366,\"testaso\":\"K\",\"gradusi\":0,\"revers\":1},{\"id\":367,\"testaso\":\"F\",\"gradusi\":350,\"revers\":1},{\"id\":368,\"testaso\":\"R\",\"gradusi\":300,\"revers\":0},\r\n    {\"id\":369,\"testaso\":\"L\",\"gradusi\":200,\"revers\":1},{\"id\":370,\"testaso\":\"L\",\"gradusi\":50,\"revers\":1},{\"id\":371,\"testaso\":\"F\",\"gradusi\":300,\"revers\":1},\r\n    {\"id\":372,\"testaso\":\"P\",\"gradusi\":250,\"revers\":0},{\"id\":373,\"testaso\":\"O\",\"gradusi\":50,\"revers\":1},{\"id\":374,\"testaso\":\"R\",\"gradusi\":300,\"revers\":0},\r\n    {\"id\":375,\"testaso\":\"L\",\"gradusi\":350,\"revers\":1},{\"id\":376,\"testaso\":\"I\",\"gradusi\":0,\"revers\":1},{\"id\":377,\"testaso\":\"O\",\"gradusi\":50,\"revers\":0},\r\n    {\"id\":378,\"testaso\":\"O\",\"gradusi\":100,\"revers\":0},{\"id\":379,\"testaso\":\"T\",\"gradusi\":250,\"revers\":1},{\"id\":380,\"testaso\":\"X\",\"gradusi\":150,\"revers\":0},\r\n    {\"id\":381,\"testaso\":\"H\",\"gradusi\":100,\"revers\":1},{\"id\":382,\"testaso\":\"N\",\"gradusi\":250,\"revers\":1},{\"id\":383,\"testaso\":\"M\",\"gradusi\":150,\"revers\":1},\r\n    {\"id\":384,\"testaso\":\"T\",\"gradusi\":100,\"revers\":0},{\"id\":385,\"testaso\":\"R\",\"gradusi\":250,\"revers\":0},{\"id\":386,\"testaso\":\"L\",\"gradusi\":0,\"revers\":0},\r\n    {\"id\":387,\"testaso\":\"D\",\"gradusi\":200,\"revers\":1},{\"id\":388,\"testaso\":\"I\",\"gradusi\":250,\"revers\":0},{\"id\":389,\"testaso\":\"J\",\"gradusi\":100,\"revers\":1},\r\n    {\"id\":390,\"testaso\":\"F\",\"gradusi\":350,\"revers\":0},{\"id\":391,\"testaso\":\"L\",\"gradusi\":200,\"revers\":0},{\"id\":392,\"testaso\":\"F\",\"gradusi\":200,\"revers\":0},\r\n    {\"id\":393,\"testaso\":\"K\",\"gradusi\":0,\"revers\":0},{\"id\":394,\"testaso\":\"J\",\"gradusi\":100,\"revers\":1},{\"id\":395,\"testaso\":\"D\",\"gradusi\":100,\"revers\":0},\r\n    {\"id\":396,\"testaso\":\"K\",\"gradusi\":250,\"revers\":0},{\"id\":397,\"testaso\":\"J\",\"gradusi\":200,\"revers\":1},{\"id\":398,\"testaso\":\"K\",\"gradusi\":300,\"revers\":1},\r\n    {\"id\":399,\"testaso\":\"Q\",\"gradusi\":0,\"revers\":0},{\"id\":400,\"testaso\":\"H\",\"gradusi\":100,\"revers\":0},{\"id\":401,\"testaso\":\"G\",\"gradusi\":350,\"revers\":0},\r\n    {\"id\":402,\"testaso\":\"N\",\"gradusi\":200,\"revers\":0},{\"id\":403,\"testaso\":\"J\",\"gradusi\":350,\"revers\":0},{\"id\":404,\"testaso\":\"F\",\"gradusi\":350,\"revers\":1},\r\n    {\"id\":405,\"testaso\":\"K\",\"gradusi\":50,\"revers\":1},{\"id\":406,\"testaso\":\"A\",\"gradusi\":50,\"revers\":1},{\"id\":407,\"testaso\":\"B\",\"gradusi\":100,\"revers\":0},\r\n    {\"id\":408,\"testaso\":\"R\",\"gradusi\":100,\"revers\":1},{\"id\":409,\"testaso\":\"X\",\"gradusi\":350,\"revers\":1},{\"id\":410,\"testaso\":\"S\",\"gradusi\":350,\"revers\":1},\r\n    {\"id\":411,\"testaso\":\"U\",\"gradusi\":50,\"revers\":1},{\"id\":412,\"testaso\":\"T\",\"gradusi\":200,\"revers\":0},{\"id\":413,\"testaso\":\"T\",\"gradusi\":0,\"revers\":1},\r\n    {\"id\":414,\"testaso\":\"D\",\"gradusi\":150,\"revers\":0},{\"id\":415,\"testaso\":\"X\",\"gradusi\":250,\"revers\":1},{\"id\":416,\"testaso\":\"F\",\"gradusi\":100,\"revers\":1},\r\n    {\"id\":417,\"testaso\":\"R\",\"gradusi\":150,\"revers\":1},{\"id\":418,\"testaso\":\"P\",\"gradusi\":0,\"revers\":1},{\"id\":419,\"testaso\":\"N\",\"gradusi\":50,\"revers\":1},\r\n    {\"id\":420,\"testaso\":\"F\",\"gradusi\":250,\"revers\":1},{\"id\":421,\"testaso\":\"W\",\"gradusi\":350,\"revers\":0},{\"id\":422,\"testaso\":\"G\",\"gradusi\":150,\"revers\":0},\r\n    {\"id\":423,\"testaso\":\"U\",\"gradusi\":200,\"revers\":0},{\"id\":424,\"testaso\":\"R\",\"gradusi\":350,\"revers\":0},{\"id\":425,\"testaso\":\"V\",\"gradusi\":250,\"revers\":0},\r\n    {\"id\":426,\"testaso\":\"A\",\"gradusi\":200,\"revers\":1},{\"id\":427,\"testaso\":\"X\",\"gradusi\":200,\"revers\":1},{\"id\":428,\"testaso\":\"N\",\"gradusi\":0,\"revers\":0},\r\n    {\"id\":429,\"testaso\":\"K\",\"gradusi\":300,\"revers\":0},{\"id\":430,\"testaso\":\"F\",\"gradusi\":200,\"revers\":0},{\"id\":431,\"testaso\":\"C\",\"gradusi\":50,\"revers\":1},\r\n    {\"id\":432,\"testaso\":\"B\",\"gradusi\":300,\"revers\":1},{\"id\":433,\"testaso\":\"H\",\"gradusi\":150,\"revers\":1},{\"id\":434,\"testaso\":\"V\",\"gradusi\":350,\"revers\":1},\r\n    {\"id\":435,\"testaso\":\"W\",\"gradusi\":250,\"revers\":1},{\"id\":436,\"testaso\":\"B\",\"gradusi\":250,\"revers\":0},{\"id\":437,\"testaso\":\"V\",\"gradusi\":350,\"revers\":1},\r\n    {\"id\":438,\"testaso\":\"D\",\"gradusi\":50,\"revers\":1},{\"id\":439,\"testaso\":\"S\",\"gradusi\":300,\"revers\":0},{\"id\":440,\"testaso\":\"L\",\"gradusi\":200,\"revers\":1},\r\n    {\"id\":441,\"testaso\":\"F\",\"gradusi\":200,\"revers\":0},{\"id\":442,\"testaso\":\"T\",\"gradusi\":200,\"revers\":1},{\"id\":443,\"testaso\":\"R\",\"gradusi\":250,\"revers\":1},\r\n    {\"id\":444,\"testaso\":\"R\",\"gradusi\":250,\"revers\":1},{\"id\":445,\"testaso\":\"G\",\"gradusi\":350,\"revers\":0},{\"id\":446,\"testaso\":\"W\",\"gradusi\":0,\"revers\":1},\r\n    {\"id\":447,\"testaso\":\"P\",\"gradusi\":100,\"revers\":0},{\"id\":448,\"testaso\":\"M\",\"gradusi\":50,\"revers\":1},{\"id\":449,\"testaso\":\"Q\",\"gradusi\":300,\"revers\":1},\r\n    {\"id\":450,\"testaso\":\"T\",\"gradusi\":200,\"revers\":1}]},\r\n    \"6\":{\"title\":\"\\u10db\\u10d4\\u10dc\\u10e2\\u10d0\\u10da\",\"desc\":\"\\u10ef\\u10f0\\u10e1\\u10d2\\u10d3\\u10ef\\u10d2\\u10e4\\u10d9\\u10d0\\u10ef\\u10d3\\u10e1\\u10d2\\u10d9\\u10ef\\u10e4\\u10d2\\u10d0\\u10e1\\u10ef\\u10d9\\u10d2\",\r\n    \"taim\":100,\"testtaim\":1000,\"proc\":\"50\",\"quiz\":[{\"id\":451,\"testaso\":\"B\",\"gradusi\":300,\"revers\":1},{\"id\":452,\"testaso\":\"I\",\"gradusi\":240,\"revers\":0},\r\n    {\"id\":453,\"testaso\":\"E\",\"gradusi\":120,\"revers\":0},{\"id\":454,\"testaso\":\"O\",\"gradusi\":300,\"revers\":1},{\"id\":455,\"testaso\":\"T\",\"gradusi\":300,\"revers\":1},\r\n    {\"id\":456,\"testaso\":\"H\",\"gradusi\":360,\"revers\":0},{\"id\":457,\"testaso\":\"K\",\"gradusi\":0,\"revers\":0},{\"id\":458,\"testaso\":\"S\",\"gradusi\":60,\"revers\":0},\r\n    {\"id\":459,\"testaso\":\"R\",\"gradusi\":120,\"revers\":1},{\"id\":460,\"testaso\":\"C\",\"gradusi\":180,\"revers\":0}]}}\r\n\r\nexport default test7json;","import React, { Component } from 'react';\r\nimport test7json from './test7quiz';\r\nimport TestDescription from \"../../../common/testDescription/testDescription\"\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\n\r\nclass Test7 extends Component {\r\n    state={\r\n        title: null,\r\n        description: null,\r\n        isTrialNeeded : null,\r\n        percent : null\r\n    }\r\n\r\n    componentDidMount(){\r\n        // for development\r\n        let title=\"\";\r\n        let description=\"\";\r\n        let isTrialNeeded = this.state.isTrialNeeded;\r\n        let percent = this.state.percent;\r\n        for(let test in test7json){\r\n            if(test7json[test].proc === \"\" || test7json[test].proc=== undefined){\r\n                title = test7json[test].title;\r\n                description = test7json[test].desc;\r\n            }\r\n            if(test7json[test].proc !== \"\"){\r\n                isTrialNeeded = true;\r\n                percent = parseInt(test7json[test].proc);\r\n                this.setState({isTrialNeeded, percent});\r\n            }\r\n        }\r\n\r\n        // this.setState({title, description});\r\n\r\n        // for build\r\n        // let string=\"\";\r\n        // axios.get('http://localhost/psycology-test/backend/user/index/')\r\n        // .then(response => {\r\n        //     string = response.data\r\n        //     let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n        //     let lastIndex = null;\r\n\r\n        //     for(let i=startIndex; i<string.length; i++){\r\n        //         if(string[i]==='\"'){\r\n        //             lastIndex = i;\r\n        //             break;\r\n        //         }\r\n        //     }\r\n        //     string = string.substring(startIndex, lastIndex);\r\n        //     console.log(string);\r\n\r\n        //     $.ajax({\r\n        //         headers: {\r\n        //             'X-CSRF-TOKEN':  string\r\n        //         },\r\n        //         url : 'http://localhost/psycology-test/backend/user/mentJson',\r\n        //         dataType: 'json',\r\n        //         type: 'POST',\r\n        //         success: response=>{\r\n        //             let title=\"\";\r\n        //             let description=\"\";\r\n        //             for(let test in response){\r\n        //                 if(response[test].proc === \"\" || response[test].proc=== undefined){\r\n        //                     title = response[test].title;\r\n        //                     description = response[test].desc;\r\n        //                 }\r\n        //                 if(response[test].proc !== \"\"){\r\n        //                     isTrialNeeded = true;\r\n        //                     percent = parseInt(response[test].proc);\r\n        //                     this.setState({isTrialNeeded, percent});\r\n        //                 }\r\n        //             }\r\n\r\n        //             this.setState({title, description});          \r\n        //         }\r\n        //    })\r\n        // });\r\n    }\r\n    render() {\r\n        const {title, description, isTrialNeeded, percent} = {...this.state};\r\n        return (\r\n            <React.Fragment>\r\n            <TestDescription\r\n                title={title}\r\n                description={description}\r\n                url={'Test7/modes'}\r\n                findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                isTrialNeeded = {isTrialNeeded}\r\n                testName = {'istest7TrialNeeded'}\r\n                testPercent = {'test7Percent'}\r\n                percent = {percent}\r\n                updateTestPercent = {this.props.updateTestPercent}\r\n            />        \r\n            </React.Fragment>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Test7;","import React, { Component } from 'react';\r\nimport './innerBox.css';\r\nclass InnerBox extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                    <div data-innerid={this.props.id} className=\"inner-boxes\">\r\n                        {this.props.symbol ? this.props.symbol : ''}\r\n                    </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InnerBox;","import React, { Component } from 'react';\r\nimport InnerBox from './innerBox/innerBox';\r\n\r\nclass OuterBox extends Component {\r\n    state={\r\n        dataInnerIds: [\r\n            {\r\n                id: 1,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 2,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 3,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 4,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 5,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 6,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 7,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 8,\r\n                symbol : null\r\n            },\r\n            {\r\n                id: 9,\r\n                symbol : null\r\n            }\r\n        ]\r\n    }\r\n\r\n    componentDidMount(){\r\n        // debugger;\r\n        const quantity = this.props.quantity ? this.props.quantity : -1;\r\n        const correct = this.props.correct ? this.props.correct : -1;\r\n        // console.log(correct);\r\n        let counter = 0;\r\n        let dataInnerIds = this.state.dataInnerIds;\r\n        // console.log(quantity);\r\n        while(counter < quantity){\r\n            let index = Math.floor(Math.random() * 9);\r\n            if(dataInnerIds[index].symbol === null){\r\n                dataInnerIds[index].symbol = 'P';\r\n                counter ++;\r\n\r\n            }\r\n        }\r\n        let correctCounter = 0;\r\n        while(correctCounter < correct){\r\n            let index = Math.floor(Math.random() * 9);\r\n            if(dataInnerIds[index].symbol !== 'P'){\r\n                dataInnerIds[index].symbol = 'R';\r\n                correctCounter ++;\r\n            }\r\n        }\r\n        // console.log(dataInnerIds);\r\n        this.setState({dataInnerIds})\r\n    }\r\n\r\n    render() {\r\n        const dataInnerIds = [...this.state.dataInnerIds];\r\n        const innerBoxes = dataInnerIds.map(elem=>{\r\n            return <InnerBox\r\n                        key = {elem.id}\r\n                        symbol = {elem.symbol}\r\n                        id = {elem.id}\r\n                    />\r\n        })\r\n        // console.log(this.state.dataInnerIds);\r\n        return (\r\n        <div  className=\"outer-boxes\" data-id={this.props.dataId}>\r\n            {/* <div data-innerid=\"1\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"2\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"3\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"4\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"5\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"6\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"7\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"8\" className=\"inner-boxes\"></div>\r\n            <div data-innerid=\"9\" className=\"inner-boxes\"></div> */}\r\n            {innerBoxes}\r\n        </div>\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default OuterBox;","import React, { Component } from 'react';\r\nimport InnerBox from './outerBox/innerBox/innerBox';\r\nimport OuterBox from './outerBox/outerBox';\r\nclass OuterBoxHolder extends Component {\r\n    state={\r\n        outerBoxes : [],\r\n        columns : [],\r\n        attributes : {}\r\n    }\r\n\r\n    componentDidMount(){\r\n        const outerBoxes = this.props.outerBoxes;\r\n        const columns = this.props.columns;\r\n        const attributes = this.props.attributes;\r\n        this.setState({outerBoxes, columns, attributes});\r\n    }\r\n    render() {\r\n        // console.log(this.state.outerBoxes);\r\n        // let InnerBoxes = this.state.outerBoxes.map(elem => {\r\n            \r\n        //     return  <InnerBox data-innerid={elem.id} />\r\n        // })\r\n        let OuterBoxes = this.state.outerBoxes.map(elem =>{\r\n            // console.log(elem)\r\n            return (<OuterBox\r\n                    key={elem.id}\r\n                    attributes = {this.state.attributes}\r\n                    className = {elem.className}\r\n                    dataId = {elem.id}\r\n                    columns ={this.state.columns}\r\n                    quantity = {elem.quantity}\r\n                    correct = {elem.hasCorrect}\r\n                    />);\r\n            // return <div className={elem.id}></div>\r\n        })\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {OuterBoxes}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OuterBoxHolder;","import React, { Component } from 'react';\r\nimport '../buttons.scss';\r\nclass YesButton extends Component {\r\n\r\n\r\n    clickFunction = (type,startTime, realAnswer, automaticAnswer,timeOut, symbol, symbo2,quantity,total,arrangement) =>{\r\n        if(symbol && symbo2){\r\n            this.props.fillAnswer(type, startTime, realAnswer, automaticAnswer, timeOut, symbol, symbo2);\r\n        }\r\n        if(quantity && total && arrangement){\r\n            this.props.fillAnswer(type, startTime, realAnswer, automaticAnswer, timeOut,quantity,total,arrangement);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {startTime, realAnswer, automaticAnswer, timeOut,symbol,symbo2,quantity,total,arrangement} = {...this.props}\r\n\r\n        if(automaticAnswer){\r\n            this.clickFunction('No Answer', startTime, realAnswer,automaticAnswer,timeOut ,symbol, symbo2,quantity,total,arrangement)\r\n        }\r\n\r\n        return (\r\n            <button \r\n                className=\"test-button button-Yes\"\r\n                onClick = {()=>{this.clickFunction('Yes',startTime, realAnswer, false, timeOut, symbol, symbo2,quantity,total,arrangement)}}\r\n            >კი</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default YesButton;","import React, { Component } from 'react';\r\nimport '../buttons.scss';\r\nclass NoButton extends Component {\r\n\r\n    clickFunction = (type,startTime, realAnswer, automaticAnswer,timeOut,symbol, symbo2,quantity,total,arrangement) =>{\r\n        if(symbol && symbo2){\r\n            this.props.fillAnswer(type, startTime, realAnswer, automaticAnswer,timeOut,symbol,symbo2);\r\n        }\r\n        if(quantity && total && arrangement){\r\n            this.props.fillAnswer(type, startTime, realAnswer, automaticAnswer,timeOut,quantity,total,arrangement);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {startTime, realAnswer, automaticAnswer,timeOut,symbol, symbo2,quantity,total,arrangement} = {...this.props}\r\n        return (\r\n            <button \r\n                className=\"test-button button-No\" \r\n                onClick = {()=>{this.clickFunction('No',startTime, realAnswer, false, timeOut, symbol, symbo2,quantity,total,arrangement)}}\r\n            >არა</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NoButton;","import React, { Component } from 'react';\r\nimport OuterBoxHolder from './outerBoxes/outerBoxHolder';\r\nimport YesButton from '../../../../../common/button/answerButton/yesButton/yesButton';\r\nimport NoButton from '../../../../../common/button/answerButton/noButton/noButton';\r\nimport './question.scss';\r\nclass Question extends Component {\r\n\r\n    state = {\r\n        className : 'test-to-show',\r\n        attributes:{},\r\n        columns : [\r\n            {\r\n               arrangement: 1,\r\n               cols: [1,2,3],\r\n               otherCols : [4,5,6,7,8,9]\r\n            },\r\n            {\r\n               arrangement: 2,\r\n               cols: [4,5,6],\r\n               otherCols : [1,2,3,7,8,9]\r\n            },\r\n            {\r\n               arrangement: 3,\r\n               cols: [7,8,9],\r\n               otherCols : [1,2,3,4,5,6]\r\n            },\r\n            {\r\n               arrangement: 4,\r\n               cols: [1,4,7],\r\n               otherCols : [2,3,4,5,8,9]\r\n            },\r\n            {\r\n               arrangement: 5,\r\n               cols: [2,5,8],\r\n               otherCols : [1,2,3,4,6,7]\r\n            },\r\n            {\r\n               arrangement: 6,\r\n               cols: [3,6,9],\r\n               otherCols : [1,2,4,5,7,8]\r\n            }\r\n        ],\r\n        outerBoxes : [\r\n            {\r\n                id : 1,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 2,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 3,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 4,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 5,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 6,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 7,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 8,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            },\r\n            {\r\n                id : 9,\r\n                className : 'outer-boxes',\r\n                quantity : null,\r\n                hasCorrect: null\r\n            }\r\n        ],\r\n        automaticAnswer : false\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        // const userAnswers = this.props.userAnswers;\r\n        const timeOut = this.props.timeOut;\r\n        const timetoShow = this.props.timetoShow;\r\n        const columns = this.state.columns;\r\n        let attributes = {};\r\n        attributes.correct = this.props.correct\r\n        attributes.quantity = this.props.quantity\r\n        attributes.wrong = this.props.wrong\r\n        attributes.arrangement = this.props.arrangement\r\n        attributes.percent = this.props.percent\r\n        setTimeout(()=>{\r\n            let className = this.state.className;\r\n            className += ' hidden';\r\n            this.setState({className});\r\n        },timetoShow);\r\n\r\n        let automaticAnswer = this.state.automaticAnswer;\r\n        setTimeout(()=>{\r\n            automaticAnswer = true;\r\n            this.setState({automaticAnswer});\r\n        },timeOut);\r\n\r\n        for(let i =0; i<columns.length; i++){\r\n            let qunatities = [];\r\n            // debugger;\r\n            if(columns[i].arrangement === parseInt(this.props.arrangement)){\r\n                // console.log(this.props.arrangement);\r\n                let quant1 = Math.floor(this.props.quantity / 3);\r\n                if (quant1 > 9){\r\n                    quant1 = quant1 - (quant1 - 9);\r\n                }\r\n                let quant2 = quant1 + 3;\r\n                if (quant2 > 9){\r\n                    quant2 = quant2 - (quant2 - 9);\r\n                }\r\n                let quant3 = this.props.quantity - quant1 - quant2;\r\n                \r\n                qunatities = [\r\n                    {\r\n                        id: columns[i].cols[0],\r\n                        quantity : quant1\r\n                    },\r\n                    {\r\n                        id: columns[i].cols[1],\r\n                        quantity : quant2\r\n                    },\r\n                    {\r\n                        id: columns[i].cols[2],\r\n                        quantity : quant3\r\n                    }\r\n                ];\r\n\r\n                let wholeQuant = this.props.wrong - this.props.quantity;\r\n                for(let k=0; k<columns[i].otherCols.length; k++){\r\n                    qunatities.push({\r\n                        id : columns[i].otherCols[k],\r\n                        quantity : Math.floor(wholeQuant / 6)\r\n                    })\r\n\r\n                }\r\n\r\n                let outerBoxes = this.state.outerBoxes;\r\n                for(let j=0; j<qunatities.length; j++){\r\n                    for(let k=0; k<outerBoxes.length; k++){\r\n                        if(outerBoxes[k].id === qunatities[j].id){\r\n                            outerBoxes[k].quantity = qunatities[j].quantity;\r\n                        }\r\n                    }   \r\n                }\r\n                let counter = 0;\r\n                while(counter < this.props.correct){\r\n                    let randomIndex = Math.floor(Math.random() * 9);\r\n                    if(outerBoxes[randomIndex].quantity < 9 && outerBoxes[randomIndex].hasCorrect == null){\r\n                        outerBoxes[randomIndex].hasCorrect = true;\r\n                        counter ++;\r\n                    }\r\n                }\r\n                this.setState({timeOut, attributes,outerBoxes});\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    updateAutomatic = () =>{\r\n        let automaticAnswer = true;\r\n        this.setState({automaticAnswer});\r\n        // console.log(nextState);\r\n    }\r\n\r\n    render() {\r\n        // const OuterBoxes = this.state.outerBoxes.map((elem,i) => {\r\n        //     return <OuterBoxHolder\r\n        //             key={elem.id}\r\n        //             attributes = {this.state.attributes}\r\n        //             className = {elem.className}\r\n        //             dataId = {elem.id}\r\n        //             columns = {this.state.columns}\r\n        //             outerBoxes = {this.state.outerBoxes}\r\n        //             />\r\n        // })\r\n\r\n        let startTime = new Date();\r\n        let timeOut = this.props.timeOut;\r\n        return (\r\n            <React.Fragment>\r\n                <div className={this.state.className} >\r\n                    {/* {OuterBoxes} */}\r\n                    <OuterBoxHolder \r\n                        attributes = {this.state.attributes}\r\n                        columns = {this.state.columns}\r\n                        outerBoxes = {this.state.outerBoxes}\r\n                    />\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <YesButton\r\n                        fillAnswer = {this.props.fillAnswer}\r\n                        startTime = {startTime}\r\n                        realAnswer = {this.props.correct ? true: false}\r\n                        timeOut = {timeOut}\r\n                        automaticAnswer = {this.state.automaticAnswer}\r\n                        quantity = {this.props.quantity}\r\n                        total = {this.props.wrong}\r\n                        arrangement = {this.props.arrangement}\r\n\r\n                    />\r\n                    <NoButton                             \r\n                        fillAnswer = {this.props.fillAnswer}\r\n                        realAnswer = {this.props.correct ? true: false}\r\n                        startTime = {startTime}\r\n                        timeOut = {timeOut}\r\n                        automaticAnswer = {this.state.automaticAnswer}\r\n                        quantity = {this.props.quantity}\r\n                        total = {this.props.wrong}\r\n                        arrangement = {this.props.arrangement}\r\n                        \r\n                        />\r\n                </div>\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './questionIntermediary.css';\r\nimport {Cookies} from 'react-cookie';\r\n\r\nclass QuestionIntermediary extends Component {\r\n\r\n    state={\r\n        elemClassName : \"text-outer\"\r\n    }\r\n\r\n    componentDidMount(){\r\n        let elemClassName = this.state.elemClassName;\r\n        setTimeout(()=>{\r\n            elemClassName += ' hidden';\r\n            this.setState({elemClassName});\r\n        },1000);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let {userAnswers} = {...this.props}\r\n\r\n        let wholeNumber = userAnswers.length;\r\n        let percent = 0;\r\n        let correctAnswers = 0;\r\n        let cookie = new Cookies();\r\n\r\n        for(let i=0; i<userAnswers.length; i++){\r\n            if(userAnswers[i].isUserAnswerCorrect){\r\n                correctAnswers ++;\r\n            }\r\n        }\r\n\r\n\r\n        percent = (correctAnswers / wholeNumber) * 100;\r\n        percent = percent.toFixed(2);\r\n\r\n        \r\n        let linkToReal= null;\r\n        let button = <button onClick={this.props.updateCounter} className=\"button\">შემდეგი</button>;\r\n        let testPercent = this.props.percent ? this.props.percent : parseInt(cookie.get('percent'));\r\n        // console.log( cookie.get('percent'), testPercent);\r\n        cookie.set('trialPercent', percent , {path:'/'});\r\n        // console.log(percent,this.props.percent);\r\n\r\n        if(this.props.sortedQuestions.length === this.props.userAnswers.length){\r\n            button = null;\r\n            if((parseFloat(percent) >= testPercent) && this.props.type===\"demoquestions\"){\r\n                console.log('realurze gadasvla');\r\n                linkToReal = <NavLink to={`${process.env.PUBLIC_URL}/${this.props.name}/modes/questions`}><button className=\"button\">რეალურ ტესტზე გადასვლა</button></NavLink>\r\n            }\r\n            if((parseFloat(percent) < testPercent) && this.props.type===\"demoquestions\"){\r\n                console.log('tavidan dawyeba');\r\n                linkToReal = <NavLink to={`${process.env.PUBLIC_URL}/${this.props.name}/modes`}><button className=\"button\">თავიდან დაწყება</button></NavLink>\r\n            }\r\n            if(this.props.type === \"demoquestions\"){\r\n                button = \r\n                <NavLink to={`${process.env.PUBLIC_URL}/result`}>\r\n                    <button \r\n                        className=\"button\" \r\n                        onClick={()=>{this.props.updateResultsForChart(userAnswers)}}\r\n                        >\r\n                            შედეგების ნახვა\r\n                        </button>\r\n                </NavLink>;\r\n                \r\n            }\r\n        }\r\n        \r\n\r\n        const answer = userAnswers[userAnswers.length - 1].isUserAnswerCorrect;\r\n        const answered = userAnswers[userAnswers.length - 1].answered;\r\n        \r\n        let answerTime = userAnswers[userAnswers.length - 1].answerTime;\r\n        answerTime = (answerTime/1000).toFixed(2);\r\n        \r\n        let className = 'inner-text';\r\n        answer ? className+= ' green' :className+= ' red';\r\n\r\n        const textToShow = (\r\n            answered \r\n            ? <p className={className}>თქვენი პასუხი არის {answer ? 'სწორი' : 'მცდარი'}</p>\r\n            : <p className={className}>თქვენ ვერ მოასწარით პასუხის დაფიქსირება</p>\r\n        );\r\n\r\n        let elemClassName = this.state.elemClassName;\r\n\r\n        return (\r\n            <div className=\"questionIntermediary\">\r\n                <div className={elemClassName}>\r\n                    <p className=\"inner-text\">სწორია {percent}%</p>\r\n                    <p className=\"inner-text\">პასუხის დრო {answerTime} წამი</p>\r\n                    {textToShow}\r\n                </div>\r\n                {button}\r\n                {linkToReal}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionIntermediary;","import React, { Component } from 'react';\r\nimport Question from './question/question';\r\nimport QuestionIntermediary from '../../../../common/questionIntermediary/questionIntermediary';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport './questions.scss'\r\nclass Questions extends Component {\r\n    state={\r\n        answered : false,\r\n        userAnswer : null,\r\n        realAnswer : null,\r\n        answerTime : null,\r\n        startTime : null,\r\n        endTime : null,\r\n        timetoShow: null,\r\n        timeOut : null,\r\n        testType : null,\r\n        userAnswers: [],\r\n        sortedQuestions: [],\r\n        counter: 0,\r\n        token : '',\r\n        whatToShow : false,\r\n        type: null,\r\n        parameters:{}\r\n    }\r\n\r\n    componentDidMount(){\r\n        let type = this.props.match.url;\r\n        type = type.substring(type.lastIndexOf('/')+1);\r\n        this.setState({type});\r\n        let sortedQuestions = [];\r\n        let questions = [];\r\n        let string;\r\n        let parameters = {};\r\n        axios.get('http://localhost/psycology-test/backend/user/index/')\r\n            .then(response => {\r\n                string = response.data\r\n                let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n                let lastIndex = null;\r\n\r\n                for(let i=startIndex; i<string.length; i++){\r\n                    if(string[i]==='\"'){\r\n                        lastIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                string = string.substring(startIndex, lastIndex);\r\n                \r\n                $.ajax({\r\n                    headers: {\r\n                        'X-CSRF-TOKEN':  string\r\n                    },\r\n                    url : 'http://localhost/psycology-test/backend/user/signal',\r\n                    dataType: 'json',\r\n                    type: 'POST',\r\n                    success : response => {\r\n                        let question = {};\r\n                        console.log(response);\r\n                        for(let test in response){\r\n                            if(response[test].proc !== \"\" && type === \"demoquestions\"){\r\n                                question.id = test;\r\n                                question.questions = response[test];\r\n                                console.log(question.questions);\r\n                                if(question.questions.pasux){\r\n                                    parameters.userAnswer = question.questions.pasux.userAnswer === \"on\" ? true : false;\r\n                                    parameters.answerTime = question.questions.pasux.answerTime === \"on\" ? true : false;\r\n                                    parameters.answered = question.questions.pasux.answered === \"on\" ? true : false;\r\n                                    parameters.isUserAnswerCorrect = question.questions.pasux.isUserAnswerCorrect === \"on\" ? true : false;\r\n                                    parameters.arrangement = question.questions.pasux.arrangement === \"on\" ? true : false;\r\n                                    parameters.quantity = question.questions.pasux.arrangementNumber === \"on\" ? true : false;\r\n                                    parameters.total = question.questions.pasux.totalNumber === \"on\" ? true : false;\r\n                                    parameters.correct = question.questions.pasux.correctAnswer === \"on\" ? true : false;\r\n                                    parameters.uuidpas = question.questions.pasux.uuidpas;    \r\n                                }\r\n                                else{\r\n                                    parameters.userAnswer = true;\r\n                                    parameters.answered = true;\r\n                                    parameters.answerTime = true;\r\n                                    parameters.isUserAnswerCorrect = true;\r\n                                }\r\n                                this.setState({parameters});\r\n\r\n                            }\r\n                            if((response[test].proc === \"\" || response[test].proc === undefined) && type === \"questions\"){\r\n                                question.id = test;\r\n                                question.questions = response[test];\r\n                                if(question.questions.pasux){\r\n                                    parameters.userAnswer = question.questions.pasux.userAnswer === \"on\" ? true : false;\r\n                                    parameters.answerTime = question.questions.pasux.answerTime === \"on\" ? true : false;\r\n                                    parameters.answered = question.questions.pasux.answered === \"on\" ? true : false;\r\n                                    parameters.isUserAnswerCorrect = question.questions.pasux.isUserAnswerCorrect === \"on\" ? true : false;\r\n                                    parameters.arrangement = question.questions.pasux.arrangement === \"on\" ? true : false;\r\n                                    parameters.quantity = question.questions.pasux.arrangementNumber === \"on\" ? true : false;\r\n                                    parameters.total = question.questions.pasux.totalNumber === \"on\" ? true : false;\r\n                                    parameters.correct = question.questions.pasux.correctAnswer === \"on\" ? true : false;\r\n                                    parameters.uuidpas = question.questions.pasux.uuidpas;    \r\n                                }\r\n                                else{\r\n                                    parameters.userAnswer = true;\r\n                                    parameters.answered = true;\r\n                                    parameters.answerTime = true;\r\n                                    parameters.isUserAnswerCorrect = true;\r\n                                }\r\n                                this.setState({parameters});\r\n\r\n                            }\r\n\r\n                            console.log(response[test]);\r\n                        }\r\n\r\n                        questions = question.questions.quiz;\r\n                        while(questions.length > 0){\r\n                            let elementIndex = Math.floor(Math.random() * 150);\r\n                            if(questions[elementIndex]){\r\n                                sortedQuestions.push(questions[elementIndex]);\r\n                                questions.splice(elementIndex,1);\r\n                            }\r\n                        }\r\n                        const timetoShow = question.questions.taim;\r\n                        const timeOut = question.questions.testtaim;\r\n                        this.setState({sortedQuestions, timetoShow, timeOut});\r\n                        // console.log(sortedQuestions);\r\n                    }\r\n                })\r\n            });\r\n    }\r\n\r\n    updateState = () => {\r\n        let counter = this.state.counter;\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n        if(counter>=0){\r\n            counter ++;\r\n        }\r\n        else{\r\n            counter = 0;\r\n        }\r\n\r\n        this.setState({counter, whatToShow});\r\n        // console.log(this.state.counter, this.state.whatToShow);\r\n    }\r\n\r\n    fillAnswer=(buttonType, startTime, realAnswer, automaticAnswer, timeOut, quantity,total,arrangement)=>{\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n\r\n        let answerParameters = this.state.parameters;\r\n\r\n        let timeNow = new Date();\r\n        let endTime = timeNow - startTime;\r\n        let userAnswer = null;\r\n\r\n        if(buttonType === 'Yes'){\r\n            userAnswer = true;\r\n        }\r\n        if(buttonType === 'No'){\r\n            userAnswer = false;\r\n        }\r\n        if(buttonType === 'No Answer'){\r\n            userAnswer = null;\r\n        }\r\n\r\n        if(automaticAnswer){\r\n            userAnswer = null;\r\n            endTime = timeOut;\r\n        }\r\n        const isUserAnswerCorrect = userAnswer === realAnswer ? true: false;\r\n        const answered = automaticAnswer ? false : true;\r\n        // console.log(userAnswer);\r\n\r\n\r\n        let userAnswers = this.state.userAnswers;\r\n        userAnswers.push({\r\n             userAnswer : \r\n                answerParameters.userAnswer \r\n                    ? \r\n                        userAnswer ? 'მსგავსი' : userAnswer === false ? 'არ არის მსგავსი' : 'პასუხი ვერ დააფიქსირა'\r\n                    : null\r\n            ,\r\n            answerTime : \r\n                answerParameters.answerTime \r\n                    ? endTime\r\n                    : null\r\n            ,\r\n            isUserAnswerCorrect :\r\n                answerParameters.isUserAnswerCorrect\r\n                    ?    \r\n                    isUserAnswerCorrect \r\n                    : null\r\n            ,\r\n            answered :\r\n                answerParameters.answered \r\n                    ?\r\n                    answered\r\n                    : null\r\n            ,\r\n            arrangement : \r\n                answerParameters.arrangement ? arrangement : null,\r\n            quantity : \r\n                answerParameters.quantity ? quantity : null,\r\n            total : \r\n                answerParameters.total ? total : null,\r\n            correct : \r\n                answerParameters.correct ? realAnswer : null,\r\n            uuidpas : answerParameters.uuidpas\r\n        });\r\n\r\n        this.setState({userAnswers, whatToShow});\r\n        console.log(userAnswers);\r\n    }\r\n\r\n    render() {\r\n        const sortedQuestions = this.state.sortedQuestions;\r\n        let question = null;\r\n        if(this.state.counter == 0 && sortedQuestions[0]){\r\n            question =\r\n            <Question\r\n                key = {0}\r\n                userAnswers = {this.state.userAnswers}\r\n                questionNumber = {0}\r\n                correct = {sortedQuestions[0].Correct}\r\n                quantity = {sortedQuestions[0].Quantity}\r\n                wrong = {sortedQuestions[0].Wrong}\r\n                arrangement = {sortedQuestions[0].arrangement}\r\n                percent = {sortedQuestions[0].procenti}\r\n                fillAnswer = {this.fillAnswer}\r\n                timeOut = {this.state.timeOut}\r\n                timetoShow = {this.state.timetoShow}\r\n            />\r\n        }\r\n        else{\r\n            question = sortedQuestions.map((quest,i) => {\r\n                if(i == this.state.counter){\r\n                    return <Question\r\n                    key = {i}\r\n                    userAnswers = {this.state.userAnswers}\r\n                    questionNumber = {i}\r\n                    correct = {sortedQuestions[i].Correct}\r\n                    quantity = {sortedQuestions[i].Quantity}\r\n                    wrong = {sortedQuestions[i].Wrong}\r\n                    arrangement = {sortedQuestions[i].arrangement}\r\n                    percent = {sortedQuestions[i].procenti}\r\n                    fillAnswer = {this.fillAnswer}\r\n                    timeOut = {this.state.timeOut}\r\n                    timetoShow = {this.state.timetoShow}\r\n                />\r\n                }\r\n            });\r\n        }\r\n\r\n        // this.setState({counter});\r\n\r\n        let contentToShow = null;\r\n        let whatToShow = this.state.whatToShow;\r\n        if(whatToShow){\r\n            contentToShow = <QuestionIntermediary\r\n                                updateCounter = {this.updateState}\r\n                                userAnswers = {this.state.userAnswers}\r\n                                sortedQuestions={this.state.sortedQuestions}\r\n                                percent = {this.props.test1Percent}\r\n                                type={this.state.type}\r\n                                name={'Test1'}\r\n                                updateResultsForChart = {this.props.updateResultsForChart}\r\n                                />;\r\n            whatToShow = false;\r\n        }\r\n        else{\r\n            contentToShow = question;\r\n            whatToShow = true;\r\n        }\r\n\r\n        let currentQuestion = this.state.counter;\r\n        currentQuestion ++;\r\n        let wholeNumber = this.state.sortedQuestions.length;\r\n\r\n        return (\r\n            <div className=\"tests-holder\">\r\n                <div className=\"test-wrapper\">\r\n                    {contentToShow}\r\n                    <p className=\"current-question\">\r\n                        {`${currentQuestion} / ${wholeNumber}`}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n","import React, { Component } from 'react';\r\nimport YesButton from '../../../../../common/button/answerButton/yesButton/yesButton';\r\nimport NoButton from '../../../../../common/button/answerButton/noButton/noButton';\r\nimport './question.scss';\r\nclass Question extends Component {\r\n\r\n    state = {\r\n        className : 'test-to-show',\r\n        attributes:{},\r\n        automaticAnswer : false\r\n    }\r\n\r\n    componentDidMount(){\r\n        // const userAnswers = this.props.userAnswers;\r\n        const timeOut = this.props.timeOut;\r\n        const timetoShow = this.props.timetoShow;\r\n        let attributes = {};\r\n        attributes.correct = this.props.correct\r\n        setTimeout(()=>{\r\n            let className = this.state.className;\r\n            className += ' hidden';\r\n            this.setState({className});\r\n        },timetoShow);\r\n\r\n        let automaticAnswer = this.state.automaticAnswer;\r\n        setTimeout(()=>{\r\n            automaticAnswer = true;\r\n            this.setState({automaticAnswer});\r\n        },timeOut);\r\n\r\n    }\r\n\r\n    updateAutomatic = () =>{\r\n        let automaticAnswer = true;\r\n        this.setState({automaticAnswer});\r\n    }\r\n\r\n    render() {\r\n\r\n        let startTime = new Date();\r\n        let timeOut = this.props.timeOut;\r\n        const isCorrect = this.props.correct === \"true\" ? true: false;\r\n        const {symbol, symbo2} = {...this.props}\r\n        return (\r\n            <React.Fragment>\r\n                <div className={this.state.className} >\r\n                    <p className=\"symbol\">{symbol}</p>\r\n                    <p className=\"symbol\">{symbo2}</p>\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <YesButton\r\n                        fillAnswer = {this.props.fillAnswer}\r\n                        startTime = {startTime}\r\n                        realAnswer = {isCorrect}\r\n                        timeOut = {timeOut}\r\n                        automaticAnswer = {this.state.automaticAnswer}\r\n                        symbol = {symbol}\r\n                        symbo2 = {symbo2}\r\n                    />\r\n                    <NoButton                             \r\n                        fillAnswer = {this.props.fillAnswer}\r\n                        realAnswer = {isCorrect}         \r\n                        timeOut = {timeOut}\r\n                        startTime = {startTime}\r\n                        automaticAnswer = {this.state.automaticAnswer}\r\n                        symbol = {symbol}\r\n                        symbo2 = {symbo2}\r\n\r\n                        />\r\n                </div>\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;","import React, { Component } from 'react';\r\nimport Question from './question/question';\r\nimport QuestionIntermediary from '../../../../common/questionIntermediary/questionIntermediary';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport './questions.scss'\r\nimport test2json from '../test2quiz';\r\nclass Questions extends Component {\r\n    state={\r\n        answered : false,\r\n        userAnswer : null,\r\n        realAnswer : null,\r\n        answerTime : null,\r\n        startTime : null,\r\n        endTime : null,\r\n        timetoShow: null,\r\n        timeOut : null,\r\n\r\n        userAnswers: [],\r\n        sortedQuestions: [],\r\n        counter: 0,\r\n        token : '',\r\n        whatToShow : false,\r\n        type : null,\r\n        parameters : {}\r\n    }\r\n\r\n    componentDidMount(){\r\n        let type = this.props.match.url;\r\n        type = type.substring(type.lastIndexOf('/')+1);\r\n        this.setState({type});\r\n        let sortedQuestions = [];\r\n        let questions = [];\r\n        let string;\r\n        let parameters = {};\r\n\r\n        // for development\r\n        let question = {};\r\n        for(let test in test2json){\r\n            if(test2json[test].proc !== \"\" && type === \"demoquestions\"){\r\n                question.id = test;\r\n                question.questions = test2json[test];\r\n                if(question.questions.pasux){\r\n                    parameters.userAnswer = question.questions.pasux.userAnswer === \"on\" ? true : false;\r\n                    parameters.answerTime = question.questions.pasux.answerTime === \"on\" ? true : false;\r\n                    parameters.answered = question.questions.pasux.answered === \"on\" ? true : false;\r\n                    parameters.isUserAnswerCorrect = question.questions.pasux.isUserAnswerCorrect === \"on\" ? true : false;\r\n                    parameters.firstSymbol = question.questions.pasux.persbig === \"on\" ? true : false;\r\n                    parameters.secondSymbol = question.questions.pasux.persbigpass === \"on\" ? true : false;\r\n                    parameters.uuidpas = question.questions.pasux.uuidpas;    \r\n                }\r\n                else{\r\n                    parameters.userAnswer = true;\r\n                    parameters.answered = true;\r\n                    parameters.answerTime = true;\r\n                    parameters.isUserAnswerCorrect = true;\r\n                }\r\n                this.setState({parameters});\r\n\r\n            }\r\n            if((test2json[test].proc === \"\" || test2json[test].proc === undefined) && type === \"questions\"){\r\n                question.id = test;\r\n                question.questions = test2json[test];\r\n                if(question.questions.pasux){\r\n                    parameters.userAnswer = question.questions.pasux.userAnswer === \"on\" ? true : false;\r\n                    parameters.answerTime = question.questions.pasux.answerTime === \"on\" ? true : false;\r\n                    parameters.answered = question.questions.pasux.answered === \"on\" ? true : false;\r\n                    parameters.isUserAnswerCorrect = question.questions.pasux.isUserAnswerCorrect === \"on\" ? true : false;\r\n                    parameters.firstSymbol = question.questions.pasux.persbig === \"on\" ? true : false;\r\n                    parameters.secondSymbol = question.questions.pasux.persbigpass === \"on\" ? true : false;\r\n                    parameters.uuidpas = question.questions.pasux.uuidpas;    \r\n                }\r\n                else{\r\n                    parameters.userAnswer = true;\r\n                    parameters.answered = true;\r\n                    parameters.answerTime = true;\r\n                    parameters.isUserAnswerCorrect = true;\r\n                }\r\n                this.setState({parameters});\r\n                // console.log(test2json[test]);\r\n            }\r\n\r\n            console.log(test2json[test]);\r\n            console.log(parameters);\r\n        }\r\n\r\n        questions = question.questions.quiz;\r\n\r\n        // questions = test2json.quiz;\r\n        while(questions.length > 0){\r\n            let elementIndex = Math.floor(Math.random() * questions.length);\r\n            if(questions[elementIndex]){\r\n                sortedQuestions.push(questions[elementIndex]);\r\n                questions.splice(elementIndex,1);\r\n            }\r\n        }\r\n        const timetoShow = 100;\r\n        const timeOut = 1000;\r\n        this.setState({sortedQuestions, timetoShow, timeOut});\r\n        console.log(sortedQuestions);\r\n\r\n\r\n\r\n        //for build\r\n        axios.get('http://localhost/psycology-test/backend/user/index/')\r\n            .then(response => {\r\n                string = response.data\r\n                let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n                let lastIndex = null;\r\n\r\n                for(let i=startIndex; i<string.length; i++){\r\n                    if(string[i]==='\"'){\r\n                        lastIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                string = string.substring(startIndex, lastIndex);\r\n                \r\n                $.ajax({\r\n                    headers: {\r\n                        'X-CSRF-TOKEN':  string\r\n                    },\r\n                    url : 'http://localhost/psycology-test/backend/user/percJson',\r\n                    dataType: 'json',\r\n                    type: 'POST',\r\n                    success : response => {\r\n                        console.log(response);\r\n                        let question = {};\r\n                        for(let test in response){\r\n                            if(response[test].proc !== \"\" && type === \"demoquestions\"){\r\n                                question.id = test;\r\n                                question.questions = response[test];\r\n                                if(question.questions.pasux){\r\n                                    parameters.userAnswer = question.questions.pasux.userAnswer === \"on\" ? true : false;\r\n                                    parameters.answerTime = question.questions.pasux.answerTime === \"on\" ? true : false;\r\n                                    parameters.answered = question.questions.pasux.answered === \"on\" ? true : false;\r\n                                    parameters.isUserAnswerCorrect = question.questions.pasux.isUserAnswerCorrect === \"on\" ? true : false;\r\n                                    parameters.firstSymbol = question.questions.pasux.persbig === \"on\" ? true : false;\r\n                                    parameters.secondSymbol = question.questions.pasux.persbigpass === \"on\" ? true : false;\r\n                                    parameters.uuidpas = question.questions.pasux.uuidpas;    \r\n                                }\r\n                                else{\r\n                                    parameters.userAnswer = true;\r\n                                    parameters.answered = true;\r\n                                    parameters.answerTime = true;\r\n                                    parameters.isUserAnswerCorrect = true;\r\n                                }\r\n                                                this.setState({parameters});\r\n                \r\n                                console.log(response[test]);\r\n                            }\r\n                            if((response[test].proc === \"\" || response[test].proc === undefined) && type === \"questions\"){\r\n                                question.id = test;\r\n                                question.questions = response[test];\r\n                                if(question.questions.pasux){\r\n                                    parameters.userAnswer = question.questions.pasux.userAnswer === \"on\" ? true : false;\r\n                                    parameters.answerTime = question.questions.pasux.answerTime === \"on\" ? true : false;\r\n                                    parameters.answered = question.questions.pasux.answered === \"on\" ? true : false;\r\n                                    parameters.isUserAnswerCorrect = question.questions.pasux.isUserAnswerCorrect === \"on\" ? true : false;\r\n                                    parameters.firstSymbol = question.questions.pasux.persbig === \"on\" ? true : false;\r\n                                    parameters.secondSymbol = question.questions.pasux.persbigpass === \"on\" ? true : false;\r\n                                    parameters.uuidpas = question.questions.pasux.uuidpas;    \r\n                                }\r\n                                else{\r\n                                    parameters.userAnswer = true;\r\n                                    parameters.answered = true;\r\n                                    parameters.answerTime = true;\r\n                                    parameters.isUserAnswerCorrect = true;\r\n                                }\r\n                                                this.setState({parameters});\r\n                \r\n                                console.log(response[test]);\r\n                            }\r\n\r\n                            console.log(response[test]);\r\n                        }\r\n\r\n                        questions = question.questions.quiz;\r\n                        while(questions.length > 0){\r\n                            let elementIndex = Math.floor(Math.random() * questions.length);\r\n                            if(questions[elementIndex]){\r\n                                sortedQuestions.push(questions[elementIndex]);\r\n                                questions.splice(elementIndex,1);\r\n                            }\r\n                        }\r\n                        const timetoShow = question.questions.timetest;\r\n                        const timeOut = question.questions.fulltime;\r\n                        // const timetoShow = 100;\r\n                        // const timeOut = 1000;\r\n                \r\n                        this.setState({sortedQuestions, timetoShow, timeOut});\r\n                    },\r\n                    error: response=>{\r\n                        console.log(response);\r\n                    }\r\n                })\r\n\r\n            });\r\n    }\r\n\r\n    updateState = () => {\r\n        let counter = this.state.counter;\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n        if(counter>=0){\r\n            counter ++;\r\n        }\r\n        else{\r\n            counter = 0;\r\n        }\r\n\r\n        this.setState({counter, whatToShow});\r\n        // console.log(this.state.counter, this.state.whatToShow);\r\n    }\r\n\r\n    fillAnswer=(buttonType, startTime, realAnswer, automaticAnswer, timeOut, symbol, symbo2)=>{\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n\r\n        let answerParameters = this.state.parameters;\r\n\r\n        let timeNow = new Date();\r\n        let endTime = timeNow - startTime;\r\n        let userAnswer = null;\r\n\r\n        if(buttonType === 'Yes'){\r\n            userAnswer = true;\r\n        }\r\n        if(buttonType === 'No'){\r\n            userAnswer = false;\r\n        }\r\n        if(buttonType === 'No Answer'){\r\n            userAnswer = null;\r\n        }\r\n\r\n        if(automaticAnswer){\r\n            userAnswer = null;\r\n            endTime = timeOut;\r\n        }\r\n        const isUserAnswerCorrect = userAnswer === realAnswer ? true: false;\r\n        const answered = automaticAnswer ? false : true\r\n\r\n\r\n        let userAnswers = this.state.userAnswers;\r\n        userAnswers.push({\r\n            userAnswer : \r\n                answerParameters.userAnswer \r\n                    ? \r\n                        userAnswer ? 'მსგავსი' : userAnswer === false ? 'არ არის მსგავსი' : 'პასუხი ვერ დააფიქსირა'\r\n                    : null\r\n            ,\r\n            answerTime : \r\n                answerParameters.answerTime \r\n                    ? endTime\r\n                    : null\r\n            ,\r\n            isUserAnswerCorrect :\r\n                answerParameters.isUserAnswerCorrect\r\n                    ?    \r\n                    isUserAnswerCorrect \r\n                    : null\r\n            ,\r\n            answered :\r\n                answerParameters.answered \r\n                    ?\r\n                    answered\r\n                    : null\r\n            ,\r\n            persbig : answerParameters.firstSymbol ? symbol : null,\r\n            persbigpass : answerParameters.secondSymbol ? symbo2 : null\r\n        });\r\n\r\n        this.setState({userAnswers, whatToShow});\r\n\r\n        console.log(userAnswers);\r\n    }\r\n\r\n    render() {\r\n        const sortedQuestions = this.state.sortedQuestions;\r\n        let question = null;\r\n        if(this.state.counter == 0 && sortedQuestions[0]){\r\n            question =\r\n            <Question\r\n                key = {0}\r\n                userAnswers = {this.state.userAnswers}\r\n                questionNumber = {0}\r\n                correct = {sortedQuestions[0].persbigpass}\r\n                fillAnswer = {this.fillAnswer}\r\n                timeOut = {this.state.timeOut}\r\n                timetoShow = {this.state.timetoShow}\r\n                symbol = {sortedQuestions[0].persbig}\r\n                symbo2 = {sortedQuestions[0].perssmol}\r\n            />\r\n        }\r\n        else{\r\n            question = sortedQuestions.map((quest,i) => {\r\n                if(i == this.state.counter){\r\n                    return <Question\r\n                    key = {i}\r\n                    userAnswers = {this.state.userAnswers}\r\n                    questionNumber = {i}\r\n                    correct = {sortedQuestions[i].persbigpass}\r\n                    fillAnswer = {this.fillAnswer}\r\n                    timeOut = {this.state.timeOut}\r\n                    timetoShow = {this.state.timetoShow}\r\n                    symbol = {sortedQuestions[i].persbig}\r\n                    symbo2 = {sortedQuestions[i].perssmol}\r\n                />\r\n                }\r\n            });\r\n        }\r\n\r\n        // this.setState({counter});\r\n\r\n        let contentToShow = null;\r\n        let whatToShow = this.state.whatToShow;\r\n        if(whatToShow){\r\n            contentToShow = <QuestionIntermediary\r\n                                updateCounter = {this.updateState}\r\n                                userAnswers = {this.state.userAnswers}\r\n                                sortedQuestions={this.state.sortedQuestions}\r\n                                percent = {this.props.test2Percent}\r\n                                type={this.state.type}\r\n                                name={'Test2'}\r\n                                updateResultsForChart = {this.props.updateResultsForChart}\r\n                                />;\r\n            whatToShow = false;\r\n        }\r\n        else{\r\n            contentToShow = question;\r\n            whatToShow = true;\r\n        }\r\n\r\n        let currentQuestion = this.state.counter;\r\n        currentQuestion ++;\r\n        let wholeNumber = this.state.sortedQuestions.length;\r\n\r\n\r\n        return (\r\n            <div className=\"tests-holder\">\r\n                <div className=\"test-wrapper\">\r\n                    {contentToShow}\r\n                    <p className=\"current-question\">\r\n                        {`${currentQuestion} / ${wholeNumber}`}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n","import React, { Component } from 'react';\r\nclass Element extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        document.addEventListener('keypress',this.handleClick)\r\n    }\r\n\r\n\r\n    handleClick = (event)=>{\r\n        const {attributes, startTime, timeOut, automaticAnswer, updateEventListenerStatus,isEventListenerNeeded} ={...this.props};\r\n        this.props.fillAnswer(event.key ? event.key : '', startTime, attributes.keyBoardKey, automaticAnswer, timeOut);\r\n        document.removeEventListener('keypress', this.handleClick);\r\n    }\r\n\r\n    render() {\r\n        const {attributes, startTime, timeOut, automaticAnswer,updateEventListenerStatus,isEventListenerNeeded} ={...this.props};\r\n        if(automaticAnswer ){\r\n            this.props.fillAnswer('', startTime, attributes.keyBoardKey, automaticAnswer, timeOut);\r\n            document.removeEventListener('keypress', this.handleClick);\r\n        }\r\n\r\n\r\n        return (\r\n            <span className={attributes.className}>{attributes.value}</span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Element;","import React, { Component } from 'react';\r\nimport Element from './element/element';\r\nimport './question.css';\r\nclass Question extends Component {\r\n\r\n    state = {\r\n        className : 'test-to-show',\r\n        automaticAnswer : false,\r\n        defineColors:[\r\n            {\r\n                key: 'w',\r\n                color: '#ff0000',\r\n                className: 'red'\r\n            },\r\n            {\r\n                key: 'y',\r\n                color: '#ffff00',\r\n                className: 'yellow'\r\n\r\n            },\r\n            {\r\n                key: 'm',\r\n                color: '#009933',\r\n                className: 'green'\r\n\r\n            },\r\n            {\r\n                key: 'l',\r\n                color: '#0000ff',\r\n                className: 'blue'\r\n            }\r\n        ]        \r\n    }\r\n\r\n    componentDidMount(){\r\n        // const userAnswers = this.props.userAnswers;\r\n\r\n        const timeOut = this.props.timeOut;\r\n        const timetoShow = this.props.timetoShow;\r\n        setTimeout(()=>{\r\n            let className = this.state.className;\r\n            className += ' hidden';\r\n            this.setState({className});\r\n        },timetoShow);\r\n\r\n        let automaticAnswer = this.state.automaticAnswer;\r\n        setTimeout(()=>{\r\n            automaticAnswer = true;\r\n            this.setState({automaticAnswer});\r\n        },timeOut);\r\n    }\r\n\r\n    updateAutomatic = () =>{\r\n        let automaticAnswer = true;\r\n        this.setState({automaticAnswer});\r\n    }\r\n\r\n\r\n    render() {\r\n        const {color, value, keyBoardKey, timeOut} = {...this.props}\r\n\r\n        const defineColors = this.state.defineColors;\r\n        let attributes ={};\r\n\r\n        attributes.color = color;\r\n        attributes.value = value;\r\n        attributes.keyBoardKey = keyBoardKey;\r\n        defineColors.map(elem=>{\r\n            if(elem.color == color){\r\n                attributes.className = elem.className\r\n            }\r\n        })\r\n        let startTime = new Date();\r\n        const automaticAnswer = this.state.automaticAnswer;\r\n        return (\r\n            <div className={this.state.className}>\r\n                <Element\r\n                    attributes={attributes}\r\n                    startTime = {startTime}\r\n                    timeOut = {timeOut}\r\n                    automaticAnswer = {automaticAnswer}\r\n                    fillAnswer = {this.props.fillAnswer}\r\n                    updateEventListenerStatus = {this.props.updateEventListenerStatus}\r\n                    isEventListenerNeeded = {this.props.isEventListenerNeeded}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;","import React, { Component } from 'react';\r\nimport Question from './question/question';\r\nimport QuestionIntermediary from '../../../../common/questionIntermediary/questionIntermediary';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport './questions.scss'\r\nimport test3json from '../test3quiz';\r\nclass Questions extends Component {\r\n    state={\r\n        answered : false,\r\n        userAnswer : null,\r\n        realAnswer : null,\r\n        answerTime : null,\r\n        startTime : null,\r\n        endTime : null,\r\n        timetoShow: null,\r\n        timeOut : null,\r\n        isEventListenerNeeded: true,\r\n        falseCounter : 0,\r\n        userAnswers: [],\r\n        sortedQuestions: [],\r\n        counter: 0,\r\n        token : '',\r\n        whatToShow : false,\r\n        type: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        let type = this.props.match.url;\r\n        type = type.substring(type.lastIndexOf('/')+1);\r\n        this.setState({type});\r\n        let sortedQuestions = [];\r\n        let questions = [];\r\n        let string;\r\n        // for development\r\n        // questions = test3json.quiz;\r\n        // while(questions.length > 0){\r\n        //     let elementIndex = Math.floor(Math.random() * questions.length);\r\n        //     if(questions[elementIndex]){\r\n        //         sortedQuestions.push(questions[elementIndex]);\r\n        //         questions.splice(elementIndex,1);\r\n        //     }\r\n        // }\r\n        const timetoShow = 100;\r\n        const timeOut = 1000;\r\n        this.setState({sortedQuestions, timetoShow, timeOut});\r\n        console.log(sortedQuestions);\r\n\r\n\r\n\r\n        //for build\r\n        axios.get('http://localhost/psycology-test/backend/user/index/')\r\n            .then(response => {\r\n                string = response.data\r\n                let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n                let lastIndex = null;\r\n\r\n                for(let i=startIndex; i<string.length; i++){\r\n                    if(string[i]==='\"'){\r\n                        lastIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                string = string.substring(startIndex, lastIndex);\r\n                \r\n                $.ajax({\r\n                    headers: {\r\n                        'X-CSRF-TOKEN':  string\r\n                    },\r\n                    url : 'http://localhost/psycology-test/backend/user/strupJson',\r\n                    dataType: 'json',\r\n                    type: 'POST',\r\n                    success : response => {\r\n\r\n                        let question = {};\r\n                        console.log(response);\r\n                        for(let test in response){\r\n                            if(response[test].proc !== \"\" && type === \"demoquestions\"){\r\n                                question.id = test;\r\n                                question.questions = response[test];\r\n                            }\r\n                            if((response[test].proc === \"\" || response[test].proc === undefined) && type === \"questions\"){\r\n                                question.id = test;\r\n                                question.questions = response[test];\r\n                            }\r\n\r\n                            console.log(response[test]);\r\n                        }\r\n\r\n                        questions = question.questions.quiz;\r\n                        while(questions.length > 0){\r\n                            let elementIndex = Math.floor(Math.random() * questions.length);\r\n                            if(questions[elementIndex]){\r\n                                sortedQuestions.push(questions[elementIndex]);\r\n                                questions.splice(elementIndex,1);\r\n                            }\r\n                        }\r\n                        // const timetoShow = question.questions.taim;\r\n                        // const timeOut = question.questions.testtaim;\r\n                        const timetoShow = 100;\r\n                        const timeOut = 1000;\r\n                \r\n                        this.setState({sortedQuestions, timetoShow, timeOut});\r\n                    }\r\n                })\r\n\r\n            });\r\n    }\r\n\r\n    updateEventListenerStatus = (status) =>{\r\n        let isEventListenerNeeded = status;\r\n        let falseCounter = this.state.falseCounter;\r\n        // console.log(`questions 1: ${isEventListenerNeeded} ${falseCounter}`);\r\n        const el = this.state.isEventListenerNeeded;\r\n        console.log(el);\r\n        if(!status){\r\n            falseCounter++;\r\n        }\r\n        if(falseCounter >1){    \r\n            isEventListenerNeeded = true;\r\n            falseCounter = 0;\r\n        }\r\n        // console.log(`questions 2: ${isEventListenerNeeded} ${falseCounter}`);\r\n        this.setState({isEventListenerNeeded, falseCounter});\r\n        // this.setState(prevState=>({\r\n        //     isEventListenerNeeded : !prevState.isEventListenerNeeded ? true : true\r\n        // }));\r\n        \r\n    }\r\n\r\n\r\n    updateState = () => {\r\n        let counter = this.state.counter;\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n        if(counter>=0){\r\n            counter ++;\r\n        }\r\n        else{\r\n            counter = 0;\r\n        }\r\n\r\n        this.setState({counter, whatToShow});\r\n    }\r\n\r\n\r\n    fillAnswer=(keyBoardKey, startTime, realAnswer, automaticAnswer, timeOut)=>{\r\n\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n\r\n        let timeNow = new Date();\r\n        let endTime = timeNow - startTime;\r\n        let userAnswer = keyBoardKey;\r\n\r\n        if(automaticAnswer){\r\n            userAnswer = null;\r\n            endTime = timeOut;\r\n        }\r\n        const isUserAnswerCorrect = keyBoardKey == realAnswer ? true: false;\r\n        const answered = automaticAnswer ? false : true\r\n        // console.log(userAnswer);\r\n\r\n\r\n        let userAnswers = this.state.userAnswers;\r\n        userAnswers.push({\r\n            userAnswer : userAnswer,\r\n            answerTime : endTime,\r\n            isUserAnswerCorrect :isUserAnswerCorrect,\r\n            answered : answered\r\n        });\r\n\r\n        this.setState({userAnswers, whatToShow});\r\n\r\n        console.log(userAnswers);\r\n    }\r\n\r\n    render() {\r\n        const sortedQuestions = this.state.sortedQuestions;\r\n        let question = null;\r\n        const isEventListenerNeeded = this.state.isEventListenerNeeded;\r\n        // console.log(`questions 3: ${isEventListenerNeeded}`);\r\n        if(this.state.counter == 0 && sortedQuestions[0]){\r\n            question =\r\n            <Question\r\n                key = {0}\r\n                userAnswers = {this.state.userAnswers}\r\n                questionNumber = {0}\r\n                color = {sortedQuestions[0].color}\r\n                keyBoardKey={sortedQuestions[0].kebord}\r\n                value={sortedQuestions[0].text}\r\n                fillAnswer = {this.fillAnswer}\r\n                timeOut = {this.state.timeOut}\r\n                timetoShow = {this.state.timetoShow}\r\n                updateEventListenerStatus = {this.updateEventListenerStatus}\r\n                isEventListenerNeeded = {isEventListenerNeeded}\r\n\r\n            />\r\n        }\r\n        else{\r\n            question = sortedQuestions.map((quest,i) => {\r\n                if(i == this.state.counter){\r\n                    return <Question\r\n                    key = {i}\r\n                    userAnswers = {this.state.userAnswers}\r\n                    questionNumber = {i}\r\n                    color = {sortedQuestions[i].color}\r\n                    keyBoardKey={sortedQuestions[i].kebord}\r\n                    value={sortedQuestions[i].text}    \r\n                    fillAnswer = {this.fillAnswer}\r\n                    timeOut = {this.state.timeOut}\r\n                    timetoShow = {this.state.timetoShow}\r\n                    updateEventListenerStatus = {this.updateEventListenerStatus}\r\n                    isEventListenerNeeded = {isEventListenerNeeded}\r\n\r\n                />\r\n                }\r\n            });\r\n        }\r\n\r\n        // this.setState({counter});\r\n\r\n        let contentToShow = null;\r\n        let whatToShow = this.state.whatToShow;\r\n        if(whatToShow){\r\n            contentToShow = <QuestionIntermediary\r\n                                updateCounter = {this.updateState}\r\n                                userAnswers = {this.state.userAnswers}\r\n                                sortedQuestions={this.state.sortedQuestions}\r\n                                percent = {this.props.test3Percent}\r\n                                type={this.state.type}\r\n                                name={'Test3'}\r\n                                updateResultsForChart = {this.props.updateResultsForChart}\r\n                                />;\r\n            whatToShow = false;\r\n        }\r\n        else{\r\n            contentToShow = question;\r\n            whatToShow = true;\r\n        }\r\n\r\n        let currentQuestion = this.state.counter;\r\n        currentQuestion ++;\r\n        let wholeNumber = this.state.sortedQuestions.length;\r\n\r\n\r\n        return (\r\n            <div className=\"tests-holder\">\r\n                <div className=\"test-wrapper\">\r\n                    {contentToShow}\r\n                    <p className=\"current-question\">\r\n                        {`${currentQuestion} / ${wholeNumber}`}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n","import React, { Component } from 'react';\r\nclass Element extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        document.addEventListener('keypress',this.handleClick)\r\n    }\r\n\r\n    returnElementByType=(type, firstLetter, secondLetter, spacing)=>{\r\n        let space = null;\r\n        switch(spacing){\r\n            case '3' : space = 'margin3'; break;\r\n            case '2' : space = 'margin2'; break;\r\n            case '1' : space = 'margin1'; break;\r\n        }\r\n        switch(type){\r\n            case '1' : return (\r\n                <p className={`letters-holder ${space}`}>\r\n                    <span className=\"left-letter\">{secondLetter}</span>\r\n                    <span className=\"center-letter\">{firstLetter}</span>\r\n                </p>\r\n            );\r\n            case '2' : return(\r\n                <p className={`letters-holder ${space}`}>\r\n                    <span className=\"left-letter\">{firstLetter}</span>\r\n                    <span className=\"center-letter\">{secondLetter}</span>\r\n                </p>\r\n            );\r\n            case '3' : return(\r\n                <p className={`letters-holder ${space}`}>\r\n                    <span className=\"left-letter\">{secondLetter}</span>\r\n                    <span className=\"center-letter\">{firstLetter}</span>\r\n                    <span className=\"right-letter\">{secondLetter}</span>\r\n                </p>\r\n            );\r\n            case '4' : return(\r\n                <p className=\"letters-holder\">\r\n                    <span className=\"left-letter\">{firstLetter}</span>\r\n                    <span className=\"center-letter\">{secondLetter}</span>\r\n                    <span className=\"right-letter\">{firstLetter}</span>\r\n                </p>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleClick = (event)=>{\r\n        const {attributes, startTime, timeOut, automaticAnswer} ={...this.props};\r\n        this.props.fillAnswer(event.key ? event.key : '', startTime, attributes.realAnswer, automaticAnswer, timeOut);\r\n        document.removeEventListener('keypress', this.handleClick);\r\n    }\r\n\r\n    render() {\r\n        const {attributes, startTime, timeOut, automaticAnswer} ={...this.props};\r\n        const element = this.returnElementByType(attributes.type, attributes.firstLetter, attributes.secondLetter, attributes.spacing);\r\n        if(automaticAnswer ){\r\n            this.props.fillAnswer('', startTime, attributes.realAnswer, automaticAnswer, timeOut);\r\n            document.removeEventListener('keypress', this.handleClick);\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {element}\r\n            {/* <span className={attributes.className}>{attributes.value}</span> */}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Element;","import React, { Component } from 'react';\r\nimport Element from './element/element';\r\nimport './question.css';\r\nclass Question extends Component {\r\n\r\n    state = {\r\n        className : 'test-to-show',\r\n        automaticAnswer : false,\r\n        elemClassName: 'letter-container'\r\n    }\r\n\r\n    componentDidMount(){\r\n        // const userAnswers = this.props.userAnswers;\r\n\r\n        const timeOut = this.props.timeOut;\r\n        const timetoShow = this.props.timetoShow;\r\n        console.log(timetoShow);\r\n        setTimeout(()=>{\r\n            let elemClassName = this.state.elemClassName;\r\n            elemClassName += ' hidden';\r\n            this.setState({elemClassName});\r\n        },timetoShow);\r\n\r\n        let automaticAnswer = this.state.automaticAnswer;\r\n        setTimeout(()=>{\r\n            automaticAnswer = true;\r\n            this.setState({automaticAnswer});\r\n        },timeOut);\r\n    }\r\n\r\n    returnRealAnswer(type, firstLetter, secondLetter){\r\n        switch(type){\r\n            case '1' : return firstLetter;\r\n            case '2' : return secondLetter;\r\n            case '3' : return firstLetter;\r\n            case '4' : return secondLetter;\r\n        }\r\n    }\r\n\r\n    updateAutomatic = () =>{\r\n        let automaticAnswer = true;\r\n        this.setState({automaticAnswer});\r\n    }\r\n\r\n\r\n    render() {\r\n        const {type, spacing, firstLetter, secondLetter, timeOut} = {...this.props}\r\n        let attributes ={};\r\n        attributes.type = type;\r\n        attributes.spacing = spacing;\r\n        attributes.firstLetter = firstLetter;\r\n        attributes.secondLetter = secondLetter;\r\n        attributes.realAnswer = this.returnRealAnswer(type,firstLetter, secondLetter);\r\n        let startTime = new Date();\r\n        const automaticAnswer = this.state.automaticAnswer;\r\n        return (\r\n            <div className=\"test-to-show\">\r\n            <div className={this.state.elemClassName}>\r\n            <Element\r\n                    attributes={attributes}\r\n                    startTime = {startTime}\r\n                    timeOut = {timeOut}\r\n                    automaticAnswer = {automaticAnswer}\r\n                    fillAnswer = {this.props.fillAnswer}\r\n                />\r\n\r\n            </div>\r\n            <span className=\"plus-sign\">+</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;","import React, { Component } from 'react';\r\nimport Question from './question/question';\r\nimport QuestionIntermediary from '../../../../common/questionIntermediary/questionIntermediary';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport './questions.scss'\r\nimport test4json from '../test4quiz';\r\nclass Questions extends Component {\r\n    state={\r\n        answered : false,\r\n        userAnswer : null,\r\n        realAnswer : null,\r\n        answerTime : null,\r\n        startTime : null,\r\n        endTime : null,\r\n        timetoShow: null,\r\n        timeOut : null,\r\n        isEventListenerNeeded: true,\r\n        falseCounter : 0,\r\n        userAnswers: [],\r\n        sortedQuestions: [],\r\n        counter: 0,\r\n        token : '',\r\n        whatToShow : false,\r\n        type: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        let type = this.props.match.url;\r\n        type = type.substring(type.lastIndexOf('/')+1);\r\n        this.setState({type});\r\n        let sortedQuestions = [];\r\n        let questions = [];\r\n        let string;\r\n        // for development\r\n        // questions = test4json.quiz;\r\n        // while(questions.length > 0){\r\n        //     let elementIndex = Math.floor(Math.random() * questions.length);\r\n        //     if(questions[elementIndex]){\r\n        //         sortedQuestions.push(questions[elementIndex]);\r\n        //         questions.splice(elementIndex,1);\r\n        //     }\r\n        // }\r\n        // const timetoShow = 100;\r\n        // const timeOut = 1000;\r\n        // this.setState({sortedQuestions, timetoShow, timeOut});\r\n        // console.log(sortedQuestions);\r\n\r\n\r\n\r\n        //for build\r\n        axios.get('http://localhost/psycology-test/backend/user/index/')\r\n            .then(response => {\r\n                string = response.data\r\n                let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n                let lastIndex = null;\r\n\r\n                for(let i=startIndex; i<string.length; i++){\r\n                    if(string[i]==='\"'){\r\n                        lastIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                string = string.substring(startIndex, lastIndex);\r\n                \r\n                $.ajax({\r\n                    headers: {\r\n                        'X-CSRF-TOKEN':  string\r\n                    },\r\n                    url : 'http://localhost/psycology-test/backend/user/seleqcJson',\r\n                    dataType: 'json',\r\n                    type: 'POST',\r\n                    success : response => {\r\n                        let question = {};\r\n                        for(let test in response){\r\n                            if(response[test].proc !== \"\" && type === \"demoquestions\"){\r\n                                question.id = test;\r\n                                question.questions = response[test];\r\n                            }\r\n                            if((response[test].proc === \"\" || response[test].proc === undefined) && type === \"questions\"){\r\n                                question.id = test;\r\n                                question.questions = response[test];\r\n                            }\r\n                        }\r\n\r\n                        questions = question.questions.quiz;\r\n                        console.log(questions);\r\n                        while(questions.length > 0){\r\n                            let elementIndex = Math.floor(Math.random() * questions.length);\r\n                            if(questions[elementIndex]){\r\n                                sortedQuestions.push(questions[elementIndex]);\r\n                                questions.splice(elementIndex,1);\r\n                            }\r\n                        }\r\n                        // const timetoShow = response.taim;\r\n                        // const timeOut = response.testtaim\r\n                        const timetoShow = 100;\r\n                        const timeOut = 1000;\r\n                \r\n                        this.setState({sortedQuestions, timetoShow, timeOut});\r\n                    }\r\n                })\r\n\r\n            });\r\n    }\r\n\r\n\r\n    updateState = () => {\r\n        let counter = this.state.counter;\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n        if(counter>=0){\r\n            counter ++;\r\n        }\r\n        else{\r\n            counter = 0;\r\n        }\r\n\r\n        this.setState({counter, whatToShow});\r\n    }\r\n\r\n\r\n    fillAnswer=(keyBoardKey, startTime, realAnswer, automaticAnswer, timeOut)=>{\r\n\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n\r\n        let timeNow = new Date();\r\n        let endTime = timeNow - startTime;\r\n        let userAnswer = keyBoardKey;\r\n\r\n        if(automaticAnswer){\r\n            userAnswer = null;\r\n            endTime = timeOut;\r\n        }\r\n        const isUserAnswerCorrect = keyBoardKey.toLowerCase() == realAnswer.toLowerCase() ? true: false;\r\n        const answered = automaticAnswer ? false : true\r\n        // console.log(userAnswer);\r\n\r\n\r\n        let userAnswers = this.state.userAnswers;\r\n        userAnswers.push({\r\n            userAnswer : userAnswer,\r\n            answerTime : endTime,\r\n            isUserAnswerCorrect :isUserAnswerCorrect,\r\n            answered : answered\r\n        });\r\n\r\n        this.setState({userAnswers, whatToShow});\r\n\r\n        console.log(userAnswers);\r\n    }\r\n\r\n    render() {\r\n        const sortedQuestions = this.state.sortedQuestions;\r\n        let question = null;\r\n        const isEventListenerNeeded = this.state.isEventListenerNeeded;\r\n        // console.log(`questions 3: ${isEventListenerNeeded}`);\r\n        if(this.state.counter == 0 && sortedQuestions[0]){\r\n            question =\r\n            <Question\r\n                key = {0}\r\n                userAnswers = {this.state.userAnswers}\r\n                questionNumber = {0}\r\n                type = {sortedQuestions[0].variant}\r\n                spacing={sortedQuestions[0].dashoreba}\r\n                firstLetter={sortedQuestions[0].pirveliaso}\r\n                secondLetter={sortedQuestions[0].meoreaso}\r\n                fillAnswer = {this.fillAnswer}\r\n                timeOut = {this.state.timeOut}\r\n                timetoShow = {this.state.timetoShow}\r\n\r\n            />\r\n        }\r\n        else{\r\n            question = sortedQuestions.map((quest,i) => {\r\n                if(i == this.state.counter){\r\n                    return <Question\r\n                    key = {i}\r\n                    userAnswers = {this.state.userAnswers}\r\n                    questionNumber = {i}\r\n                    type = {sortedQuestions[i].variant}\r\n                    spacing={sortedQuestions[i].dashoreba}\r\n                    firstLetter={sortedQuestions[i].pirveliaso}\r\n                    secondLetter={sortedQuestions[i].meoreaso}\r\n                    fillAnswer = {this.fillAnswer}\r\n                    timeOut = {this.state.timeOut}\r\n                    timetoShow = {this.state.timetoShow}\r\n                />\r\n                }\r\n            });\r\n        }\r\n\r\n        // this.setState({counter});\r\n\r\n        let contentToShow = null;\r\n        let whatToShow = this.state.whatToShow;\r\n        if(whatToShow){\r\n            contentToShow = <QuestionIntermediary\r\n                                updateCounter = {this.updateState}\r\n                                userAnswers = {this.state.userAnswers}\r\n                                sortedQuestions={this.state.sortedQuestions}\r\n                                percent = {this.props.test4Percent}\r\n                                type={this.state.type}\r\n                                name={'Test4'}\r\n                                updateResultsForChart = {this.props.updateResultsForChart}\r\n                                />;\r\n            whatToShow = false;\r\n        }\r\n        else{\r\n            contentToShow = question;\r\n            whatToShow = true;\r\n        }\r\n\r\n        let currentQuestion = this.state.counter;\r\n        currentQuestion ++;\r\n        let wholeNumber = this.state.sortedQuestions.length;\r\n\r\n\r\n        return (\r\n            <div className=\"tests-holder\">\r\n                <div className=\"test-wrapper\">\r\n                    {contentToShow}\r\n                    <p className=\"current-question\">\r\n                        {`${currentQuestion} / ${wholeNumber}`}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n","import React, { Component } from 'react';\r\nclass Element extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        document.addEventListener('keypress',this.handleClick)\r\n    }\r\n\r\n    returnFirstElement=(pirveliaso,pirvelgilak,meoreiaso,meoregilak)=>{\r\n        let elementToShow = {};\r\n        let number = Math.floor(Math.random()*2);\r\n        if(number === 0){\r\n            elementToShow.char = pirveliaso;\r\n            elementToShow.realAnswer = pirvelgilak;\r\n        }\r\n        else{\r\n            elementToShow.char = meoreiaso;\r\n            elementToShow.realAnswer = meoregilak;\r\n        }\r\n        return elementToShow;\r\n    };\r\n\r\n    returnSecondElement = (mesameaso,mesamegilak, meotxeaso, meotxegilak)=>{\r\n        let elementToShow = {};\r\n        let number = Math.floor(Math.random()*2);\r\n        if(number === 0){\r\n            elementToShow.char = mesameaso;\r\n            elementToShow.realAnswer = mesamegilak;\r\n        }\r\n        else{\r\n            elementToShow.char = meotxeaso;\r\n            elementToShow.realAnswer = meotxegilak;\r\n        }\r\n        return elementToShow;\r\n\r\n    };\r\n\r\n    returnThirdElement = (pirveliaso,pirvelgilak,meoreiaso,meoregilak,mesameaso,mesamegilak,meotxeaso,meotxegilak)=>{\r\n        let elementToShow = {};\r\n        let number = Math.floor(Math.random()*4);\r\n        if(number === 0){\r\n            elementToShow.char = pirveliaso;\r\n            elementToShow.realAnswer = pirvelgilak;\r\n        }\r\n        if(number === 1){\r\n            elementToShow.char = meoreiaso;\r\n            elementToShow.realAnswer = meoregilak;\r\n        }\r\n\r\n        if(number === 2){\r\n            elementToShow.char = mesameaso;\r\n            elementToShow.realAnswer = mesamegilak;\r\n        }\r\n        if(number === 3){\r\n            elementToShow.char = meotxeaso;\r\n            elementToShow.realAnswer = meotxegilak;\r\n        }\r\n        return elementToShow;\r\n    };\r\n\r\n    returnElementByType=(attributes)=>{\r\n        const {type,pirveliaso,pirvelgilak,meoreiaso,meoregilak,mesameaso,mesamegilak,meotxeaso,meotxegilak} = {...attributes}\r\n        switch(type){\r\n            case 'type1' : return(this.returnFirstElement(pirveliaso,pirvelgilak,meoreiaso,meoregilak));\r\n            case 'type2' : return(this.returnSecondElement(mesameaso,mesamegilak, meotxeaso, meotxegilak));\r\n            case 'type3' : return(this.returnThirdElement(pirveliaso,pirvelgilak,meoreiaso,meoregilak,mesameaso,mesamegilak,meotxeaso,meotxegilak));\r\n        }\r\n    }\r\n\r\n    // returnElementByType=(type, firstLetter, secondLetter, spacing)=>{\r\n    //     let space = null;\r\n    //     switch(spacing){\r\n    //         case '3' : space = 'margin3'; break;\r\n    //         case '2' : space = 'margin2'; break;\r\n    //         case '1' : space = 'margin1'; break;\r\n    //     }\r\n    //     switch(type){\r\n    //         case '1' : return (\r\n    //             <p className={`letters-holder ${space}`}>\r\n    //                 <span className=\"left-letter\">{secondLetter}</span>\r\n    //                 <span className=\"center-letter\">{firstLetter}</span>\r\n    //             </p>\r\n    //         );\r\n    //         case '2' : return(\r\n    //             <p className={`letters-holder ${space}`}>\r\n    //                 <span className=\"left-letter\">{firstLetter}</span>\r\n    //                 <span className=\"center-letter\">{secondLetter}</span>\r\n    //             </p>\r\n    //         );\r\n    //         case '3' : return(\r\n    //             <p className={`letters-holder ${space}`}>\r\n    //                 <span className=\"left-letter\">{secondLetter}</span>\r\n    //                 <span className=\"center-letter\">{firstLetter}</span>\r\n    //                 <span className=\"right-letter\">{secondLetter}</span>\r\n    //             </p>\r\n    //         );\r\n    //         case '4' : return(\r\n    //             <p className=\"letters-holder\">\r\n    //                 <span className=\"left-letter\">{firstLetter}</span>\r\n    //                 <span className=\"center-letter\">{secondLetter}</span>\r\n    //                 <span className=\"right-letter\">{firstLetter}</span>\r\n    //             </p>\r\n    //         )\r\n    //     }\r\n    // }\r\n\r\n    handleClick = (event)=>{\r\n        const {attributes, startTime, timeOut, automaticAnswer} ={...this.props};\r\n        const element = this.returnElementByType(attributes);\r\n        this.props.fillAnswer(event.key ? event.key : '', startTime, element.realAnswer, automaticAnswer, timeOut);\r\n        document.removeEventListener('keypress', this.handleClick);\r\n    }\r\n\r\n    render() {\r\n        const {attributes, startTime, timeOut, automaticAnswer} ={...this.props};\r\n        const element = this.returnElementByType(attributes);\r\n        console.log(element)\r\n        if(automaticAnswer ){\r\n            this.props.fillAnswer('', startTime, element.realAnswer, automaticAnswer, timeOut);\r\n            document.removeEventListener('keypress', this.handleClick);\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {element.char}\r\n            {/* <span className={attributes.className}>{attributes.value}</span> */}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Element;","import React, { Component } from 'react';\r\nimport Element from './element/element';\r\nimport './question.css';\r\nclass Question extends Component {\r\n\r\n    state = {\r\n        className : 'test-to-show',\r\n        automaticAnswer : false,\r\n        elemClassName: 'letter-container'\r\n    }\r\n\r\n    componentDidMount(){\r\n        // const userAnswers = this.props.userAnswers;\r\n\r\n        const timeOut = this.props.timeOut;\r\n        const timetoShow = this.props.timetoShow;\r\n        console.log(timetoShow);\r\n        setTimeout(()=>{\r\n            let elemClassName = this.state.elemClassName;\r\n            elemClassName += ' hidden';\r\n            this.setState({elemClassName});\r\n        },timetoShow);\r\n\r\n        let automaticAnswer = this.state.automaticAnswer;\r\n        setTimeout(()=>{\r\n            automaticAnswer = true;\r\n            this.setState({automaticAnswer});\r\n        },timeOut);\r\n    }\r\n\r\n    updateAutomatic = () =>{\r\n        let automaticAnswer = true;\r\n        this.setState({automaticAnswer});\r\n    }\r\n\r\n\r\n    render() {\r\n        const {quest,timeOut} = {...this.props}\r\n        console.log(this.props.quest);\r\n        let attributes ={};\r\n        attributes.pirveliaso = quest.question.pirveliaso;\r\n        attributes.pirvelgilak = quest.question.pirvelgilak;\r\n        attributes.meoreiaso = quest.question.meoreiaso;\r\n        attributes.meoregilak = quest.question.meoregilak;\r\n        attributes.mesameaso = quest.question.mesameaso;\r\n        attributes.mesamegilak = quest.question.mesamegilak;\r\n        attributes.meotxeaso = quest.question.meotxeaso;\r\n        attributes.meotxegilak = quest.question.meotxegilak;\r\n        attributes.type = quest.type;\r\n        let startTime = new Date();\r\n        const automaticAnswer = this.state.automaticAnswer;\r\n        return (\r\n            <div className=\"test-to-show\">\r\n                <div className={this.state.elemClassName}>\r\n                <Element\r\n                        attributes={attributes}\r\n                        startTime = {startTime}\r\n                        timeOut = {timeOut}\r\n                        automaticAnswer = {automaticAnswer}\r\n                        fillAnswer = {this.props.fillAnswer}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;","import React, { Component } from 'react';\r\nimport Question from './question/question';\r\nimport QuestionIntermediary from '../../../../common/questionIntermediary/questionIntermediary';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport './questions.scss'\r\nimport test6json from '../test6quiz';\r\nclass Questions extends Component {\r\n    state={\r\n        answered : false,\r\n        userAnswer : null,\r\n        realAnswer : null,\r\n        answerTime : null,\r\n        startTime : null,\r\n        endTime : null,\r\n        timetoShow: null,\r\n        timeOut : null,\r\n        userAnswers: [],\r\n        sortedQuestions: [],\r\n        counter: 0,\r\n        token : '',\r\n        whatToShow : false,\r\n        type: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        let type = this.props.match.url;\r\n        type = type.substring(type.lastIndexOf('/')+1);\r\n        this.setState({type});\r\n        let sortedQuestions = [];\r\n        let questions = [];\r\n        let string;\r\n        let type1 = [];\r\n        let type2 = [];\r\n        let type3 = [];\r\n        let sortedQuestions1 =[];\r\n        let sortedQuestions2 =[];\r\n        let sortedQuestions3 =[];\r\n\r\n        // for development\r\n        // questions = test6json.quiz;\r\n        // console.log(questions);\r\n        // questions.map(elem => {\r\n        //     // debugger;\r\n        //     if(elem.mesameaso === \"\" && elem.meotxeaso === \"\"){\r\n        //         let quest  = {};\r\n        //         quest.type=\"type1\";\r\n        //         quest.question= elem;\r\n        //         type1.push(quest);\r\n        //     }\r\n        //     if(elem.pirveliaso === \"\" && elem.meoreiaso === \"\"){\r\n        //         let quest  = {};\r\n        //         quest.type=\"type2\";\r\n        //         quest.question= elem;\r\n        //         type2.push(quest)\r\n        //     }\r\n        //     if(elem.pirveliaso !== \"\" && elem.meoreiaso !== \"\" && elem.mesameaso !== \"\" && elem.meotxeaso !== \"\"){\r\n        //         let quest  = {};\r\n        //         quest.type=\"type3\";\r\n        //         quest.question= elem;\r\n        //         type3.push(quest);\r\n        //     }\r\n        //  })\r\n\r\n \r\n        //  while(type1.length > 0){\r\n        //      let elementIndex = Math.floor(Math.random() * type1.length);\r\n        //      if(type1[elementIndex]){\r\n        //          sortedQuestions1.push(type1[elementIndex]);\r\n        //          type1.splice(elementIndex,1);\r\n        //      }\r\n        //  }\r\n\r\n\r\n\r\n        //  while(type2.length > 0){\r\n        //     let elementIndex = Math.floor(Math.random() * type2.length);\r\n        //     if(type2[elementIndex]){\r\n        //         sortedQuestions2.push(type2[elementIndex]);\r\n        //         type2.splice(elementIndex,1);\r\n        //     }\r\n        // }\r\n\r\n\r\n        // while(type3.length > 0){\r\n        //     let elementIndex = Math.floor(Math.random() * type3.length);\r\n        //     if(type3[elementIndex]){\r\n        //         sortedQuestions3.push(type3[elementIndex]);\r\n        //         type3.splice(elementIndex,1);\r\n        //     }\r\n        // }\r\n\r\n        // sortedQuestions=[...sortedQuestions1,...sortedQuestions2,...sortedQuestions3];\r\n        // const timetoShow = 100;\r\n        // const timeOut = 1000;\r\n        // this.setState({sortedQuestions, timetoShow, timeOut});\r\n        // console.log(sortedQuestions);\r\n\r\n\r\n\r\n        //for build\r\n        axios.get('http://localhost/psycology-test/backend/user/index/')\r\n            .then(response => {\r\n                string = response.data\r\n                let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n                let lastIndex = null;\r\n\r\n                for(let i=startIndex; i<string.length; i++){\r\n                    if(string[i]==='\"'){\r\n                        lastIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                string = string.substring(startIndex, lastIndex);\r\n                \r\n                $.ajax({\r\n                    headers: {\r\n                        'X-CSRF-TOKEN':  string\r\n                    },\r\n                    url : 'http://localhost/psycology-test/backend/user/reaqJson',\r\n                    dataType: 'json',\r\n                    type: 'POST',\r\n                    success : response => {\r\n                        let question = {};\r\n                        for(let test in response){\r\n                            if(response[test].proc !== \"\" && type === \"demoquestions\"){\r\n                                question.id = test;\r\n                                question.questions = response[test];\r\n                            }\r\n                            if((response[test].proc === \"\" || response[test].proc === undefined) && type === \"questions\"){\r\n                                question.id = test;\r\n                                question.questions = response[test];\r\n                            }\r\n                        }\r\n\r\n                        questions = question.questions.quiz;\r\n                        // console.log(questions);\r\n                        // while(questions.length > 0){\r\n                        //     let elementIndex = Math.floor(Math.random() * questions.length);\r\n                        //     if(questions[elementIndex]){\r\n                        //         sortedQuestions.push(questions[elementIndex]);\r\n                        //         questions.splice(elementIndex,1);\r\n                        //     }\r\n                        // }\r\n                        questions.map(elem => {\r\n                            if(elem.mesameaso === \"\" && elem.meotxeaso === \"\"){\r\n                                let quest  = {};\r\n                                quest.type=\"type1\";\r\n                                quest.question= elem;\r\n                                type1.push(quest);\r\n                            }\r\n                            if(elem.pirveliaso === \"\" && elem.meoreiaso === \"\"){\r\n                                let quest  = {};\r\n                                quest.type=\"type2\";\r\n                                quest.question= elem;\r\n                                type2.push(quest)\r\n                            }\r\n                            if(elem.pirveliaso !== \"\" && elem.meoreiaso !== \"\" && elem.mesameaso !== \"\" && elem.meotxeaso !== \"\"){\r\n                                let quest  = {};\r\n                                quest.type=\"type3\";\r\n                                quest.question= elem;\r\n                                type3.push(quest);\r\n                            }\r\n                        })\r\n\r\n                \r\n                        while(type1.length > 0){\r\n                            let elementIndex = Math.floor(Math.random() * type1.length);\r\n                            if(type1[elementIndex]){\r\n                                sortedQuestions1.push(type1[elementIndex]);\r\n                                type1.splice(elementIndex,1);\r\n                            }\r\n                        }\r\n\r\n\r\n\r\n                        while(type2.length > 0){\r\n                            let elementIndex = Math.floor(Math.random() * type2.length);\r\n                            if(type2[elementIndex]){\r\n                                sortedQuestions2.push(type2[elementIndex]);\r\n                                type2.splice(elementIndex,1);\r\n                            }\r\n                        }\r\n\r\n\r\n                        while(type3.length > 0){\r\n                            let elementIndex = Math.floor(Math.random() * type3.length);\r\n                            if(type3[elementIndex]){\r\n                                sortedQuestions3.push(type3[elementIndex]);\r\n                                type3.splice(elementIndex,1);\r\n                            }\r\n                        }\r\n\r\n                        sortedQuestions=[...sortedQuestions1,...sortedQuestions2,...sortedQuestions3];\r\n                        const timetoShow = 100;\r\n                        const timeOut = 1000;\r\n                        // const timetoShow = response.taim;\r\n                        // const timeOut = response.testtaim;\r\n\r\n                        this.setState({sortedQuestions, timetoShow, timeOut});\r\n                    }\r\n                })\r\n\r\n            });\r\n    }\r\n\r\n\r\n    updateState = () => {\r\n        let counter = this.state.counter;\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n        if(counter>=0){\r\n            counter ++;\r\n        }\r\n        else{\r\n            counter = 0;\r\n        }\r\n\r\n        this.setState({counter, whatToShow});\r\n    }\r\n\r\n\r\n    fillAnswer=(keyBoardKey, startTime, realAnswer, automaticAnswer, timeOut)=>{\r\n\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n\r\n        let timeNow = new Date();\r\n        let endTime = timeNow - startTime;\r\n        let userAnswer = keyBoardKey;\r\n\r\n        if(automaticAnswer){\r\n            userAnswer = null;\r\n            endTime = timeOut;\r\n        }\r\n        const isUserAnswerCorrect = keyBoardKey.toLowerCase() == realAnswer.toLowerCase() ? true: false;\r\n        const answered = automaticAnswer ? false : true\r\n        // console.log(userAnswer);\r\n\r\n\r\n        let userAnswers = this.state.userAnswers;\r\n        userAnswers.push({\r\n            userAnswer : userAnswer,\r\n            answerTime : endTime,\r\n            isUserAnswerCorrect :isUserAnswerCorrect,\r\n            answered : answered\r\n        });\r\n\r\n        this.setState({userAnswers, whatToShow});\r\n\r\n        console.log(userAnswers);\r\n    }\r\n\r\n    render() {\r\n        const sortedQuestions = this.state.sortedQuestions;\r\n        let question = null;\r\n        // console.log(`questions 3: ${isEventListenerNeeded}`);\r\n        if(this.state.counter == 0 && sortedQuestions[0]){\r\n            question =\r\n            <Question\r\n                key = {0}\r\n                userAnswers = {this.state.userAnswers}\r\n                questionNumber = {0}\r\n                quest = {sortedQuestions[0]}\r\n                fillAnswer = {this.fillAnswer}\r\n                timeOut = {this.state.timeOut}\r\n                timetoShow = {this.state.timetoShow}\r\n\r\n            />\r\n        }\r\n        else{\r\n            question = sortedQuestions.map((quest,i) => {\r\n                if(i == this.state.counter){\r\n                    return <Question\r\n                    key = {i}\r\n                    userAnswers = {this.state.userAnswers}\r\n                    questionNumber = {i}\r\n                    quest = {sortedQuestions[i]}\r\n                    fillAnswer = {this.fillAnswer}\r\n                    timeOut = {this.state.timeOut}\r\n                    timetoShow = {this.state.timetoShow}\r\n                />\r\n                }\r\n            });\r\n        }\r\n\r\n        // this.setState({counter});\r\n\r\n        let contentToShow = null;\r\n        let whatToShow = this.state.whatToShow;\r\n        if(whatToShow){\r\n            contentToShow = <QuestionIntermediary\r\n                                updateCounter = {this.updateState}\r\n                                userAnswers = {this.state.userAnswers}\r\n                                sortedQuestions={this.state.sortedQuestions}\r\n                                percent = {this.props.test6Percent}\r\n                                type={this.state.type}\r\n                                name={'Test6'}\r\n                                updateResultsForChart = {this.props.updateResultsForChart}\r\n                                />;\r\n            whatToShow = false;\r\n        }\r\n        else{\r\n            contentToShow = question;\r\n            whatToShow = true;\r\n        }\r\n\r\n        let currentQuestion = this.state.counter;\r\n        currentQuestion ++;\r\n        let wholeNumber = this.state.sortedQuestions.length;\r\n\r\n        return (\r\n            <div className=\"tests-holder\">\r\n                <div className=\"test-wrapper\">\r\n                    {contentToShow}\r\n                    <p className=\"current-question\">\r\n                        {`${currentQuestion} / ${wholeNumber}`}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n","import React, { Component } from 'react';\r\nimport './element.css';\r\nclass Element extends Component {\r\n\r\n\r\n    // componentDidMount(){\r\n    //     document.addEventListener('keypress',this.handleClick)\r\n    // }\r\n\r\n    returnElementByType=(degree, reversed, char)=>{\r\n        let className = \"character transformed\";\r\n        // reversed === 1 ? className += ' reversed' : className +='';\r\n        const deg = reversed === 1 ? 180 : 0;\r\n        const elemStyle = {\r\n            WebkitTransform: 'rotate('+degree+'deg) rotateY('+deg+'deg)',\r\n            MozTransform: 'rotate('+degree+'deg) rotateY('+deg+'deg)',\r\n            msTransform: 'rotate('+degree+'deg) rotateY('+deg+'deg)',\r\n            OTransform: 'rotate('+degree+'deg) rotateY('+deg+'deg)',\r\n            transform: 'rotate('+degree+'deg) rotateY('+deg+'deg)',\r\n        }\r\n        let element =\r\n            ( \r\n                <div className=\"element\">\r\n                    <p className=\"real-char character\">{char}</p>\r\n                    <p className={className} style={elemStyle}>{char}</p>\r\n                </div>\r\n            );\r\n        return element;\r\n    }\r\n\r\n    // handleClick = (event)=>{\r\n    //     const {attributes, startTime, timeOut, automaticAnswer} ={...this.props};\r\n    //     this.props.fillAnswer(event.key ? event.key : '', startTime, attributes.realAnswer, automaticAnswer, timeOut);\r\n    //     document.removeEventListener('keypress', this.handleClick);\r\n    // }\r\n\r\n    render() {\r\n        const {attributes, startTime, timeOut, automaticAnswer} ={...this.props};\r\n        const element = this.returnElementByType(attributes.gradusi, attributes.revers, attributes.testaso);\r\n        if(automaticAnswer ){\r\n            this.props.fillAnswer(null, startTime, attributes.realAnswer, automaticAnswer, timeOut);\r\n            // document.removeEventListener('keypress', this.handleClick);\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {element}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Element;","import React, { Component } from 'react';\r\nimport Element from './element/element';\r\nimport './question.css';\r\nclass Question extends Component {\r\n\r\n    state = {\r\n        className : 'test-to-show',\r\n        automaticAnswer : false,\r\n        elemClassName: 'letter-container'\r\n    }\r\n\r\n    componentDidMount(){\r\n        // const userAnswers = this.props.userAnswers;\r\n\r\n        const timeOut = this.props.timeOut;\r\n        const timetoShow = this.props.timetoShow;\r\n        // setTimeout(()=>{\r\n        //     let elemClassName = this.state.elemClassName;\r\n        //     elemClassName += ' hidden';\r\n        //     this.setState({elemClassName});\r\n        // },timetoShow);\r\n\r\n        let automaticAnswer = this.state.automaticAnswer;\r\n        setTimeout(()=>{\r\n            automaticAnswer = true;\r\n            this.setState({automaticAnswer});\r\n        },timeOut);\r\n    }\r\n\r\n    returnRealAnswer(type, firstLetter, secondLetter){\r\n        switch(type){\r\n            case '1' : return firstLetter;\r\n            case '2' : return secondLetter;\r\n            case '3' : return firstLetter;\r\n            case '4' : return secondLetter;\r\n        }\r\n    }\r\n\r\n    updateAutomatic = () =>{\r\n        let automaticAnswer = true;\r\n        this.setState({automaticAnswer});\r\n    }\r\n\r\n\r\n    render() {\r\n        const {gradusi, revers, testaso, timeOut} = {...this.props}\r\n        const realAnswer = revers === 1 ? true : false;\r\n        let attributes ={};\r\n        attributes.gradusi = gradusi;\r\n        attributes.revers = revers;\r\n        attributes.testaso = testaso;\r\n        attributes.realAnswer = realAnswer;\r\n        let startTime = new Date();\r\n        const automaticAnswer = this.state.automaticAnswer;\r\n        return (\r\n            <div className=\"test-to-show\">\r\n                <div className={this.state.elemClassName}>\r\n                    <Element\r\n                            attributes={attributes}\r\n                            startTime = {startTime}\r\n                            timeOut = {timeOut}\r\n                            automaticAnswer = {automaticAnswer}\r\n                            fillAnswer = {this.props.fillAnswer}\r\n                        />\r\n                </div>\r\n                <div className=\"buttons\">                \r\n                    <button className=\"answer-buttons\" onClick={()=>{this.props.fillAnswer(false,startTime,realAnswer,automaticAnswer,timeOut)}}>მობრუნებული</button>\r\n                    <button className=\"answer-buttons\" onClick={()=>{this.props.fillAnswer(true,startTime,realAnswer,automaticAnswer,timeOut)}}>რევერსული</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;","import React, { Component } from 'react';\r\nimport Question from './question/question';\r\nimport QuestionIntermediary from '../../../../common/questionIntermediary/questionIntermediary';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport './questions.scss'\r\nimport test7json from '../test7quiz';\r\nclass Questions extends Component {\r\n    state={\r\n        answered : false,\r\n        userAnswer : null,\r\n        realAnswer : null,\r\n        answerTime : null,\r\n        startTime : null,\r\n        endTime : null,\r\n        timetoShow: null,\r\n        timeOut : null,\r\n        isEventListenerNeeded: true,\r\n        falseCounter : 0,\r\n        userAnswers: [],\r\n        sortedQuestions: [],\r\n        counter: 0,\r\n        token : '',\r\n        whatToShow : false,\r\n        type: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props.test7Percent);\r\n        let type = this.props.match.url;\r\n        type = type.substring(type.lastIndexOf('/')+1);\r\n        this.setState({type});\r\n        let sortedQuestions = [];\r\n        let questions = [];\r\n        let string;\r\n        // for development\r\n        let question = {};\r\n        for(let test in test7json){\r\n            if(test7json[test].proc !== \"\" && type === \"demoquestions\"){\r\n                question.id = test;\r\n                question.questions = test7json[test];\r\n            }\r\n            if((test7json[test].proc === \"\" || test7json[test].proc === undefined) && type === \"questions\"){\r\n                question.id = test;\r\n                question.questions = test7json[test];\r\n            }\r\n        }\r\n\r\n        questions = question.questions.quiz;\r\n        while(questions.length > 0){\r\n            let elementIndex = Math.floor(Math.random() * questions.length);\r\n            if(questions[elementIndex]){\r\n                sortedQuestions.push(questions[elementIndex]);\r\n                questions.splice(elementIndex,1);\r\n            }\r\n        }\r\n        console.log(questions);\r\n        const timetoShow = 100;\r\n        const timeOut = 1000;\r\n        this.setState({sortedQuestions, timetoShow, timeOut});\r\n        console.log(sortedQuestions);\r\n\r\n\r\n\r\n        //for build\r\n        // axios.get('http://localhost/psycology-test/backend/user/index/')\r\n        //     .then(response => {\r\n        //         string = response.data\r\n        //         let startIndex = string.indexOf('<meta name=\"csrf-token\" content=\"') + '<meta name=\"csrf-token\" content=\"'.length;\r\n        //         let lastIndex = null;\r\n\r\n        //         for(let i=startIndex; i<string.length; i++){\r\n        //             if(string[i]==='\"'){\r\n        //                 lastIndex = i;\r\n        //                 break;\r\n        //             }\r\n        //         }\r\n        //         string = string.substring(startIndex, lastIndex);\r\n                \r\n        //         $.ajax({\r\n        //             headers: {\r\n        //                 'X-CSRF-TOKEN':  string\r\n        //             },\r\n        //             url : 'http://localhost/psycology-test/backend/user/mentJson',\r\n        //             dataType: 'json',\r\n        //             type: 'POST',\r\n        //             success : response => {\r\n        //                 let question = {};\r\n        //                 for(let test in response){\r\n        //                     if(response[test].proc !== \"\" && type === \"demoquestions\"){\r\n        //                         question.id = test;\r\n        //                         question.questions = response[test];\r\n        //                         console.log(question.questions,response[test]);\r\n        //                     }\r\n        //                     if((response[test].proc === \"\" || response[test].proc === undefined) && type === \"questions\"){\r\n        //                         question.id = test;\r\n        //                         question.questions = response[test];\r\n        //                         console.log(question.questions,response[test]);\r\n        //                     }\r\n        //                 }\r\n\r\n        //                 questions = question.questions.quiz;\r\n        //                 while(questions.length > 0){\r\n        //                     let elementIndex = Math.floor(Math.random() * questions.length);\r\n        //                     if(questions[elementIndex]){\r\n        //                         sortedQuestions.push(questions[elementIndex]);\r\n        //                         questions.splice(elementIndex,1);\r\n        //                     }\r\n        //                 }\r\n        //                 // const timetoShow = response.taim;\r\n        //                 // const timeOut = response.testtaim\r\n        //                 const timetoShow = 100;\r\n        //                 const timeOut = 1000;\r\n                \r\n        //                 this.setState({sortedQuestions, timetoShow, timeOut});\r\n        //             }\r\n        //         })\r\n\r\n        //     });\r\n    }\r\n\r\n\r\n    updateState = () => {\r\n        let counter = this.state.counter;\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n        if(counter>=0){\r\n            counter ++;\r\n        }\r\n        else{\r\n            counter = 0;\r\n        }\r\n\r\n        this.setState({counter, whatToShow});\r\n    }\r\n\r\n\r\n    fillAnswer=(userAnswer, startTime, realAnswer, automaticAnswer, timeOut)=>{\r\n        let whatToShow = this.state.whatToShow;\r\n        whatToShow = !whatToShow;\r\n\r\n        let timeNow = new Date();\r\n        let endTime = timeNow - startTime;\r\n\r\n        if(automaticAnswer){\r\n            userAnswer = null;\r\n            endTime = timeOut;\r\n        }\r\n        const isUserAnswerCorrect = userAnswer == realAnswer ? true: false;\r\n        const answered = automaticAnswer ? false : true\r\n        let answer = null;\r\n        if(userAnswer === true){\r\n            answer = 'რევერსული';\r\n        }\r\n        if(userAnswer === false){\r\n            answer = 'მობრუნებული';\r\n        }\r\n        if(userAnswer === null){\r\n            answer = null;\r\n        }\r\n\r\n        let userAnswers = this.state.userAnswers;\r\n        userAnswers.push({\r\n            userAnswer : answer,\r\n            answerTime : endTime,\r\n            isUserAnswerCorrect :isUserAnswerCorrect,\r\n            answered : answered\r\n        });\r\n\r\n        this.setState({userAnswers, whatToShow});\r\n\r\n        console.log(this.state.sortedQuestions.length === userAnswers.length);\r\n        console.log(userAnswers);\r\n    }\r\n\r\n    render() {\r\n        const sortedQuestions = this.state.sortedQuestions;\r\n        let question = null;    \r\n        // console.log(`questions 3: ${isEventListenerNeeded}`);\r\n        if(this.state.counter == 0 && sortedQuestions[0]){\r\n            question =\r\n            <Question\r\n                key = {0}\r\n                userAnswers = {this.state.userAnswers}\r\n                questionNumber = {0}\r\n                gradusi = {sortedQuestions[0].gradusi}\r\n                revers={sortedQuestions[0].revers}\r\n                testaso={sortedQuestions[0].testaso}\r\n                fillAnswer = {this.fillAnswer}\r\n                timeOut = {this.state.timeOut}\r\n                timetoShow = {this.state.timetoShow}\r\n\r\n            />\r\n        }\r\n        else{\r\n            question = sortedQuestions.map((quest,i) => {\r\n                if(i == this.state.counter){\r\n                    return <Question\r\n                    key = {i}\r\n                    userAnswers = {this.state.userAnswers}\r\n                    questionNumber = {i}\r\n                    gradusi = {sortedQuestions[i].gradusi}\r\n                    revers={sortedQuestions[i].revers}\r\n                    testaso={sortedQuestions[i].testaso}\r\n                    fillAnswer = {this.fillAnswer}\r\n                    timeOut = {this.state.timeOut}\r\n                    timetoShow = {this.state.timetoShow}\r\n                />\r\n                }\r\n            });\r\n        }\r\n\r\n        // this.setState({counter});\r\n\r\n\r\n        let contentToShow = null;\r\n        let whatToShow = this.state.whatToShow;\r\n        if(whatToShow){\r\n            contentToShow = <QuestionIntermediary\r\n                                updateCounter = {this.updateState}\r\n                                userAnswers = {this.state.userAnswers}\r\n                                sortedQuestions={this.state.sortedQuestions}\r\n                                percent = {this.props.test7Percent}\r\n                                type={this.state.type}\r\n                                name={'Test7'}\r\n                                updateResultsForChart = {this.props.updateResultsForChart}\r\n                                />;\r\n            whatToShow = false;\r\n        }\r\n        else{\r\n            contentToShow = question;\r\n            whatToShow = true;\r\n        }\r\n\r\n        let currentQuestion = this.state.counter;\r\n        currentQuestion ++;\r\n        let wholeNumber = this.state.sortedQuestions.length;\r\n\r\n\r\n        return (\r\n            <div className=\"tests-holder\">\r\n                <div className=\"test-wrapper\">\r\n                    {contentToShow}\r\n                    <p className=\"current-question\">\r\n                        {`${currentQuestion} / ${wholeNumber}`}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\r\nimport TestMode from  '../common/testMode/testMode.jsx';\r\nimport TestList from '../components/tests/testList/testList';\r\nimport Results from '../common/results/results';\r\n\r\nimport Test1 from  '../components/tests/test1/test1';\r\nimport Test2 from  '../components/tests/test2/test2';\r\nimport Test3 from  '../components/tests/test3/test3';\r\nimport Test4 from  '../components/tests/test4/test4';\r\n\r\nimport Test6 from  '../components/tests/test6/test6';\r\nimport Test7 from  '../components/tests/test7/test7';\r\n\r\nimport Questions1 from '../components/tests/test1/questions/questions';\r\nimport Questions2 from '../components/tests/test2/questions/questions';\r\nimport Questions3 from '../components/tests/test3/questions/questions';\r\nimport Questions4 from '../components/tests/test4/questions/questions';\r\n\r\nimport Questions6 from '../components/tests/test6/questions/questions';\r\nimport Questions7 from '../components/tests/test7/questions/questions';\r\n\r\nclass Router extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Switch>\r\n                <Route path={`${process.env.PUBLIC_URL}/`} component={TestList} exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/result`} component={\r\n                    ()=> <Results \r\n                        resultsForChart={this.props.resultsForChart}/>\r\n                    } exact/>\r\n\r\n                <Route path={`${process.env.PUBLIC_URL}/Test1`} component={\r\n                    ()=><Test1\r\n                        findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                        updateTestPercent = {this.props.updateTestPercent}\r\n\r\n                        />\r\n                    } \r\n                    exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test1/modes`} component={\r\n                    () => <TestMode \r\n                        realUrl={`Test1/modes/questions`}\r\n                        demoUrl={`Test1/modes/demoquestions`}\r\n                        istestTrialNeeded = {this.props.istest1TrialNeeded}\r\n                        testPercent = {this.props.test1Percent}\r\n                        />} \r\n                    exact\r\n                />\r\n                <Route path={`${process.env.PUBLIC_URL}/Test1/modes/questions`} component={\r\n                    (props)=>\r\n                    <Questions1 \r\n                        {...props} \r\n                        test1Percent = {this.props.test1Percent}\r\n                        updateResultsForChart = {this.props.updateResultsForChart}\r\n                    />} exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test1/modes/demoquestions`} component={\r\n                    (props)=>\r\n                    <Questions1 \r\n                        {...props} \r\n                        test1Percent = {this.props.test1Percent}\r\n                        updateResultsForChart = {this.props.updateResultsForChart}\r\n                    />} exact/>\r\n\r\n                <Route path={`${process.env.PUBLIC_URL}/Test2`} component={\r\n                    ()=> <Test2\r\n                        findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                        updateTestPercent = {this.props.updateTestPercent}\r\n\r\n                        />\r\n                    } \r\n                    exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test2/modes`} component={\r\n                    () => <TestMode \r\n                        realUrl={`Test2/modes/questions`}\r\n                        demoUrl={`Test2/modes/demoquestions`}\r\n                        istestTrialNeeded = {this.props.istest2TrialNeeded}\r\n                        testPercent = {this.props.test2Percent}\r\n                        />} \r\n                    exact\r\n                />\r\n                <Route path={`${process.env.PUBLIC_URL}/Test2/modes/questions`} component={\r\n                    (props)=>\r\n                    <Questions2 \r\n                        {...props} \r\n                        test2Percent = {this.props.test2Percent}\r\n                        updateResultsForChart = {this.props.updateResultsForChart}\r\n                    />} exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test2/modes/demoquestions`} component={\r\n                    (props)=>\r\n                    <Questions2 \r\n                        {...props} \r\n                        test2Percent = {this.props.test2Percent}\r\n                        updateResultsForChart = {this.props.updateResultsForChart}\r\n                    />} exact/>\r\n\r\n                <Route path={`${process.env.PUBLIC_URL}/Test3`} component={\r\n                    ()=>\r\n                        <Test3\r\n                        findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                        updateTestPercent = {this.props.updateTestPercent}\r\n\r\n                        />\r\n                    } \r\n                    exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test3/modes`} component={\r\n                    () => <TestMode \r\n                        realUrl={`Test3/modes/questions`}\r\n                        demoUrl={`Test3/modes/demoquestions`}\r\n                        istestTrialNeeded = {this.props.istest3TrialNeeded}\r\n                        testPercent = {this.props.test3Percent}\r\n                        />} \r\n                    exact\r\n                />\r\n                <Route path={`${process.env.PUBLIC_URL}/Test3/modes/questions`} component={\r\n                    (props)=>\r\n                    <Questions3 \r\n                        {...props} \r\n                        test3Percent = {this.props.test3Percent}\r\n                        updateResultsForChart = {this.props.updateResultsForChart}\r\n                        />} exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test3/modes/demoquestions`} component={\r\n                    (props)=>\r\n                    <Questions3 \r\n                        {...props} \r\n                        test3Percent = {this.props.test3Percent}\r\n                        updateResultsForChart = {this.props.updateResultsForChart}\r\n                        />} exact/>\r\n\r\n                <Route path={`${process.env.PUBLIC_URL}/Test4`} component={\r\n                    ()=> \r\n                        <Test4\r\n                        findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                        updateTestPercent = {this.props.updateTestPercent}\r\n\r\n                        />\r\n                    } \r\n                    exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test4/modes`} component={\r\n                    () => <TestMode \r\n                        realUrl={`Test4/modes/questions`}\r\n                        demoUrl={`Test4/modes/demoquestions`}\r\n                        istestTrialNeeded = {this.props.istest4TrialNeeded}\r\n                        testPercent = {this.props.test4Percent}\r\n                        />} \r\n                    exact\r\n                />\r\n                <Route path={`${process.env.PUBLIC_URL}/Test4/modes/questions`} component={\r\n                    (props)=>\r\n                    <Questions4 \r\n                        {...props}\r\n                        test4Percent = {this.props.test4Percent}\r\n                        updateResultsForChart = {this.props.updateResultsForChart}\r\n                        />} exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test4/modes/demoquestions`} component={\r\n                    (props)=>\r\n                    <Questions4 \r\n                        {...props} \r\n                        test4Percent = {this.props.test4Percent}\r\n                        updateResultsForChart = {this.props.updateResultsForChart}\r\n                        />} exact/>\r\n\r\n                <Route path={`${process.env.PUBLIC_URL}/Test6`} component={\r\n                    ()=>\r\n                    <Test6\r\n                    findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                    updateTestPercent = {this.props.updateTestPercent}\r\n\r\n                    />\r\n                    } \r\n                    exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test6/modes`} component={\r\n                    () => <TestMode \r\n                        realUrl={`Test6/modes/questions`}\r\n                        demoUrl={`Test6/modes/demoquestions`}\r\n                        istestTrialNeeded = {this.props.istest6TrialNeeded}\r\n                        testPercent = {this.props.test6Percent}\r\n                        />} \r\n                    exact\r\n                />\r\n                <Route path={`${process.env.PUBLIC_URL}/Test6/modes/questions`} component={\r\n                    (props)=>\r\n                    <Questions6 \r\n                        {...props} \r\n                        test6Percent = {this.props.test6Percent}\r\n                        updateResultsForChart = {this.props.updateResultsForChart}\r\n                        />} exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test6/modes/demoquestions`} component={\r\n                    (props)=>\r\n                    <Questions6\r\n                        {...props} \r\n                        test6Percent = {this.props.test6Percent}\r\n                        updateResultsForChart = {this.props.updateResultsForChart}\r\n                        />} exact/>\r\n\r\n                <Route path={`${process.env.PUBLIC_URL}/Test7`} component={\r\n                    ()=><Test7\r\n                        findIfTrialNeeded = {this.props.findIfTrialNeeded}\r\n                        updateTestPercent = {this.props.updateTestPercent}\r\n                        />\r\n                    \r\n                    } \r\n                    exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test7/modes`} component={\r\n                    () => <TestMode \r\n                        realUrl={`Test7/modes/questions`}\r\n                        demoUrl={`Test7/modes/demoquestions`}\r\n                        istestTrialNeeded = {this.props.istest7TrialNeeded}\r\n                        testPercent = {this.props.test7Percent}\r\n                        />} \r\n                    exact\r\n                />\r\n                <Route path={`${process.env.PUBLIC_URL}/Test7/modes/questions`} component={\r\n                    (props)=><Questions7 \r\n                    {...props} \r\n                    test7Percent = {this.props.test7Percent}\r\n                    updateResultsForChart = {this.props.updateResultsForChart}\r\n                    />} exact/>\r\n                <Route path={`${process.env.PUBLIC_URL}/Test7/modes/demoquestions`} component={\r\n                    (props)=><Questions7\r\n                    {...props} \r\n                    test7Percent = {this.props.test7Percent}\r\n                    updateResultsForChart = {this.props.updateResultsForChart}\r\n                    />\r\n                } exact/>\r\n\r\n\r\n                {/* <Redirect from=\"/some\" Component={TestList}/> */}\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;","import React, { Component } from 'react';\r\nimport './burgerArrow.css';\r\nclass BurgerArrow extends Component {\r\n\r\n    state={\r\n        clicked: false,\r\n        className: 'arrow-burger-holder'\r\n    }\r\n\r\n    clickBurger=()=>{\r\n        let clicked = this.state.clicked;\r\n        this.props.openInstuctions(clicked);\r\n        clicked = !clicked;\r\n        if (clicked) {\r\n            this.setState({clicked, className:'arrow-burger-holder open'});\r\n        }\r\n        else{\r\n            this.setState({clicked, className:'arrow-burger-holder'});\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let className = this.state.className;\r\n        return (\r\n            <div className={className} onClick={this.clickBurger}>\r\n                <div className=\"burger-top\">\r\n                    <div className=\"arrow-burger\">\r\n                        <span className=\"arrow-top\"></span>\r\n                        <span className=\"arrow-middle\"></span>\r\n                        <span className=\"arrow-bottom\"></span>\r\n                    </div>\r\n                    <div className=\"arrow-text\">ინსტრუქცია</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerArrow;","import React, { Component } from 'react';\r\nimport './instructions.css';\r\n\r\nclass Instructions extends Component {\r\n    render() {\r\n        return (\r\n                <div className={this.props.className}>\r\n                    რა არის Lorem Ipsum?\r\n                    Lorem Ipsum საბეჭდი და ტიპოგრაფიული ინდუსტრიის უშინაარსო ტექსტია. იგი სტანდარტად 1500-იანი წლებიდან იქცა, \r\n                    როდესაც უცნობმა მბეჭდავმა ამწყობ დაზგაზე წიგნის საცდელი ეგზემპლარი დაბეჭდა. მისი ტექსტი არამარტო 5 საუკუნის \r\n                    მანძილზე შემორჩა, არამედ მან დღემდე, ელექტრონული ტიპოგრაფიის დრომდეც უცვლელად მოაღწია. განსაკუთრებული \r\n                    პოპულარობა მას 1960-იან წლებში გამოსულმა Letraset-ის ცნობილმა ტრაფარეტებმა მოუტანა, უფრო მოგვიანებით კი — A\r\n                    ldus PageMaker-ის ტიპის საგამომცემლო პროგრამებმა, რომლებშიც Lorem Ipsum-ის სხვადასხვა ვერსიები იყო ჩაშენებული.\r\n\r\n                    რატომ ვიყენებთ მას?\r\n                    ცნობილი ფაქტია, რომ გვერდის წაკითხვად შიგთავსს შეუძლია მკითხველის ყურადღება მიიზიდოს და დიზაინის აღქმაში \r\n                    ხელი შეუშალოს. Lorem Ipsum-ის გამოყენებით ვღებულობთ იმაზე მეტ-ნაკლებად სწორი გადანაწილების ტექსტს, ვიდრე \r\n                    ერთიდაიგივე გამეორებადი სიტყვებია ხოლმე. შედეგად, ტექსტი ჩვეულებრივ ინგლისურს გავს, მისი წაითხვა კი შეუძლებელია.\r\n                     დღეს უამრავი პერსონალური საგამომცემლო პროგრამა და ვებგვერდი იყენებს Lorem Ipsum-ს, როგორც დროებით ტექსტს წყობის \r\n                     შესავსებად; Lorem Ipsum-ის მოძებნისას კი საძიებო სისტემები ბევრ დაუსრულებელ გვერდს გვიჩვენებენ. წლების მანძილზე ამ\r\n                      ტექსტის უამრავი ვერსია გამოჩნდა, ზოგი შემთხვევით დაშვებული შეცდომის გამო, ზოგი კი — განზრახ, ხუმრობით.\r\n\r\n\r\n                    საიდან მოდის ეს ტექსტი?\r\n                    გავრცელებული მოსაზრებით, Lorem Ipsum შემთხვევითი ტექსტი სულაც არაა. მისი ფესვები ჯერკიდევ ჩვ. წ. \r\n                    აღ-მდე 45 წლის დროინდელი კლასიკური ლათინური ლიტერატურიდან მოდის. ვირჯინიის შტატში მდებარე\r\n                     ჰემპდენ-სიდნეის კოლეჯის პროფესორმა რიჩარდ მაკკლინტოკმა აიღო ერთ-ერთი ყველაზე იშვიათი ლათინური სიტყვა \r\n                     \"consectetur\" Lorem Ipsum-პასაჟიდან და გადაწყვიტა მოეძებნა იგი კლასიკურ ლიტერატურაში. ძიება შედეგიანი \r\n                     აღმოჩნდა — ტექსტი Lorem Ipsum გადმოწერილი ყოფილა ციცერონის \"de Finibus Bonorum et Malorum\"-ის 1.10.32 \r\n                     და 1.10.33 თავებიდან. ეს წიგნი ეთიკის თეორიის ტრაქტატია, რომელიც რენესანსის პერიოდში ძალიან იყო გავრცელებული. \r\n                     Lorem Ipsum-ის პირველი ხაზი, \"Lorem ipsum dolor sit amet...\" სწორედ ამ წიგნის 1.10.32 თავიდანაა.\r\n\r\n\r\n                    მათთვის, ვისაც აინტერესებს, ქვევით მოყვანილია Lorem Ipsum-ის ორიგინალი ნაწყვეტი 1500-იანი წლებიდან. \r\n                    ასევე შეგიძლიათ ნახოთ 1.10.32 და 1.10.33 თავები ციცერონის \"de Finibus Bonorum et Malorum\"-დან, რომელსაც\r\n                     თან ერთვის 1914 წელს ჰ. რექჰამის შესრულებული ინგლისურენოვანი თარგმანი.\r\n\r\n                    სად ვიშოვო?\r\n                    დღეს უკვე Lorem Ipsum-პასაჟის უამრავი ვერსია არსებობს. მათი დიდი ნაწილი ხუმრობით არის \r\n                    შეცვლილი, ბევრი კი უბრალოდ სიტყვების შემთხვევითი გენერირებით დაიწერა. ინტერნეტში არსებული გენერატორები, \r\n                    როგორც წესი, წინასწარ განსაზღვრული ტექსტის ნაგლეჯს იმეორებენ ხოლმე, ამიტომ ეს პირველი ნამდვილი გენერატორია. \r\n                    იგი რთული და მართებული სტრუქტურის წინადადებების ასაწყობად 200-მდე ლათინური სიტყვისგან შემდგარ ლექსიკონს იყენებს.\r\n                     შედეგად მიიღება ტექსტი, რომელიც ვიზუალურად მაქსიმალურად ახლოსაა რეალურთან. გენერირებული Lorem Ipsum \r\n                     არასოდეს არ არის გამეორებადი, შემთხვევითი სიტყვების ან ხუმრობების შემცველი.\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Instructions;","import React, { Component } from 'react';\r\nimport avatar from '../../assets/images/avatar-user.png';\r\nimport './avatarImage.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass AvatarImage extends Component {\r\n\r\n    state={\r\n        className : \"avatar-image\",\r\n        opened: false\r\n    }\r\n\r\n    openUserPanelHandler = () => {\r\n        let className = this.state.className;\r\n        let opened = this.state.opened;\r\n        if (opened){\r\n            className = \"avatar-image\";\r\n            opened = ! opened;\r\n        }\r\n        else{\r\n            className = \"avatar-image open\";\r\n            opened = !opened;\r\n        }\r\n        this.setState({className, opened});\r\n    }\r\n    \r\n    render() {\r\n        let className = this.state.className;\r\n\r\n        return (\r\n            <div className={className} onClick={this.openUserPanelHandler} >\r\n                <img src={avatar}  alt=\"avatar-image\"/>\r\n                <div className=\"user-Details\">\r\n                    <NavLink className=\"avatar-nav\" to=\"\">შესრულებული ტესტები</NavLink>\r\n                    <NavLink className=\"avatar-nav\" to=\"\">გამოსვლა</NavLink>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AvatarImage;","import React, { Component } from 'react';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport Burger from '../common/burger/burger';\r\nimport SideNav from '../components/sideNav/sideNav';\r\nimport Router from '../router/router';\r\nimport BurgerArrow from '../common/burgerArrow/burgerArrow';\r\nimport Instuctions from '../common/instructions/instructions';\r\nimport {Cookies } from 'react-cookie';\r\nimport Charts from '../common/charts/charts';\r\nimport AvatarImage from '../common/avatarImage/avatarImage';\r\n\r\nclass MainApp extends Component {\r\n\r\n    state={\r\n        className : 'sideNav-holder',\r\n        instClassName: 'instructions',\r\n        resultsForChart : null,\r\n\r\n        istest1TrialNeeded: null,\r\n        test1Trial : null,\r\n        test1Percent : null,\r\n\r\n        istest2TrialNeeded: null,\r\n        test2Trial : null,\r\n        test2Percent : null,\r\n\r\n        istest3TrialNeeded: null,\r\n        test3Trial : null,\r\n        test3Percent : null,\r\n\r\n        istest4TrialNeeded: null,\r\n        test4Trial : null,\r\n        test4Percent : null,\r\n\r\n        istest5TrialNeeded: null,\r\n        test5Trial : null,\r\n        test5Percent : null,\r\n\r\n        istest6TrialNeeded: null,\r\n        test6Trial : null,\r\n        test6Percent : null,\r\n\r\n        istest7TrialNeeded: null,\r\n        test7Trial : null,\r\n        test7Percent : null\r\n    }\r\n\r\n    \r\n    findIfTrialNeeded = (key,value)=>{\r\n        this.setState({[key]:value});\r\n        let cookie = new Cookies();\r\n        cookie.set('trial', value, {path:'/'});\r\n    }\r\n\r\n    openSideNav=(clicked)=>{\r\n        let className = this.state.className;\r\n        if(!clicked){\r\n            className='sideNav-holder open';\r\n            this.setState({className});\r\n        }\r\n        else{\r\n            className='sideNav-holder';\r\n            this.setState({className});\r\n        }\r\n    }\r\n\r\n    openInstuctions = (clicked) =>{\r\n        let instClassName = this.state.instClassName;\r\n        if(!clicked){\r\n            instClassName = \"instructions open\";\r\n            this.setState({instClassName});\r\n        }\r\n        else{\r\n            instClassName = \"instructions\";\r\n            this.setState({instClassName});\r\n        }\r\n    }\r\n\r\n    updateTestPercent = (key,value) =>{\r\n        this.setState({[key]: value});\r\n        let cookie = new Cookies();\r\n        cookie.set('percent', value, {path:'/'});\r\n    }\r\n\r\n    updateResultsForChart =(results)=>{\r\n        let resultsForChart = results;\r\n        this.setState({resultsForChart});\r\n        console.log(resultsForChart);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let {className, instClassName, resultsForChart} = {...this.state}\r\n        let {istest1TrialNeeded, istest2TrialNeeded, istest3TrialNeeded, istest4TrialNeeded, istest5TrialNeeded, istest6TrialNeeded, istest7TrialNeeded} = {...this.state};\r\n        let test7Percent = this.state.test7Percent;\r\n        return (\r\n            <React.Fragment>\r\n                <BrowserRouter basename=\"/\">\r\n                    <Burger openNavigation= {this.openSideNav}/>\r\n                    <AvatarImage/>\r\n                    <BurgerArrow openInstuctions= {this.openInstuctions}/>\r\n                    <SideNav className={className}/>\r\n                    <Instuctions className={instClassName}/>\r\n                    <Router \r\n                        findIfTrialNeeded = {this.findIfTrialNeeded}\r\n                        updateTestPercent = {this.updateTestPercent}\r\n                        istest1TrialNeeded = {istest1TrialNeeded}\r\n                        istest2TrialNeeded = {istest2TrialNeeded}\r\n                        istest3TrialNeeded = {istest3TrialNeeded}\r\n                        istest4TrialNeeded = {istest4TrialNeeded}\r\n                        istest5TrialNeeded = {istest5TrialNeeded}\r\n                        istest6TrialNeeded = {istest6TrialNeeded}\r\n                        istest7TrialNeeded = {istest7TrialNeeded}\r\n                        test7Percent = {test7Percent}\r\n                        resultsForChart = {resultsForChart}\r\n                        updateResultsForChart = {this.updateResultsForChart}\r\n                        />\r\n                </BrowserRouter>\r\n            </React.Fragment>\r\n          );\r\n    }\r\n}\r\n\r\nexport default MainApp;","import React from 'react';\r\nimport './App.css';\r\nimport MainApp from './components/mainApp';\r\nfunction App() {\r\n  return (\r\n    <MainApp/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}